{"title":"UE4 反射编程","uid":"cde83abaa86ff43674449a34230233bc","slug":"7_08_UE4反射编程","date":"2022-10-06T07:28:25.958Z","updated":"2023-01-10T01:10:19.443Z","comments":true,"path":"api/articles/7_08_UE4反射编程.json","keywords":null,"cover":"https://cdn.jsdelivr.net/gh/FHangH/FHangBlogCDN_03@master/Aurora_ (24).webp","content":"<h1 id=\"UE4-反射编程\"><a href=\"#UE4-反射编程\" class=\"headerlink\" title=\"UE4 反射编程\"></a>UE4 反射编程</h1><p>[toc]</p>\n<h3 id=\"1-准备工作\"><a href=\"#1-准备工作\" class=\"headerlink\" title=\"1. 准备工作\"></a>1. 准备工作</h3><ol>\n<li><p>新建空白<code>ue4 cpp</code>项目：<code>Reflective</code></p>\n</li>\n<li><p>打开<code>ReflectiveGameModeBase.h</code></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">pragma</span> once</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;CoreMinimal.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;GameFramework/GameModeBase.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;ReflectiveGameModeBase.generated.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">UCLASS</span>()</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">REFLECTIVE_API</span> ReflectiveGameModeBase : <span class=\"keyword\">public</span> AGameModeBase</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">GENERATED_UCLASS_BODY</span>()</span><br><span class=\"line\">\t</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改<code>ReflectiveGameModeBase.cpp</code>，创建构造函数</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;ReflectiveGameModeBase.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">ReflectiveGameModeBase::<span class=\"built_in\">ReflectiveGameModeBase</span>(<span class=\"type\">const</span> FObjectInitializer&amp; ObjectInitializer)</span><br><span class=\"line\">\t:<span class=\"built_in\">AGameModeBase</span>(ObjectInitializer)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"comment\">// Reflection Succeed</span></span><br><span class=\"line\">\t<span class=\"built_in\">UE_LOG</span>(LogTemp, Log, <span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;[ Hello Reflective ]&quot;</span>));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>编译运行：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LogTemp: [ <span class=\"type\">Hello</span> <span class=\"type\">Reflective</span> ]</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"2-获取类名\"><a href=\"#2-获取类名\" class=\"headerlink\" title=\"2. 获取类名\"></a>2. 获取类名</h3><ol>\n<li><p>创建<code>UE4 None类型 cpp文件</code>：<code>Student</code></p>\n</li>\n<li><p><code>Student.h</code></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">pragma</span> once</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;CoreMinimal.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">REFLECTIVE_API</span> Student</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">Student</span>();</span><br><span class=\"line\">    ~<span class=\"built_in\">Student</span>();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><code>Student.cpp</code></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;Student.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">Student::<span class=\"built_in\">Student</span>()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Student::~<span class=\"built_in\">Student</span>()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>需要进行修改，才能拥有虚幻的反射功能</p>\n</li>\n<li><p><code>Student.h</code></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">pragma</span> once</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;CoreMinimal.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;Student.generated.h&quot;</span> <span class=\"comment\">// 1. #include &quot;文件名.generated.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">UCLASS</span>() <span class=\"comment\">// 2. UCLASS() 是虚幻提供的类反射</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">REFLECTIVE_API</span> UStudent : <span class=\"keyword\">public</span> UObject <span class=\"comment\">// 3. 需要继承UObject才能使用UCALSS(), 类名前面要加U</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">GENERATED_BODY</span>() <span class=\"comment\">// 4. 要加入 GENERATED_BODY()</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">UStudent</span>(); <span class=\"comment\">// 5. 类名前要统一加U</span></span><br><span class=\"line\">    <span class=\"comment\">// 6. 因为继承UObject，不需要考虑垃圾回收，~Student()不需要</span></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><code>Student.cpp</code></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;Student.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">UStudent::<span class=\"built_in\">UStudent</span>() <span class=\"comment\">// 1. 类名前加 U</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 2. 不需要 Student::~Student()&#123;&#125;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>开始获取类型</p>\n</li>\n<li><p><code>ReflectiveGameModeBase.cpp</code></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;ReflectiveGameModeBase.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;Student.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">ReflectiveGameModeBase::<span class=\"built_in\">ReflectiveGameModeBase</span>(<span class=\"type\">const</span> FObjectInitializer&amp; ObjectInitializer)</span><br><span class=\"line\">\t:<span class=\"built_in\">AGameModeBase</span>(ObjectInitializer)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"comment\">// Get Class Name By Reflection</span></span><br><span class=\"line\">\t<span class=\"built_in\">UE_LOG</span>(LogTemp, Log, <span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;[ Get Class Name ]&quot;</span>));</span><br><span class=\"line\">\tUStudent *Student = <span class=\"built_in\">NewObject</span>&lt;UStudent&gt;();</span><br><span class=\"line\">\t<span class=\"type\">const</span> UClass *StudentClass = Student-&gt;<span class=\"built_in\">GetClass</span>();</span><br><span class=\"line\">\t<span class=\"type\">const</span> FName StudentName = StudentClass-&gt;<span class=\"built_in\">GetFName</span>();</span><br><span class=\"line\">\t<span class=\"built_in\">UE_LOG</span>(LogTemp, Warning, <span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;&lt;-- Class Name: %s --&gt;&quot;</span>), *StudentName.<span class=\"built_in\">ToString</span>());</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>打印结果：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LogTemp: [ <span class=\"type\">Get</span> <span class=\"type\">Class</span> <span class=\"type\">Name</span> ]</span><br><span class=\"line\">LogTemp: Warning: &lt;<span class=\"literal\">--</span> <span class=\"class\"><span class=\"keyword\">Class</span> <span class=\"title\">Name</span>: <span class=\"title\">Student</span> --&gt;</span></span><br></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"3-获取类标签\"><a href=\"#3-获取类标签\" class=\"headerlink\" title=\"3. 获取类标签\"></a>3. 获取类标签</h3><ol>\n<li><p><code>Student.h</code></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">pragma</span> once</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;CoreMinimal.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;Student.generated.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">UCLASS</span>(BlueprintType) <span class=\"comment\">// 此次填入 BlueprintType</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">REFLECTIVE_API</span> UStudent : <span class=\"keyword\">public</span> UObject</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">GENERATED_BODY</span>()</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">UStudent</span>();</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><code>ReflectiveGameModeBase.cpp</code></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;ReflectiveGameModeBase.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;Student.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">ReflectiveGameModeBase::<span class=\"built_in\">ReflectiveGameModeBase</span>(<span class=\"type\">const</span> FObjectInitializer&amp; ObjectInitializer)</span><br><span class=\"line\">\t:<span class=\"built_in\">AGameModeBase</span>(ObjectInitializer)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    UStudent *Student = <span class=\"built_in\">NewObject</span>&lt;UStudent&gt;();</span><br><span class=\"line\">\t<span class=\"type\">const</span> UClass *StudentClass = Student-&gt;<span class=\"built_in\">GetClass</span>();</span><br><span class=\"line\">\t<span class=\"type\">const</span> FName StudentName = StudentClass-&gt;<span class=\"built_in\">GetFName</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// Get Class Flags By Reflection</span></span><br><span class=\"line\">\t<span class=\"built_in\">UE_LOG</span>(LogTemp, Log, <span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;[ Get Class Flags ]&quot;</span>));</span><br><span class=\"line\">\tEClassFlags StudentClassFlags = StudentClass-&gt;ClassFlags;</span><br><span class=\"line\">\t<span class=\"built_in\">UE_LOG</span>(LogTemp, Warning, <span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;&lt;-- Class Name: %s, Class Flags: %x --&gt;&quot;</span>),</span><br><span class=\"line\">\t\t*StudentName.<span class=\"built_in\">ToString</span>(), StudentClassFlags);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>打印结果</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LogTemp: [ <span class=\"type\">Get</span> <span class=\"type\">Class</span> <span class=\"type\">Flags</span> ]</span><br><span class=\"line\">LogTemp: Warning: &lt;<span class=\"literal\">--</span> <span class=\"class\"><span class=\"keyword\">Class</span> <span class=\"title\">Name</span>: <span class=\"title\">Student</span>, <span class=\"title\">Class</span> <span class=\"title\">Flags</span>: 305000<span class=\"title\">a0</span> --&gt;</span></span><br></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"4-获取类属性\"><a href=\"#4-获取类属性\" class=\"headerlink\" title=\"4. 获取类属性\"></a>4. 获取类属性</h3><ol>\n<li><p><code>Student.h</code></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">pragma</span> once</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;CoreMinimal.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;Student.generated.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">UCLASS</span>(BlueprintType)</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">REFLECTIVE_API</span> UStudent : <span class=\"keyword\">public</span> UObject</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">GENERATED_BODY</span>()</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">UStudent</span>();</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"keyword\">private</span>: <span class=\"comment\">// 添加属性，要加入UPROPERTY()，否则无法参与反射</span></span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>()</span><br><span class=\"line\">\tFString Name;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>()</span><br><span class=\"line\">\tFString Country;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><code>Student.cpp</code></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;Student.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">UStudent::<span class=\"built_in\">UStudent</span>()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tName = <span class=\"string\">&quot;FHang&quot;</span>;</span><br><span class=\"line\">\tCountry = <span class=\"string\">&quot;China&quot;</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><code>ReflectiveGameModeBase.cpp</code></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;ReflectiveGameModeBase.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;Student.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">ReflectiveGameModeBase::<span class=\"built_in\">ReflectiveGameModeBase</span>(<span class=\"type\">const</span> FObjectInitializer&amp; ObjectInitializer)</span><br><span class=\"line\">\t:<span class=\"built_in\">AGameModeBase</span>(ObjectInitializer)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    UStudent *Student = <span class=\"built_in\">NewObject</span>&lt;UStudent&gt;();</span><br><span class=\"line\">\t<span class=\"type\">const</span> UClass *StudentClass = Student-&gt;<span class=\"built_in\">GetClass</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// Get Class Property Value By Reflection</span></span><br><span class=\"line\">\t<span class=\"built_in\">UE_LOG</span>(LogTemp, Log, <span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;[ Get Class Property Value ]&quot;</span>))</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (FProperty *Property = StudentClass-&gt;PropertyLink; Property; Property = Property-&gt;PropertyLinkNext)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tFString PropertyName = Property-&gt;<span class=\"built_in\">GetName</span>();</span><br><span class=\"line\">\t\tFString PropertyType = Property-&gt;<span class=\"built_in\">GetCPPType</span>();</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (PropertyType == <span class=\"string\">&quot;FString&quot;</span>)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"type\">const</span> FStrProperty *StringProperty = <span class=\"built_in\">CastField</span>&lt;FStrProperty&gt;(Property);</span><br><span class=\"line\">\t\t\t<span class=\"type\">void</span> *Address = StringProperty-&gt;<span class=\"built_in\">ContainerPtrToValuePtr</span>&lt;<span class=\"type\">void</span>&gt;(Student);</span><br><span class=\"line\">\t\t\tFString PropertyValue = StringProperty-&gt;<span class=\"built_in\">GetPropertyValue</span>(Address);</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">UE_LOG</span>(LogTemp, Warning, <span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;&lt;-- Class Property: %s, Type: %s, Value: %s--&gt;&quot;</span>),</span><br><span class=\"line\">\t\t\t\t*PropertyName, *PropertyType, *PropertyValue);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>打印结果：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LogTemp: [ <span class=\"type\">Get</span> <span class=\"type\">Class</span> <span class=\"type\">Property</span> <span class=\"type\">Value</span> ]</span><br><span class=\"line\">LogTemp: Warning: &lt;<span class=\"literal\">--</span> <span class=\"class\"><span class=\"keyword\">Class</span> <span class=\"title\">Property</span>: <span class=\"title\">Name</span>, <span class=\"title\">Type</span>: <span class=\"title\">FString</span>, <span class=\"title\">Value</span>: <span class=\"title\">FHang</span> --&gt;</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">LogTemp</span>: <span class=\"title\">Warning</span>: &lt;-- <span class=\"title\">Class</span> <span class=\"title\">Property</span>: <span class=\"title\">Country</span>, <span class=\"title\">Type</span>: <span class=\"title\">FString</span>, <span class=\"title\">Value</span>: <span class=\"title\">China</span> --&gt;</span></span><br></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"5-获取类属性元数据\"><a href=\"#5-获取类属性元数据\" class=\"headerlink\" title=\"5. 获取类属性元数据\"></a>5. 获取类属性元数据</h3><ol>\n<li><p><code>Student.h</code></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">pragma</span> once</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;CoreMinimal.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;Student.generated.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">UCLASS</span>(BlueprintType)</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">REFLECTIVE_API</span> UStudent : <span class=\"keyword\">public</span> UObject</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">GENERATED_BODY</span>()</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">UStudent</span>();</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(VisibleAnywhere, Category=<span class=\"string\">&quot;Info&quot;</span>) <span class=\"comment\">// 添加元数据</span></span><br><span class=\"line\">\tFString Name;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>()</span><br><span class=\"line\">\tFString Country;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><code>ReflectiveGameModeBase.cpp</code></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;ReflectiveGameModeBase.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;Student.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">ReflectiveGameModeBase::<span class=\"built_in\">ReflectiveGameModeBase</span>(<span class=\"type\">const</span> FObjectInitializer&amp; ObjectInitializer)</span><br><span class=\"line\">\t:<span class=\"built_in\">AGameModeBase</span>(ObjectInitializer)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    UStudent *Student = <span class=\"built_in\">NewObject</span>&lt;UStudent&gt;();</span><br><span class=\"line\">\t<span class=\"type\">const</span> UClass *StudentClass = Student-&gt;<span class=\"built_in\">GetClass</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// Get Class Property Value By Reflection</span></span><br><span class=\"line\">\t<span class=\"built_in\">UE_LOG</span>(LogTemp, Log, <span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;[ Get Class Property Value ]&quot;</span>))</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (FProperty *Property = StudentClass-&gt;PropertyLink; Property; Property = Property-&gt;PropertyLinkNext)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">        <span class=\"comment\">// Get Class Property Meta By Reflection</span></span><br><span class=\"line\">\t\t<span class=\"built_in\">UE_LOG</span>(LogTemp, Log, <span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;[ Get Class Property Meta ]&quot;</span>))</span><br><span class=\"line\">\t\tFString PropertyMeta = Property-&gt;<span class=\"built_in\">GetMetaData</span>(<span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;Category&quot;</span>));</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (PropertyType == <span class=\"string\">&quot;FString&quot;</span>)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"type\">const</span> FStrProperty *StringProperty = <span class=\"built_in\">CastField</span>&lt;FStrProperty&gt;(Property);</span><br><span class=\"line\">\t\t\t<span class=\"type\">void</span> *Address = StringProperty-&gt;<span class=\"built_in\">ContainerPtrToValuePtr</span>&lt;<span class=\"type\">void</span>&gt;(Student);</span><br><span class=\"line\">\t\t\tFString PropertyValue = StringProperty-&gt;<span class=\"built_in\">GetPropertyValue</span>(Address);</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">UE_LOG</span>(LogTemp, Warning, <span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;&lt;-- Class Property Meta: %s --&gt;&quot;</span>), *PropertyMeta);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>打印结果：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LogTemp: [ <span class=\"type\">Get</span> <span class=\"type\">Class</span> <span class=\"type\">Property</span> <span class=\"type\">Value</span> ]</span><br><span class=\"line\">LogTemp: [ <span class=\"type\">Get</span> <span class=\"type\">Class</span> <span class=\"type\">Property</span> <span class=\"type\">Meta</span> ]</span><br><span class=\"line\">LogTemp: Warning: &lt;<span class=\"literal\">--</span> <span class=\"class\"><span class=\"keyword\">Class</span> <span class=\"title\">Property</span> <span class=\"title\">Meta</span>: <span class=\"title\">Info</span> --&gt;</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">LogTemp</span>: <span class=\"title\">Warning</span>: &lt;-- <span class=\"title\">Class</span> <span class=\"title\">Property</span> <span class=\"title\">Meta</span>:  --&gt;</span></span><br></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"6-设置类属性值\"><a href=\"#6-设置类属性值\" class=\"headerlink\" title=\"6. 设置类属性值\"></a>6. 设置类属性值</h3><ol>\n<li><p><code>ReflectiveGameModeBase.cpp</code></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;ReflectiveGameModeBase.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;Student.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">ReflectiveGameModeBase::<span class=\"built_in\">ReflectiveGameModeBase</span>(<span class=\"type\">const</span> FObjectInitializer&amp; ObjectInitializer)</span><br><span class=\"line\">\t:<span class=\"built_in\">AGameModeBase</span>(ObjectInitializer)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    UStudent *Student = <span class=\"built_in\">NewObject</span>&lt;UStudent&gt;();</span><br><span class=\"line\">\t<span class=\"type\">const</span> UClass *StudentClass = Student-&gt;<span class=\"built_in\">GetClass</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// Get Class Property Value By Reflection</span></span><br><span class=\"line\">\t<span class=\"built_in\">UE_LOG</span>(LogTemp, Log, <span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;[ Get Class Property Value ]&quot;</span>))</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (FProperty *Property = StudentClass-&gt;PropertyLink; Property; Property = Property-&gt;PropertyLinkNext)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tFString PropertyName = Property-&gt;<span class=\"built_in\">GetName</span>();</span><br><span class=\"line\">\t\tFString PropertyType = Property-&gt;<span class=\"built_in\">GetCPPType</span>();</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (PropertyType == <span class=\"string\">&quot;FString&quot;</span>)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"type\">const</span> FStrProperty *StringProperty = <span class=\"built_in\">CastField</span>&lt;FStrProperty&gt;(Property);</span><br><span class=\"line\">\t\t\t<span class=\"type\">void</span> *Address = StringProperty-&gt;<span class=\"built_in\">ContainerPtrToValuePtr</span>&lt;<span class=\"type\">void</span>&gt;(Student);</span><br><span class=\"line\">\t\t\tFString PropertyValue = StringProperty-&gt;<span class=\"built_in\">GetPropertyValue</span>(Address);</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">UE_LOG</span>(LogTemp, Warning, <span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;&lt;-- Class Property: %s, Type: %s, Value: %s --&gt;&quot;</span>),</span><br><span class=\"line\">\t\t\t\t*PropertyName, *PropertyType, *PropertyValue);</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// Set Class Property Value By Reflection</span></span><br><span class=\"line\">\t\t\t<span class=\"built_in\">UE_LOG</span>(LogTemp, Log, <span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;[ Set Class Property Value ]&quot;</span>))</span><br><span class=\"line\">\t\t\tStringProperty-&gt;<span class=\"built_in\">SetPropertyValue</span>(Address, <span class=\"string\">&quot;XXXX&quot;</span>);</span><br><span class=\"line\">\t\t\tFString NewStringProperty = StringProperty-&gt;<span class=\"built_in\">GetPropertyValue</span>(Address);</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">UE_LOG</span>(LogTemp, Warning, <span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;&lt;-- Class Property: %s, Type: %s, Value: %s --&gt;&quot;</span>),</span><br><span class=\"line\">\t\t\t\t*PropertyName, *PropertyType, *NewStringProperty);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>打印结果：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LogTemp: [ <span class=\"type\">Get</span> <span class=\"type\">Class</span> <span class=\"type\">Property</span> <span class=\"type\">Value</span> ]</span><br><span class=\"line\">LogTemp: Warning: &lt;<span class=\"literal\">--</span> <span class=\"class\"><span class=\"keyword\">Class</span> <span class=\"title\">Property</span>: <span class=\"title\">Name</span>, <span class=\"title\">Type</span>: <span class=\"title\">FString</span>, <span class=\"title\">Value</span>: <span class=\"title\">FHang</span> --&gt;</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">LogTemp</span>: [ <span class=\"title\">Set</span> <span class=\"title\">Class</span> <span class=\"title\">Property</span> <span class=\"title\">Value</span> ]</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">LogTemp</span>: <span class=\"title\">Warning</span>: &lt;-- <span class=\"title\">Class</span> <span class=\"title\">Property</span>: <span class=\"title\">Name</span>, <span class=\"title\">Type</span>: <span class=\"title\">FString</span>, <span class=\"title\">Value</span>: <span class=\"title\">XXXX</span> --&gt;</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">LogTemp</span>: <span class=\"title\">Warning</span>: &lt;-- <span class=\"title\">Class</span> <span class=\"title\">Property</span>: <span class=\"title\">Country</span>, <span class=\"title\">Type</span>: <span class=\"title\">FString</span>, <span class=\"title\">Value</span>: <span class=\"title\">China</span> --&gt;</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">LogTemp</span>: [ <span class=\"title\">Set</span> <span class=\"title\">Class</span> <span class=\"title\">Property</span> <span class=\"title\">Value</span> ]</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">LogTemp</span>: <span class=\"title\">Warning</span>: &lt;-- <span class=\"title\">Class</span> <span class=\"title\">Property</span>: <span class=\"title\">Country</span>, <span class=\"title\">Type</span>: <span class=\"title\">FString</span>, <span class=\"title\">Value</span>: <span class=\"title\">XXXX</span> --&gt;</span></span><br></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"7-获得类函数名\"><a href=\"#7-获得类函数名\" class=\"headerlink\" title=\"7. 获得类函数名\"></a>7. 获得类函数名</h3><ol>\n<li><p><code>Student.h</code></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">pragma</span> once</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;CoreMinimal.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;Student.generated.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">UCLASS</span>(BlueprintType)</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">REFLECTIVE_API</span> UStudent : <span class=\"keyword\">public</span> UObject</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">GENERATED_BODY</span>()</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">UStudent</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(VisibleAnywhere, Category=<span class=\"string\">&quot;Info&quot;</span>)</span><br><span class=\"line\">\tFString Name;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>()</span><br><span class=\"line\">\tFString Country;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">UFUNCTION</span>(BlueprintCallable)</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Study</span><span class=\"params\">()</span></span>&#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">UFUNCTION</span>()</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Demo01</span><span class=\"params\">(<span class=\"type\">int</span> a, <span class=\"type\">bool</span> isA)</span></span>&#123;&#125;;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><code>ReflectiveGameModeBase.cpp</code></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;ReflectiveGameModeBase.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;Student.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">ReflectiveGameModeBase::<span class=\"built_in\">ReflectiveGameModeBase</span>(<span class=\"type\">const</span> FObjectInitializer&amp; ObjectInitializer)</span><br><span class=\"line\">\t:<span class=\"built_in\">AGameModeBase</span>(ObjectInitializer)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    UStudent *Student = <span class=\"built_in\">NewObject</span>&lt;UStudent&gt;();</span><br><span class=\"line\">\t<span class=\"type\">const</span> UClass *StudentClass = Student-&gt;<span class=\"built_in\">GetClass</span>();</span><br><span class=\"line\">    <span class=\"type\">const</span> FName StudentName = StudentClass-&gt;<span class=\"built_in\">GetFName</span>();</span><br><span class=\"line\">\t</span><br><span class=\"line\">    <span class=\"comment\">// Get Class Function Name By Reflection</span></span><br><span class=\"line\">\t<span class=\"built_in\">UE_LOG</span>(LogTemp, Log, <span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;[ Get Class Function ]&quot;</span>));</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (TFieldIterator&lt;UFunction&gt; <span class=\"built_in\">IteratorOfFunction</span>(StudentClass); IteratorOfFunction; ++IteratorOfFunction)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">const</span> UFunction *Function = *IteratorOfFunction;</span><br><span class=\"line\">\t\tFString FunctionName = Function-&gt;<span class=\"built_in\">GetName</span>();</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (FunctionName == <span class=\"string\">&quot;ExecuteUbergraph&quot;</span>)&#123;<span class=\"keyword\">continue</span>;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"built_in\">UE_LOG</span>(LogTemp, Warning, <span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;&lt;-- Class: %s, Function: %s --&gt;&quot;</span>), *StudentName.<span class=\"built_in\">ToString</span>(),</span><br><span class=\"line\">\t\t\t*FunctionName);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>打印结果：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LogTemp: [ <span class=\"type\">Get</span> <span class=\"type\">Class</span> <span class=\"type\">Function</span> ]</span><br><span class=\"line\">LogTemp: Warning: &lt;<span class=\"literal\">--</span> <span class=\"class\"><span class=\"keyword\">Class</span>: <span class=\"title\">Student</span>, <span class=\"title\">Function</span>: <span class=\"title\">Study</span> --&gt;</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">LogTemp</span>: <span class=\"title\">Warning</span>: &lt;-- <span class=\"title\">Class</span>: <span class=\"title\">Student</span>, <span class=\"title\">Function</span>: <span class=\"title\">Demo01</span> --&gt;</span></span><br></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"8-获取类函数标签\"><a href=\"#8-获取类函数标签\" class=\"headerlink\" title=\"8. 获取类函数标签\"></a>8. 获取类函数标签</h3><ol>\n<li><p><code>ReflectiveGameModeBase.cpp</code></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;ReflectiveGameModeBase.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;Student.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">ReflectiveGameModeBase::<span class=\"built_in\">ReflectiveGameModeBase</span>(<span class=\"type\">const</span> FObjectInitializer&amp; ObjectInitializer)</span><br><span class=\"line\">\t:<span class=\"built_in\">AGameModeBase</span>(ObjectInitializer)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    UStudent *Student = <span class=\"built_in\">NewObject</span>&lt;UStudent&gt;();</span><br><span class=\"line\">\t<span class=\"type\">const</span> UClass *StudentClass = Student-&gt;<span class=\"built_in\">GetClass</span>();</span><br><span class=\"line\">    <span class=\"type\">const</span> FName StudentName = StudentClass-&gt;<span class=\"built_in\">GetFName</span>();</span><br><span class=\"line\">\t</span><br><span class=\"line\">    <span class=\"comment\">// Get Class Function Name By Reflection</span></span><br><span class=\"line\">\t<span class=\"built_in\">UE_LOG</span>(LogTemp, Log, <span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;[ Get Class Function ]&quot;</span>));</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (TFieldIterator&lt;UFunction&gt; <span class=\"built_in\">IteratorOfFunction</span>(StudentClass); IteratorOfFunction; ++IteratorOfFunction)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">const</span> UFunction *Function = *IteratorOfFunction;</span><br><span class=\"line\">\t\tFString FunctionName = Function-&gt;<span class=\"built_in\">GetName</span>();</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (FunctionName == <span class=\"string\">&quot;ExecuteUbergraph&quot;</span>)&#123;<span class=\"keyword\">continue</span>;&#125;</span><br><span class=\"line\">        \t\t</span><br><span class=\"line\">        <span class=\"comment\">// Get Class Function Flags</span></span><br><span class=\"line\">\t\t<span class=\"built_in\">UE_LOG</span>(LogTemp, Log, <span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;[ Get Class Function Flags ]&quot;</span>))</span><br><span class=\"line\">\t\tEFunctionFlags FunctionFlags = Function-&gt;FunctionFlags;</span><br><span class=\"line\">\t\t<span class=\"built_in\">UE_LOG</span>(LogTemp, Warning, <span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;&lt;-- Class: %s, Function: %s, Flags: %x --&gt;&quot;</span>), *StudentName.<span class=\"built_in\">ToString</span>(),</span><br><span class=\"line\">\t\t\t*FunctionName, FunctionFlags);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>打印结果：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LogTemp: [ <span class=\"type\">Get</span> <span class=\"type\">Class</span> <span class=\"type\">Function</span> ]</span><br><span class=\"line\">LogTemp: [ <span class=\"type\">Get</span> <span class=\"type\">Class</span> <span class=\"type\">Function</span> <span class=\"type\">Flags</span> ]</span><br><span class=\"line\">LogTemp: Warning: &lt;<span class=\"literal\">--</span> <span class=\"class\"><span class=\"keyword\">Class</span>: <span class=\"title\">Student</span>, <span class=\"title\">Function</span>: <span class=\"title\">Study</span>, <span class=\"title\">Flags</span>: 4020401 --&gt;</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">LogTemp</span>: [ <span class=\"title\">Get</span> <span class=\"title\">Class</span> <span class=\"title\">Function</span> <span class=\"title\">Flags</span> ]</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">LogTemp</span>: <span class=\"title\">Warning</span>: &lt;-- <span class=\"title\">Class</span>: <span class=\"title\">Student</span>, <span class=\"title\">Function</span>: <span class=\"title\">Demo01</span>, <span class=\"title\">Flags</span>: 20401 --&gt;</span></span><br></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"9-获取类函数参数\"><a href=\"#9-获取类函数参数\" class=\"headerlink\" title=\"9. 获取类函数参数\"></a>9. 获取类函数参数</h3><ol>\n<li><p><code>ReflectiveGameModeBase.cpp</code></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;ReflectiveGameModeBase.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;Student.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">ReflectiveGameModeBase::<span class=\"built_in\">ReflectiveGameModeBase</span>(<span class=\"type\">const</span> FObjectInitializer&amp; ObjectInitializer)</span><br><span class=\"line\">\t:<span class=\"built_in\">AGameModeBase</span>(ObjectInitializer)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    UStudent *Student = <span class=\"built_in\">NewObject</span>&lt;UStudent&gt;();</span><br><span class=\"line\">\t<span class=\"type\">const</span> UClass *StudentClass = Student-&gt;<span class=\"built_in\">GetClass</span>();</span><br><span class=\"line\">\t</span><br><span class=\"line\">    <span class=\"comment\">// Get Class Function Name By Reflection</span></span><br><span class=\"line\">\t<span class=\"built_in\">UE_LOG</span>(LogTemp, Log, <span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;[ Get Class Function ]&quot;</span>));</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (TFieldIterator&lt;UFunction&gt; <span class=\"built_in\">IteratorOfFunction</span>(StudentClass); IteratorOfFunction; ++IteratorOfFunction)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">const</span> UFunction *Function = *IteratorOfFunction;</span><br><span class=\"line\">\t\tFString FunctionName = Function-&gt;<span class=\"built_in\">GetName</span>();</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (FunctionName == <span class=\"string\">&quot;ExecuteUbergraph&quot;</span>)&#123;<span class=\"keyword\">continue</span>;&#125;</span><br><span class=\"line\">        \t\t</span><br><span class=\"line\">        <span class=\"comment\">// Get Class Function Params By Reflection</span></span><br><span class=\"line\">\t\t<span class=\"built_in\">UE_LOG</span>(LogTemp, Log, <span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;[ Get Function Params ]&quot;</span>));</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (TFieldIterator&lt;FProperty&gt; <span class=\"built_in\">IteratorOfParams</span>(Function); IteratorOfParams; ++IteratorOfParams)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"type\">const</span> FProperty *Param = *IteratorOfParams;</span><br><span class=\"line\">\t\t\tFString ParamType = Param-&gt;<span class=\"built_in\">GetCPPType</span>();</span><br><span class=\"line\">\t\t\tFString ParamName = Param-&gt;<span class=\"built_in\">GetName</span>();</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">UE_LOG</span>(LogTemp, Warning, <span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;&lt;-- Function: %s, ParamType: %s, ParamName: %s --&gt;&quot;</span>),</span><br><span class=\"line\">\t\t\t\t*FunctionName, *ParamType, *ParamName);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>打印结果：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LogTemp: [ <span class=\"type\">Get</span> <span class=\"type\">Class</span> <span class=\"type\">Function</span> ]</span><br><span class=\"line\">LogTemp: [ <span class=\"type\">Get</span> <span class=\"type\">Function</span> <span class=\"type\">Params</span> ]</span><br><span class=\"line\">LogTemp: Warning: &lt;<span class=\"literal\">--</span> Function: Demo01, ParamType: int32, ParamName: a <span class=\"literal\">--</span>&gt;</span><br><span class=\"line\">LogTemp: Warning: &lt;<span class=\"literal\">--</span> Function: Demo01, ParamType: bool, ParamName: isA <span class=\"literal\">--</span>&gt;</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"10-获取类函数参数标签\"><a href=\"#10-获取类函数参数标签\" class=\"headerlink\" title=\"10. 获取类函数参数标签\"></a>10. 获取类函数参数标签</h3><ol>\n<li><p><code>ReflectiveGameModeBase.cpp</code></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;ReflectiveGameModeBase.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;Student.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">ReflectiveGameModeBase::<span class=\"built_in\">ReflectiveGameModeBase</span>(<span class=\"type\">const</span> FObjectInitializer&amp; ObjectInitializer)</span><br><span class=\"line\">\t:<span class=\"built_in\">AGameModeBase</span>(ObjectInitializer)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    UStudent *Student = <span class=\"built_in\">NewObject</span>&lt;UStudent&gt;();</span><br><span class=\"line\">\t<span class=\"type\">const</span> UClass *StudentClass = Student-&gt;<span class=\"built_in\">GetClass</span>();</span><br><span class=\"line\">\t</span><br><span class=\"line\">    <span class=\"comment\">// Get Class Function Name By Reflection</span></span><br><span class=\"line\">\t<span class=\"built_in\">UE_LOG</span>(LogTemp, Log, <span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;[ Get Class Function ]&quot;</span>));</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (TFieldIterator&lt;UFunction&gt; <span class=\"built_in\">IteratorOfFunction</span>(StudentClass); IteratorOfFunction; ++IteratorOfFunction)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">const</span> UFunction *Function = *IteratorOfFunction;</span><br><span class=\"line\">\t\tFString FunctionName = Function-&gt;<span class=\"built_in\">GetName</span>();</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (FunctionName == <span class=\"string\">&quot;ExecuteUbergraph&quot;</span>)&#123;<span class=\"keyword\">continue</span>;&#125;</span><br><span class=\"line\">        \t\t</span><br><span class=\"line\">        <span class=\"comment\">// Get Class Function Params By Reflection</span></span><br><span class=\"line\">\t\t<span class=\"built_in\">UE_LOG</span>(LogTemp, Log, <span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;[ Get Function Params ]&quot;</span>));</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (TFieldIterator&lt;FProperty&gt; <span class=\"built_in\">IteratorOfParams</span>(Function); IteratorOfParams; ++IteratorOfParams)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"type\">const</span> FProperty *Param = *IteratorOfParams;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// Get Function Params Flags By Reflection</span></span><br><span class=\"line\">\t\t\t<span class=\"built_in\">UE_LOG</span>(LogTemp, Log, <span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;[ Get Params Flags ]&quot;</span>));</span><br><span class=\"line\">\t\t\tEPropertyFlags ParamFlag = Param-&gt;<span class=\"built_in\">GetPropertyFlags</span>();</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">UE_LOG</span>(LogTemp, Warning, <span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;&lt;-- Function: %s, Flags: %x --&gt;&quot;</span>),</span><br><span class=\"line\">\t\t\t\t*FunctionName, ParamFlag);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>打印结果：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LogTemp: [ <span class=\"type\">Get</span> <span class=\"type\">Class</span> <span class=\"type\">Function</span> ]</span><br><span class=\"line\">LogTemp: [ <span class=\"type\">Get</span> <span class=\"type\">Function</span> <span class=\"type\">Params</span> ]</span><br><span class=\"line\">LogTemp: [ <span class=\"type\">Get</span> <span class=\"type\">Params</span> <span class=\"type\">Flags</span> ]</span><br><span class=\"line\">LogTemp: Warning: &lt;<span class=\"literal\">--</span> Function: Demo01, ParamType: int32, ParamName: a, Flags: <span class=\"number\">40000280</span> <span class=\"literal\">--</span>&gt;</span><br><span class=\"line\">LogTemp: [ <span class=\"type\">Get</span> <span class=\"type\">Params</span> <span class=\"type\">Flags</span> ]</span><br><span class=\"line\">LogTemp: Warning: &lt;<span class=\"literal\">--</span> Function: Demo01, ParamType: bool, ParamName: isA, Flags: <span class=\"number\">40000280</span> <span class=\"literal\">--</span>&gt;</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"11-获取父类\"><a href=\"#11-获取父类\" class=\"headerlink\" title=\"11. 获取父类\"></a>11. 获取父类</h3><ol>\n<li><p>新建<code>Student</code>子类<code>SubStudent</code></p>\n</li>\n<li><p><code>ReflectiveGameModeBase.cpp</code></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;ReflectiveGameModeBase.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;SubStudent.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">ReflectiveGameModeBase::<span class=\"built_in\">ReflectiveGameModeBase</span>(<span class=\"type\">const</span> FObjectInitializer&amp; ObjectInitializer)</span><br><span class=\"line\">\t:<span class=\"built_in\">AGameModeBase</span>(ObjectInitializer)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"comment\">// Get SubClass FatherClass By Reflection</span></span><br><span class=\"line\">\t<span class=\"built_in\">UE_LOG</span>(LogTemp, Log, <span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;[ Get FatherClass ]&quot;</span>));</span><br><span class=\"line\">\t<span class=\"type\">const</span> USubStudent *SubStudent = <span class=\"built_in\">NewObject</span>&lt;USubStudent&gt;();</span><br><span class=\"line\">\t<span class=\"type\">const</span> UClass *FatherClass = SubStudent-&gt;<span class=\"built_in\">GetClass</span>()-&gt;<span class=\"built_in\">GetSuperClass</span>();</span><br><span class=\"line\">\t<span class=\"type\">const</span> FString SubClassName = SubStudent-&gt;<span class=\"built_in\">GetClass</span>()-&gt;<span class=\"built_in\">GetName</span>();</span><br><span class=\"line\">\t<span class=\"type\">const</span> FString FatherClassName = FatherClass-&gt;<span class=\"built_in\">GetName</span>();</span><br><span class=\"line\">\t<span class=\"built_in\">UE_LOG</span>(LogTemp, Warning, <span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;&lt;-- SubClass: %s, SuperClass: %s --&gt;&quot;</span>), *SubClassName, *FatherClassName);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>打印结果：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LogTemp: [ <span class=\"type\">Get</span> <span class=\"type\">FatherClass</span> ]</span><br><span class=\"line\">LogTemp: Warning: &lt;<span class=\"literal\">--</span> SubClass: SubStudent, SuperClass: Student <span class=\"literal\">--</span>&gt;</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"12-判断是否是子类\"><a href=\"#12-判断是否是子类\" class=\"headerlink\" title=\"12. 判断是否是子类\"></a>12. 判断是否是子类</h3><ol>\n<li><p><code>ReflectiveGameModeBase.cpp</code></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;ReflectiveGameModeBase.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;Student.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;SubStudent.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">ReflectiveGameModeBase::<span class=\"built_in\">ReflectiveGameModeBase</span>(<span class=\"type\">const</span> FObjectInitializer&amp; ObjectInitializer)</span><br><span class=\"line\">\t:<span class=\"built_in\">AGameModeBase</span>(ObjectInitializer)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"comment\">// Determine if the current class is a subclass of another class By Reflection</span></span><br><span class=\"line\">\t<span class=\"built_in\">UE_LOG</span>(LogTemp, Log, <span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;[ Determine Is SubClass ]&quot;</span>));</span><br><span class=\"line\">\t<span class=\"type\">const</span> UClass *Class1 = UStudent::<span class=\"built_in\">StaticClass</span>();</span><br><span class=\"line\">\t<span class=\"type\">const</span> UClass *Class2 = USubStudent::<span class=\"built_in\">StaticClass</span>();</span><br><span class=\"line\">\t<span class=\"type\">const</span> UClass *Class3 = AActor::<span class=\"built_in\">StaticClass</span>();</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (Class2-&gt;<span class=\"built_in\">IsChildOf</span>(Class1))</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">UE_LOG</span>(LogTemp, Warning, <span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;&lt;-- %s Is %s SubClass --&gt;&quot;</span>), </span><br><span class=\"line\">\t\t\t*Class2-&gt;<span class=\"built_in\">GetName</span>(), *Class1-&gt;<span class=\"built_in\">GetName</span>());</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!Class3-&gt;<span class=\"built_in\">IsChildOf</span>(Class1))</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">UE_LOG</span>(LogTemp, Warning, <span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;&lt;-- %s Is Not %s SubClass --&gt;&quot;</span>),</span><br><span class=\"line\">\t\t\t*Class3-&gt;<span class=\"built_in\">GetName</span>(), *Class1-&gt;<span class=\"built_in\">GetName</span>());</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>打印结果：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LogTemp: [ <span class=\"type\">Determine</span> <span class=\"type\">Is</span> <span class=\"type\">SubClass</span> ]</span><br><span class=\"line\">LogTemp: Warning: &lt;<span class=\"literal\">--</span> SubStudent Is Student SubClass <span class=\"literal\">--</span>&gt;</span><br><span class=\"line\">LogTemp: Warning: &lt;<span class=\"literal\">--</span> Actor Is Not Student SubClass <span class=\"literal\">--</span>&gt;</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"13-查找类的所有子类\"><a href=\"#13-查找类的所有子类\" class=\"headerlink\" title=\"13. 查找类的所有子类\"></a>13. 查找类的所有子类</h3><ol>\n<li><p>新建<code>Student</code>子类<code>Sub1Student</code></p>\n</li>\n<li><p><code>ReflectiveGameModeBase.cpp</code></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;ReflectiveGameModeBase.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;Student.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">ReflectiveGameModeBase::<span class=\"built_in\">ReflectiveGameModeBase</span>(<span class=\"type\">const</span> FObjectInitializer&amp; ObjectInitializer)</span><br><span class=\"line\">\t:<span class=\"built_in\">AGameModeBase</span>(ObjectInitializer)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"type\">const</span> *NewStudent = <span class=\"built_in\">NewObject</span>&lt;UStudent&gt;();</span><br><span class=\"line\">\t<span class=\"type\">const</span> UClass *FatherClass = NewStudent-&gt;<span class=\"built_in\">GetClass</span>();</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">// Find Current Class All Of SubClass By Reflection</span></span><br><span class=\"line\">\t<span class=\"built_in\">UE_LOG</span>(LogTemp, Log, <span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;[ Get Current Class All Of SubClass ]&quot;</span>));</span><br><span class=\"line\">\tTArray&lt;UClass*&gt; ClassArray;</span><br><span class=\"line\">\t<span class=\"built_in\">GetDerivedClasses</span>(FatherClass, ClassArray, <span class=\"literal\">false</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">UE_LOG</span>(LogTemp, Warning, <span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;&lt;-- SuperClass: %s --&gt;&quot;</span>), *FatherClassName);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">const</span> <span class=\"keyword\">auto</span> &amp;Elem : ClassArray)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">UE_LOG</span>(LogTemp, Warning, <span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;&lt;-- SubClass: %s --&gt;&quot;</span>), *Elem-&gt;<span class=\"built_in\">GetName</span>());</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>打印结果：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LogTemp: [ <span class=\"type\">Get</span> <span class=\"type\">Current</span> <span class=\"type\">Class</span> <span class=\"type\">All</span> <span class=\"type\">Of</span> <span class=\"type\">SubClass</span> ]</span><br><span class=\"line\">LogTemp: Warning: &lt;<span class=\"literal\">--</span> SuperClass: Student <span class=\"literal\">--</span>&gt;</span><br><span class=\"line\">LogTemp: Warning: &lt;<span class=\"literal\">--</span> SubClass: Sub1Student <span class=\"literal\">--</span>&gt;</span><br><span class=\"line\">LogTemp: Warning: &lt;<span class=\"literal\">--</span> SubClass: SubStudent <span class=\"literal\">--</span>&gt;</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"14-查找类生成的所有对象\"><a href=\"#14-查找类生成的所有对象\" class=\"headerlink\" title=\"14. 查找类生成的所有对象\"></a>14. 查找类生成的所有对象</h3><ol>\n<li><p><code>ReflectiveGameModeBase.cpp</code></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;ReflectiveGameModeBase.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;Sub1Student.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">ReflectiveGameModeBase::<span class=\"built_in\">ReflectiveGameModeBase</span>(<span class=\"type\">const</span> FObjectInitializer&amp; ObjectInitializer)</span><br><span class=\"line\">\t:<span class=\"built_in\">AGameModeBase</span>(ObjectInitializer)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"comment\">// Get Current Class Generated Objects By Reflection</span></span><br><span class=\"line\">\t<span class=\"built_in\">UE_LOG</span>(LogTemp, Log, <span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;[ Get Current Class Generated Objects ]&quot;</span>));</span><br><span class=\"line\">\tTArray&lt;UObject*&gt; ObjectsArray;</span><br><span class=\"line\">\tUSub1Student *Sub1Student = <span class=\"built_in\">NewObject</span>&lt;USub1Student&gt;(<span class=\"keyword\">this</span>, <span class=\"built_in\">FName</span>(<span class=\"string\">&quot;Sub1Student&quot;</span>));</span><br><span class=\"line\">\tUSub1Student *Sub1 = <span class=\"built_in\">NewObject</span>&lt;USub1Student&gt;(<span class=\"keyword\">this</span>, <span class=\"built_in\">FName</span>(<span class=\"string\">&quot;Sub1&quot;</span>));</span><br><span class=\"line\">\t<span class=\"built_in\">GetObjectsOfClass</span>(USub1Student::<span class=\"built_in\">StaticClass</span>(), ObjectsArray, <span class=\"literal\">false</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">UE_LOG</span>(LogTemp, Warning, <span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;&lt;-- Current Class: %s --&gt;&quot;</span>), *Sub1Student-&gt;<span class=\"built_in\">GetName</span>());</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">const</span> <span class=\"keyword\">auto</span> &amp;Elem : ObjectsArray)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">UE_LOG</span>(LogTemp, Warning, <span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;&lt;-- Object: %s --&gt;&quot;</span>), *Elem-&gt;<span class=\"built_in\">GetName</span>());</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>打印结果：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LogTemp: [ <span class=\"type\">Get</span> <span class=\"type\">Current</span> <span class=\"type\">Class</span> <span class=\"type\">Generated</span> <span class=\"type\">Objects</span> ]</span><br><span class=\"line\">LogTemp: Warning: &lt;<span class=\"literal\">--</span> Current <span class=\"class\"><span class=\"keyword\">Class</span>: <span class=\"title\">Sub1Student</span> --&gt;</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">LogTemp</span>: <span class=\"title\">Warning</span>: &lt;-- <span class=\"title\">Object</span>: <span class=\"title\">Sub1Student</span> --&gt;</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">LogTemp</span>: <span class=\"title\">Warning</span>: &lt;-- <span class=\"title\">Object</span>: <span class=\"title\">Sub1</span> --&gt;</span></span><br></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"15-通过字符串查找类\"><a href=\"#15-通过字符串查找类\" class=\"headerlink\" title=\"15. 通过字符串查找类\"></a>15. 通过字符串查找类</h3><ol>\n<li><p><code>ReflectiveGameModeBase.cpp</code></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;ReflectiveGameModeBase.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">ReflectiveGameModeBase::<span class=\"built_in\">ReflectiveGameModeBase</span>(<span class=\"type\">const</span> FObjectInitializer&amp; ObjectInitializer)</span><br><span class=\"line\">\t:<span class=\"built_in\">AGameModeBase</span>(ObjectInitializer)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"comment\">// Use String Find Class By Reflection</span></span><br><span class=\"line\">\t<span class=\"built_in\">UE_LOG</span>(LogTemp, Log, <span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;[ Use String Find Class ]&quot;</span>));</span><br><span class=\"line\">\tUClass *FindedClass = <span class=\"built_in\">FindObject</span>&lt;UClass&gt;(ANY_PACKAGE, *<span class=\"built_in\">FString</span>(<span class=\"string\">&quot;Student&quot;</span>), <span class=\"literal\">true</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (FindedClass)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">UE_LOG</span>(LogTemp, Warning, <span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;&lt;-- Find %s Succeed --&gt;&quot;</span>), *FindedClass-&gt;<span class=\"built_in\">GetName</span>());</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>打印结果：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LogTemp: [ <span class=\"type\">Use</span> <span class=\"built_in\">String</span> <span class=\"type\">Find</span> <span class=\"type\">Class</span> ]</span><br><span class=\"line\">LogTemp: Warning: &lt;<span class=\"literal\">--</span> Find Student Succeed <span class=\"literal\">--</span>&gt;</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"16-通过字符查找枚举\"><a href=\"#16-通过字符查找枚举\" class=\"headerlink\" title=\"16. 通过字符查找枚举\"></a>16. 通过字符查找枚举</h3><ol>\n<li><p><code>Student.h</code>中定义<code>EStudentType</code>枚举</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">pragma</span> once</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;CoreMinimal.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;Student.generated.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">UENUM</span>()</span><br><span class=\"line\"><span class=\"keyword\">enum class</span> <span class=\"title class_\">EStudentType</span> : uint8</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"function\">E_GOOD <span class=\"title\">UMETA</span><span class=\"params\">(DisplayName = <span class=\"string\">&quot;GOOD&quot;</span>)</span>,</span></span><br><span class=\"line\"><span class=\"function\">\tE_BAD <span class=\"title\">UMETA</span><span class=\"params\">(DisplayName = <span class=\"string\">&quot;BAD&quot;</span>)</span></span></span><br><span class=\"line\"><span class=\"function\">&#125;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">UCLASS</span>(BlueprintType)</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">REFLECTIVE_API</span> UStudent : <span class=\"keyword\">public</span> UObject</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">GENERATED_BODY</span>()</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">UStudent</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(VisibleAnywhere, Category=<span class=\"string\">&quot;Info&quot;</span>)</span><br><span class=\"line\">\tFString Name;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>()</span><br><span class=\"line\">\tFString Country;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">UFUNCTION</span>(BlueprintCallable)</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Study</span><span class=\"params\">()</span></span>&#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">UFUNCTION</span>()</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Demo01</span><span class=\"params\">(<span class=\"type\">int</span> a, <span class=\"type\">bool</span> isA)</span></span>&#123;&#125;;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><code>ReflectiveGameModeBase.cpp</code></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;ReflectiveGameModeBase.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">ReflectiveGameModeBase::<span class=\"built_in\">ReflectiveGameModeBase</span>(<span class=\"type\">const</span> FObjectInitializer&amp; ObjectInitializer)</span><br><span class=\"line\">\t:<span class=\"built_in\">AGameModeBase</span>(ObjectInitializer)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"comment\">// Use String Find Enum By Reflection</span></span><br><span class=\"line\">\t<span class=\"built_in\">UE_LOG</span>(LogTemp, Log, <span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;[ Use String Find Enum ]&quot;</span>));</span><br><span class=\"line\">\tUEnum *FindedEnum = <span class=\"built_in\">FindObject</span>&lt;UEnum&gt;(ANY_PACKAGE, *<span class=\"built_in\">FString</span>(<span class=\"string\">&quot;EStudentType&quot;</span>), <span class=\"literal\">true</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (FindedEnum)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">UE_LOG</span>(LogTemp, Warning, <span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;&lt;-- Find %s Succeed --&gt;&quot;</span>), *FindedEnum-&gt;<span class=\"built_in\">GetName</span>());</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>打印结果：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LogTemp: [ <span class=\"type\">Use</span> <span class=\"built_in\">String</span> <span class=\"type\">Find</span> <span class=\"type\">Enum</span> ]</span><br><span class=\"line\">LogTemp: Warning: &lt;<span class=\"literal\">--</span> Find EStudentType Succeed <span class=\"literal\">--</span>&gt;</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"17-获得枚举的所有项\"><a href=\"#17-获得枚举的所有项\" class=\"headerlink\" title=\"17. 获得枚举的所有项\"></a>17. 获得枚举的所有项</h3><ol>\n<li><p><code>ReflectiveGameModeBase.cpp</code></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;ReflectiveGameModeBase.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">ReflectiveGameModeBase::<span class=\"built_in\">ReflectiveGameModeBase</span>(<span class=\"type\">const</span> FObjectInitializer&amp; ObjectInitializer)</span><br><span class=\"line\">\t:<span class=\"built_in\">AGameModeBase</span>(ObjectInitializer)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"comment\">// Use String Find Enum By Reflection</span></span><br><span class=\"line\">\t<span class=\"built_in\">UE_LOG</span>(LogTemp, Log, <span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;[ Use String Find Enum ]&quot;</span>));</span><br><span class=\"line\">\tUEnum *FindedEnum = <span class=\"built_in\">FindObject</span>&lt;UEnum&gt;(ANY_PACKAGE, *<span class=\"built_in\">FString</span>(<span class=\"string\">&quot;EStudentType&quot;</span>), <span class=\"literal\">true</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (FindedEnum)</span><br><span class=\"line\">\t&#123;        \t\t</span><br><span class=\"line\">        <span class=\"comment\">// Get Current Enum All Of Elements By Reflection</span></span><br><span class=\"line\">\t\t<span class=\"built_in\">UE_LOG</span>(LogTemp, Log, <span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;[ Get Current Enum All Of Elements ]&quot;</span>));</span><br><span class=\"line\">\t\t<span class=\"built_in\">UE_LOG</span>(LogTemp, Warning, <span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;&lt;-- Enum: %s --&gt;&quot;</span>), *FindedEnum-&gt;<span class=\"built_in\">GetName</span>());</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (int8 Index = <span class=\"number\">0</span>; Index &lt; FindedEnum-&gt;<span class=\"built_in\">NumEnums</span>(); ++Index)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">UE_LOG</span>(LogTemp, Warning, <span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;Elem: %s&quot;</span>), *FindedEnum-&gt;<span class=\"built_in\">GetNameStringByIndex</span>(Index));</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>打印结果：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LogTemp: [ <span class=\"type\">Get</span> <span class=\"type\">Current</span> <span class=\"type\">Enum</span> <span class=\"type\">All</span> <span class=\"type\">Of</span> <span class=\"type\">Elements</span> ]</span><br><span class=\"line\">LogTemp: Warning: &lt;<span class=\"literal\">--</span> <span class=\"class\"><span class=\"keyword\">Enum</span>: <span class=\"title\">EStudentType</span> --&gt;</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">LogTemp</span>: <span class=\"title\">Warning</span>: <span class=\"title\">Elem</span>: <span class=\"title\">E_GOOD</span></span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">LogTemp</span>: <span class=\"title\">Warning</span>: <span class=\"title\">Elem</span>: <span class=\"title\">E_BAD</span></span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">LogTemp</span>: <span class=\"title\">Warning</span>: <span class=\"title\">Elem</span>: <span class=\"title\">E_MAX</span></span></span><br></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"18-通过字符串查找蓝图类\"><a href=\"#18-通过字符串查找蓝图类\" class=\"headerlink\" title=\"18. 通过字符串查找蓝图类\"></a>18. 通过字符串查找蓝图类</h3><ol>\n<li><p><code>ReflectiveGameModeBase.cpp</code></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;ReflectiveGameModeBase.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">ReflectiveGameModeBase::<span class=\"built_in\">ReflectiveGameModeBase</span>(<span class=\"type\">const</span> FObjectInitializer&amp; ObjectInitializer)</span><br><span class=\"line\">\t:<span class=\"built_in\">AGameModeBase</span>(ObjectInitializer)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"comment\">// Use String Find Blueprint Class</span></span><br><span class=\"line\">\t<span class=\"built_in\">UE_LOG</span>(LogTemp, Log, <span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;[ Use String Find Blueprint Class ]&quot;</span>));</span><br><span class=\"line\">\tUBlueprint *FindedBlueprint = <span class=\"built_in\">FindObject</span>&lt;UBlueprint&gt;(ANY_PACKAGE, *<span class=\"built_in\">FString</span>(<span class=\"string\">&quot;BP_Student&quot;</span>));</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (FindedBlueprint)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">UE_LOG</span>(LogTemp, Warning, <span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;&lt;-- Find %s Succeed --&gt;&quot;</span>), *FindedBlueprint-&gt;<span class=\"built_in\">GetName</span>());</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>打印结果：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LogTemp: [ <span class=\"type\">Use</span> <span class=\"built_in\">String</span> <span class=\"type\">Find</span> <span class=\"type\">Blueprint</span> <span class=\"type\">Class</span> ]</span><br><span class=\"line\">LogTemp: &lt;<span class=\"literal\">--</span> Find BP_Student Succeed <span class=\"literal\">--</span>&gt;</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"19-判断蓝图是否是Native\"><a href=\"#19-判断蓝图是否是Native\" class=\"headerlink\" title=\"19. 判断蓝图是否是Native\"></a>19. 判断蓝图是否是Native</h3><ol>\n<li><p>在<code>UE</code>中通过<code>Student.cpp</code>类新建<code>BP_Student</code>蓝图类</p>\n</li>\n<li><p><code>ReflectiveGameModeBase.cpp</code></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;ReflectiveGameModeBase.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">ReflectiveGameModeBase::<span class=\"built_in\">ReflectiveGameModeBase</span>(<span class=\"type\">const</span> FObjectInitializer&amp; ObjectInitializer)</span><br><span class=\"line\">\t:<span class=\"built_in\">AGameModeBase</span>(ObjectInitializer)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"comment\">// Use String Find Blueprint Class</span></span><br><span class=\"line\">\t<span class=\"built_in\">UE_LOG</span>(LogTemp, Log, <span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;[ Use String Find Blueprint Class ]&quot;</span>));</span><br><span class=\"line\">\tUBlueprint *FindedBlueprint = <span class=\"built_in\">FindObject</span>&lt;UBlueprint&gt;(ANY_PACKAGE, *<span class=\"built_in\">FString</span>(<span class=\"string\">&quot;BP_Student&quot;</span>));</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (FindedBlueprint)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// Determine Is BlueprintClass Or Native(Cpp) Class By Reflection</span></span><br><span class=\"line\">\t\t<span class=\"built_in\">UE_LOG</span>(LogTemp, Log, <span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;[ Determine Is BlueprintClass Or Native ]&quot;</span>));</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (!FindedBlueprint-&gt;<span class=\"built_in\">IsNative</span>())</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">UE_LOG</span>(LogTemp, Warning, <span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;&lt;-- %s Is Blueprint Class --&gt;&quot;</span>), *FindedBlueprint-&gt;<span class=\"built_in\">GetName</span>());</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">UE_LOG</span>(LogTemp, Warning, <span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;&lt;-- %s Is Native Class --&gt;&quot;</span>), *FindedBlueprint-&gt;<span class=\"built_in\">GetName</span>());</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>打印结果：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LogTemp: [ <span class=\"type\">Use</span> <span class=\"built_in\">String</span> <span class=\"type\">Find</span> <span class=\"type\">Blueprint</span> <span class=\"type\">Class</span> ]</span><br><span class=\"line\">LogTemp: [ <span class=\"type\">Determine</span> <span class=\"type\">Is</span> <span class=\"type\">BlueprintClass</span> <span class=\"type\">Or</span> <span class=\"type\">Native</span> ]</span><br><span class=\"line\">LogTemp: &lt;<span class=\"literal\">--</span> BP_Student Is Blueprint <span class=\"class\"><span class=\"keyword\">Class</span> --&gt;</span></span><br></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"20-获取所有类\"><a href=\"#20-获取所有类\" class=\"headerlink\" title=\"20. 获取所有类\"></a>20. 获取所有类</h3><ol>\n<li><p><code>ReflectiveGameModeBase.cpp</code></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;ReflectiveGameModeBase.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">ReflectiveGameModeBase::<span class=\"built_in\">ReflectiveGameModeBase</span>(<span class=\"type\">const</span> FObjectInitializer&amp; ObjectInitializer)</span><br><span class=\"line\">\t:<span class=\"built_in\">AGameModeBase</span>(ObjectInitializer)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"comment\">// Get All Class By Reflection</span></span><br><span class=\"line\">\t<span class=\"built_in\">UE_LOG</span>(LogTemp, Log, <span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;[ Get All Class ]&quot;</span>));</span><br><span class=\"line\">\tTArray&lt;FString&gt; AllClassNames;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (TObjectIterator&lt;UClass&gt; ClassIt; ClassIt; ++ClassIt)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tFString ClassName = ClassIt-&gt;<span class=\"built_in\">GetName</span>();</span><br><span class=\"line\">\t\tAllClassNames.<span class=\"built_in\">Emplace</span>(ClassName);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">const</span> <span class=\"keyword\">auto</span> &amp;Elem : AllClassNames)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (Elem == <span class=\"string\">&quot;Student&quot;</span>)</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">UE_LOG</span>(LogTemp, Warning, <span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;&lt;-- %s --&gt;&quot;</span>), *Elem);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>打印结果：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LogTemp: [ <span class=\"type\">Get</span> <span class=\"type\">All</span> <span class=\"type\">Class</span> ]</span><br><span class=\"line\">LogTemp: Warning: &lt;<span class=\"literal\">--</span> Student <span class=\"literal\">--</span>&gt;</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"21-通过字符串查找类函数\"><a href=\"#21-通过字符串查找类函数\" class=\"headerlink\" title=\"21. 通过字符串查找类函数\"></a>21. 通过字符串查找类函数</h3><ol>\n<li><p><code>SubStudent.h</code>定义函数</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">pragma</span> once</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;CoreMinimal.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;Student.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;SubStudent.generated.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">UCLASS</span>()</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">REFLECTIVE_API</span> USubStudent : <span class=\"keyword\">public</span> UStudent</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">GENERATED_BODY</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">UFUNCTION</span>()</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">PlayGame</span><span class=\"params\">(FString GameName)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">UFUNCTION</span>()</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">IsBoy</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><code>SubStudent.cpp</code>实现函数</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;SubStudent.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">USubStudent::PlayGame</span><span class=\"params\">(FString GameName)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">UE_LOG</span>(LogTemp, Warning, <span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;&lt;-- SubStudent::PlayGame(FString)&gt;&gt; Play %s --&gt;&quot;</span>), *GameName);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">USubStudent::IsBoy</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">UE_LOG</span>(LogTemp, Warning, <span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;&lt;-- SubStudent::IsBoy&gt;&gt; Is Boy --&gt;&quot;</span>));</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><code>ReflectiveGameModeBase.cpp</code></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;ReflectiveGameModeBase.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;USubStudent.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">ReflectiveGameModeBase::<span class=\"built_in\">ReflectiveGameModeBase</span>(<span class=\"type\">const</span> FObjectInitializer&amp; ObjectInitializer)</span><br><span class=\"line\">\t:<span class=\"built_in\">AGameModeBase</span>(ObjectInitializer)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"comment\">// Use String Find Class Function By Reflection</span></span><br><span class=\"line\">\t<span class=\"built_in\">UE_LOG</span>(LogTemp, Log, <span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;[ Use String Find Class Function ]&quot;</span>));</span><br><span class=\"line\">\tUSubStudent *SubStudent01 = <span class=\"built_in\">NewObject</span>&lt;USubStudent&gt;();</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (UClass *SubStudent01Class = SubStudent01-&gt;<span class=\"built_in\">GetClass</span>())</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tUFunction *SubStudent01Function = SubStudent01Class-&gt;<span class=\"built_in\">FindFunctionByName</span>(</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;PlayGame&quot;</span>), EIncludeSuperFlag::ExcludeSuper);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (SubStudent01Function)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">UE_LOG</span>(LogTemp, Warning, <span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;&lt;-- Class: %s, Function: %s --&gt;&quot;</span>),</span><br><span class=\"line\">\t\t\t\t*SubStudent01-&gt;<span class=\"built_in\">GetClass</span>()-&gt;<span class=\"built_in\">GetName</span>(), *SubStudent01Function-&gt;<span class=\"built_in\">GetName</span>());</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>打印结果：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LogTemp: [ <span class=\"type\">Use</span> <span class=\"built_in\">String</span> <span class=\"type\">Find</span> <span class=\"type\">Class</span> <span class=\"type\">Function</span> ]</span><br><span class=\"line\">LogTemp: Warning: &lt;<span class=\"literal\">--</span> <span class=\"class\"><span class=\"keyword\">Class</span>: <span class=\"title\">SubStudent</span>, <span class=\"title\">Function</span>: <span class=\"title\">PlayGame</span> --&gt;</span></span><br></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"22-ProcessEvent调用类函数\"><a href=\"#22-ProcessEvent调用类函数\" class=\"headerlink\" title=\"22. ProcessEvent调用类函数\"></a>22. ProcessEvent调用类函数</h3><ol>\n<li><p><code>ReflectiveGameModeBase.cpp</code></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;ReflectiveGameModeBase.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;USubStudent.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">ReflectiveGameModeBase::<span class=\"built_in\">ReflectiveGameModeBase</span>(<span class=\"type\">const</span> FObjectInitializer&amp; ObjectInitializer)</span><br><span class=\"line\">\t:<span class=\"built_in\">AGameModeBase</span>(ObjectInitializer)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"comment\">// Use String Find Class Function By Reflection</span></span><br><span class=\"line\">\t<span class=\"built_in\">UE_LOG</span>(LogTemp, Log, <span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;[ Use String Find Class Function ]&quot;</span>));</span><br><span class=\"line\">\tUSubStudent *SubStudent01 = <span class=\"built_in\">NewObject</span>&lt;USubStudent&gt;();</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (UClass *SubStudent01Class = SubStudent01-&gt;<span class=\"built_in\">GetClass</span>())</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tUFunction *SubStudent01Function = SubStudent01Class-&gt;<span class=\"built_in\">FindFunctionByName</span>(</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;PlayGame&quot;</span>), EIncludeSuperFlag::ExcludeSuper);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (!SubStudent01Function)&#123;<span class=\"keyword\">break</span>;&#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">\t\t<span class=\"comment\">// ProcessEvent Transfer Class Function By Reflection</span></span><br><span class=\"line\">\t\t<span class=\"built_in\">UE_LOG</span>(LogTemp, Log, <span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;[ ProcessEvent Transfer Class Function ]&quot;</span>));</span><br><span class=\"line\">        </span><br><span class=\"line\">\t\t<span class=\"comment\">// 1.Allocate Space For Parameters</span></span><br><span class=\"line\">\t\tuint16 *AllParamMemory = <span class=\"keyword\">static_cast</span>&lt;uint16*&gt;<span class=\"built_in\">FMemory_Alloca</span>(SubStudent01Function-&gt;ParmsSize);</span><br><span class=\"line\">\t\tFMemory::<span class=\"built_in\">Memzero</span>(AllParamMemory, SubStudent01Function-&gt;ParmsSize);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">// 2.Parameter assignment</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (TFieldIterator&lt;FProperty&gt; <span class=\"built_in\">IteratorOfParams</span>(SubStudent01Function); IteratorOfParams; ++IteratorOfParams)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"type\">const</span> FProperty *Param = *IteratorOfParams;</span><br><span class=\"line\">\t\t\tFString ParamName = Param-&gt;<span class=\"built_in\">GetName</span>();</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (ParamName == <span class=\"built_in\">FString</span>(<span class=\"string\">&quot;GameName&quot;</span>))</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t*Param-&gt;<span class=\"built_in\">ContainerPtrToValuePtr</span>&lt;FString&gt;(AllParamMemory) = <span class=\"string\">&quot;CSGO&quot;</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">        \t\t</span><br><span class=\"line\">        <span class=\"comment\">// 3.Call Function(Method)</span></span><br><span class=\"line\">\t\tSubStudent01-&gt;<span class=\"built_in\">ProcessEvent</span>(SubStudent01Function, AllParamMemory);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>打印结果：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LogTemp: [ <span class=\"type\">Use</span> <span class=\"built_in\">String</span> <span class=\"type\">Find</span> <span class=\"type\">Class</span> <span class=\"type\">Function</span> ]</span><br><span class=\"line\">LogTemp: [ <span class=\"type\">ProcessEvent</span> <span class=\"type\">Transfer</span> <span class=\"type\">Class</span> <span class=\"type\">Function</span> ]</span><br><span class=\"line\">LogTemp: Warning: &lt;<span class=\"literal\">--</span> SubStudent::PlayGame(FString)&gt;&gt; Play CSGO <span class=\"literal\">--</span>&gt;</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"23-Invoke调用类函数\"><a href=\"#23-Invoke调用类函数\" class=\"headerlink\" title=\"23. Invoke调用类函数\"></a>23. Invoke调用类函数</h3><ol>\n<li><p><code>ReflectiveGameModeBase.cpp</code></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;ReflectiveGameModeBase.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;USubStudent.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">ReflectiveGameModeBase::<span class=\"built_in\">ReflectiveGameModeBase</span>(<span class=\"type\">const</span> FObjectInitializer&amp; ObjectInitializer)</span><br><span class=\"line\">\t:<span class=\"built_in\">AGameModeBase</span>(ObjectInitializer)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"comment\">// Use String Find Class Function By Reflection</span></span><br><span class=\"line\">\t<span class=\"built_in\">UE_LOG</span>(LogTemp, Log, <span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;[ Use String Find Class Function ]&quot;</span>));</span><br><span class=\"line\">\tUSubStudent *SubStudent01 = <span class=\"built_in\">NewObject</span>&lt;USubStudent&gt;();</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (UClass *SubStudent01Class = SubStudent01-&gt;<span class=\"built_in\">GetClass</span>())</span><br><span class=\"line\">\t&#123;   </span><br><span class=\"line\">\t\t<span class=\"comment\">// \tInvoke Transfer Class Function By Reflection</span></span><br><span class=\"line\">\t\t<span class=\"built_in\">UE_LOG</span>(LogTemp, Log, <span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;[ Invoke Transfer Class Function ]&quot;</span>));</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (UFunction *SubStudent02Function = SubStudent01Class-&gt;<span class=\"built_in\">FindFunctionByName</span>(</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;IsBoy&quot;</span>), EIncludeSuperFlag::ExcludeSuper))</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"comment\">// 1.Allocate Space For Parameters</span></span><br><span class=\"line\">\t\t\tuint16 *AllParamMemory02 = <span class=\"keyword\">static_cast</span>&lt;uint16*&gt;<span class=\"built_in\">FMemory_Alloca</span>(SubStudent02Function-&gt;ParmsSize);</span><br><span class=\"line\">\t\t\tFMemory::<span class=\"built_in\">Memzero</span>(AllParamMemory02, SubStudent02Function-&gt;ParmsSize);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"comment\">// 2.Create FFrame</span></span><br><span class=\"line\">\t\t\t<span class=\"function\">FFrame <span class=\"title\">Frame</span><span class=\"params\">(<span class=\"literal\">nullptr</span>, SubStudent02Function, &amp;AllParamMemory02)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"comment\">// 3.Invoke Function</span></span><br><span class=\"line\">\t\t\tSubStudent02Function-&gt;<span class=\"built_in\">Invoke</span>(SubStudent02Function, Frame,</span><br><span class=\"line\">\t\t\t\t&amp;AllParamMemory02 + SubStudent02Function-&gt;ReturnValueOffset);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"comment\">// 4. Get Function Return Value</span></span><br><span class=\"line\">\t\t\t<span class=\"type\">int</span> *ReturnValue = <span class=\"built_in\">reinterpret_cast</span>&lt;<span class=\"type\">int</span>*&gt;(&amp;AllParamMemory02 + SubStudent02Function-&gt;ReturnValueOffset);</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">UE_LOG</span>(LogTemp, Warning, <span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;&lt;-- Return Value: %d --&gt;&quot;</span>), *ReturnValue);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>打印结果：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LogTemp: [ <span class=\"type\">Invoke</span> <span class=\"type\">Transfer</span> <span class=\"type\">Class</span> <span class=\"type\">Function</span> ]</span><br><span class=\"line\">LogTemp: Warning: &lt;<span class=\"literal\">--</span> SubStudent::IsBoy&gt;&gt; Is Boy <span class=\"literal\">--</span>&gt;</span><br><span class=\"line\">LogTemp: Warning: &lt;<span class=\"literal\">--</span> <span class=\"keyword\">Return</span> Value: <span class=\"number\">1</span> <span class=\"literal\">--</span>&gt;</span><br></pre></td></tr></table></figure></li>\n</ol>\n","text":"UE4 反射编程[toc] 1. 准备工作 新建空白ue4 cpp项目：Reflective 打开ReflectiveGameModeBase.h 123456...","permalink":"/post/7_08_UE4反射编程","photos":[],"count_time":{"symbolsCount":"31k","symbolsTime":"28 mins."},"categories":[{"name":"UnrealEngine","slug":"UnrealEngine","count":23,"path":"api/categories/UnrealEngine.json"}],"tags":[{"name":"UnrealEngine","slug":"UnrealEngine","count":23,"path":"api/tags/UnrealEngine.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#UE4-%E5%8F%8D%E5%B0%84%E7%BC%96%E7%A8%8B\"><span class=\"toc-text\">UE4 反射编程</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C\"><span class=\"toc-text\">1. 准备工作</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E8%8E%B7%E5%8F%96%E7%B1%BB%E5%90%8D\"><span class=\"toc-text\">2. 获取类名</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E8%8E%B7%E5%8F%96%E7%B1%BB%E6%A0%87%E7%AD%BE\"><span class=\"toc-text\">3. 获取类标签</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-%E8%8E%B7%E5%8F%96%E7%B1%BB%E5%B1%9E%E6%80%A7\"><span class=\"toc-text\">4. 获取类属性</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-%E8%8E%B7%E5%8F%96%E7%B1%BB%E5%B1%9E%E6%80%A7%E5%85%83%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\">5. 获取类属性元数据</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-%E8%AE%BE%E7%BD%AE%E7%B1%BB%E5%B1%9E%E6%80%A7%E5%80%BC\"><span class=\"toc-text\">6. 设置类属性值</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#7-%E8%8E%B7%E5%BE%97%E7%B1%BB%E5%87%BD%E6%95%B0%E5%90%8D\"><span class=\"toc-text\">7. 获得类函数名</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#8-%E8%8E%B7%E5%8F%96%E7%B1%BB%E5%87%BD%E6%95%B0%E6%A0%87%E7%AD%BE\"><span class=\"toc-text\">8. 获取类函数标签</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#9-%E8%8E%B7%E5%8F%96%E7%B1%BB%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0\"><span class=\"toc-text\">9. 获取类函数参数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#10-%E8%8E%B7%E5%8F%96%E7%B1%BB%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0%E6%A0%87%E7%AD%BE\"><span class=\"toc-text\">10. 获取类函数参数标签</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#11-%E8%8E%B7%E5%8F%96%E7%88%B6%E7%B1%BB\"><span class=\"toc-text\">11. 获取父类</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#12-%E5%88%A4%E6%96%AD%E6%98%AF%E5%90%A6%E6%98%AF%E5%AD%90%E7%B1%BB\"><span class=\"toc-text\">12. 判断是否是子类</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#13-%E6%9F%A5%E6%89%BE%E7%B1%BB%E7%9A%84%E6%89%80%E6%9C%89%E5%AD%90%E7%B1%BB\"><span class=\"toc-text\">13. 查找类的所有子类</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#14-%E6%9F%A5%E6%89%BE%E7%B1%BB%E7%94%9F%E6%88%90%E7%9A%84%E6%89%80%E6%9C%89%E5%AF%B9%E8%B1%A1\"><span class=\"toc-text\">14. 查找类生成的所有对象</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#15-%E9%80%9A%E8%BF%87%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%9F%A5%E6%89%BE%E7%B1%BB\"><span class=\"toc-text\">15. 通过字符串查找类</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#16-%E9%80%9A%E8%BF%87%E5%AD%97%E7%AC%A6%E6%9F%A5%E6%89%BE%E6%9E%9A%E4%B8%BE\"><span class=\"toc-text\">16. 通过字符查找枚举</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#17-%E8%8E%B7%E5%BE%97%E6%9E%9A%E4%B8%BE%E7%9A%84%E6%89%80%E6%9C%89%E9%A1%B9\"><span class=\"toc-text\">17. 获得枚举的所有项</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#18-%E9%80%9A%E8%BF%87%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%9F%A5%E6%89%BE%E8%93%9D%E5%9B%BE%E7%B1%BB\"><span class=\"toc-text\">18. 通过字符串查找蓝图类</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#19-%E5%88%A4%E6%96%AD%E8%93%9D%E5%9B%BE%E6%98%AF%E5%90%A6%E6%98%AFNative\"><span class=\"toc-text\">19. 判断蓝图是否是Native</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#20-%E8%8E%B7%E5%8F%96%E6%89%80%E6%9C%89%E7%B1%BB\"><span class=\"toc-text\">20. 获取所有类</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#21-%E9%80%9A%E8%BF%87%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%9F%A5%E6%89%BE%E7%B1%BB%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">21. 通过字符串查找类函数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#22-ProcessEvent%E8%B0%83%E7%94%A8%E7%B1%BB%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">22. ProcessEvent调用类函数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#23-Invoke%E8%B0%83%E7%94%A8%E7%B1%BB%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">23. Invoke调用类函数</span></a></li></ol></li></ol></li></ol>","author":{"name":"FangH","slug":"blog-author","avatar":"/img/fh.png","link":"/","description":"我曾惊鸿一瞥未来","socials":{"github":"https://github.com/FHangH","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/zi-heng-18-99-47","csdn":"https://blog.csdn.net/weixin_44519692?spm=1000.2115.3001.5343","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"UE4 功能整理","uid":"8d0c33a1aee99d366309310c2d2adece","slug":"7_09_UE4功能整理","date":"2022-10-06T07:28:25.960Z","updated":"2023-01-10T01:10:19.444Z","comments":true,"path":"api/articles/7_09_UE4功能整理.json","keywords":null,"cover":"https://cdn.jsdelivr.net/gh/FHangH/FHangBlogCDN_03@master/Aurora_ (25).webp","text":"UE4 功能整理[toc] 1. SpawnActor情景： 我有一个Cpp类 这个Cpp类要生成一个其他Cpp或蓝图类 可以使用TSubclassOf&lt;...","permalink":"/post/7_09_UE4功能整理","photos":[],"count_time":{"symbolsCount":"69k","symbolsTime":"1:03"},"categories":[{"name":"UnrealEngine","slug":"UnrealEngine","count":23,"path":"api/categories/UnrealEngine.json"}],"tags":[{"name":"UnrealEngine","slug":"UnrealEngine","count":23,"path":"api/tags/UnrealEngine.json"}],"author":{"name":"FangH","slug":"blog-author","avatar":"/img/fh.png","link":"/","description":"我曾惊鸿一瞥未来","socials":{"github":"https://github.com/FHangH","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/zi-heng-18-99-47","csdn":"https://blog.csdn.net/weixin_44519692?spm=1000.2115.3001.5343","juejin":"","customs":{}}}},"next_post":{"title":"UE4初始设置及个人使用崩溃记录","uid":"c7d8b276a0f55310d3a5259cec001a89","slug":"7_01_UE4初始设置及个人使用崩溃记录","date":"2022-10-06T07:28:25.955Z","updated":"2023-01-10T01:10:19.445Z","comments":true,"path":"api/articles/7_01_UE4初始设置及个人使用崩溃记录.json","keywords":null,"cover":"https://cdn.jsdelivr.net/gh/FHangH/FHangBlogCDN_03@master/Aurora_ (17).webp","text":"[toc] 日志：txt1.第一次记录：2020.2.05 版本：4.24.2UnrealEngine的初始设置1.在Epic中下载UnrealEngine4之...","permalink":"/post/7_01_UE4初始设置及个人使用崩溃记录","photos":[],"count_time":{"symbolsCount":"2.7k","symbolsTime":"2 mins."},"categories":[{"name":"UnrealEngine","slug":"UnrealEngine","count":23,"path":"api/categories/UnrealEngine.json"}],"tags":[{"name":"UnrealEngine","slug":"UnrealEngine","count":23,"path":"api/tags/UnrealEngine.json"}],"author":{"name":"FangH","slug":"blog-author","avatar":"/img/fh.png","link":"/","description":"我曾惊鸿一瞥未来","socials":{"github":"https://github.com/FHangH","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/zi-heng-18-99-47","csdn":"https://blog.csdn.net/weixin_44519692?spm=1000.2115.3001.5343","juejin":"","customs":{}}}}}