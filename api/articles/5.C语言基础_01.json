{"title":"C语言基础","uid":"fa71f19cd12c01c160b7bc498a3984ba","slug":"5.C语言基础_01","date":"2022-10-06T07:28:25.944Z","updated":"2023-01-10T01:10:19.446Z","comments":true,"path":"api/articles/5.C语言基础_01.json","keywords":null,"cover":"https://cdn.jsdelivr.net/gh/FHangH/FHangBlogCDN_03@master/Aurora_ (15).webp","content":"<h1 id=\"C语言基础\"><a href=\"#C语言基础\" class=\"headerlink\" title=\"C语言基础\"></a>C语言基础</h1><p>[toc]</p>\n<h3 id=\"1-编译预处理命令\"><a href=\"#1-编译预处理命令\" class=\"headerlink\" title=\"1. 编译预处理命令\"></a>1. 编译预处理命令</h3><p>三种：</p>\n<ol>\n<li>宏定义</li>\n<li>文件包含</li>\n<li>条件编译</li>\n</ol>\n<h4 id=\"1-1-宏定义\"><a href=\"#1-1-宏定义\" class=\"headerlink\" title=\"1.1 宏定义\"></a>1.1 宏定义</h4><p>宏是根据一系列定义的规则替换一段文本的一种模式</p>\n<ul>\n<li><p>格式：#define 标识符 字符串</p>\n</li>\n<li><p>标识符：宏名，大写书写（区别与普通变量名）</p>\n</li>\n<li><p>字符串：宏体，赋值给标识符（编写时，直接写标识符，编译预处理时替换成字符串的值）</p>\n</li>\n<li><p>宏展开：宏名置换成宏体</p>\n</li>\n</ul>\n<p>定义宏（是否带参数）</p>\n<ul>\n<li><p>无参</p>\n<p>直接用宏名代替字符串，称为 符号常量</p>\n</li>\n<li><p>有参</p>\n<p>替换宏名时，对参数进行转换</p>\n</li>\n</ul>\n<h4 id=\"1-2-文件包含命令\"><a href=\"#1-2-文件包含命令\" class=\"headerlink\" title=\"1.2 文件包含命令\"></a>1.2 文件包含命令</h4><p>将已有的源文件，通过文件包含引入其他程序中，后续编程直接引用文件包含所有的定义对象，提高代码复用性和编写效率</p>\n<h3 id=\"2-编译过程\"><a href=\"#2-编译过程\" class=\"headerlink\" title=\"2. 编译过程\"></a>2. 编译过程</h3><p>源文件 .c 编译后，得到目标代码文件 .obj （0 和1组成），经过链接（组装）成可执行文件 .exe</p>\n<h3 id=\"3-运算量\"><a href=\"#3-运算量\" class=\"headerlink\" title=\"3. 运算量\"></a>3. 运算量</h3><p>表达式由运算量和运算符，正确使用运算量是正确编写表达式语句的前提</p>\n<p>运算量：</p>\n<ol>\n<li>常量</li>\n<li>变量</li>\n<li>函数</li>\n</ol>\n<h4 id=\"3-1-常量\"><a href=\"#3-1-常量\" class=\"headerlink\" title=\"3.1 常量\"></a>3.1 常量</h4><p>分类：值常量，符号常量</p>\n<h5 id=\"3-1-1-值常量\"><a href=\"#3-1-1-值常量\" class=\"headerlink\" title=\"3.1.1 值常量\"></a>3.1.1 值常量</h5><ul>\n<li><p>整形常量</p>\n</li>\n<li><p>实型常量</p>\n</li>\n<li><p>字符常量</p>\n<p>字符型常量和对应的ASCII码通用，可以把A理解成65，参与算术运算</p>\n</li>\n</ul>\n<h5 id=\"3-1-2-符号常量\"><a href=\"#3-1-2-符号常量\" class=\"headerlink\" title=\"3.1.2 符号常量\"></a>3.1.2 符号常量</h5><p>用一个符号代替一个值常量，使用前，先用宏定义（无参宏）</p>\n<h4 id=\"3-2-变量\"><a href=\"#3-2-变量\" class=\"headerlink\" title=\"3.2 变量\"></a>3.2 变量</h4><p>命名要求：</p>\n<ul>\n<li>标识符不能是关键字</li>\n<li>标识符只能是字母、数字、下划线组成</li>\n<li>标识符第一个字符必须是下划线或字母</li>\n<li>标识符区分大小写</li>\n</ul>\n<h6 id=\"3-2-1-类型占内存大小\"><a href=\"#3-2-1-类型占内存大小\" class=\"headerlink\" title=\"3.2.1 类型占内存大小\"></a>3.2.1 类型占内存大小</h6><ul>\n<li>整型</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>数据类型</th>\n<th>占用空间</th>\n<th>取值范围</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>short（短整型）</td>\n<td>2字节</td>\n<td>（-2^15 - 2^15-1）</td>\n</tr>\n<tr>\n<td>int（整型）</td>\n<td>2字节</td>\n<td>（-2^31 - 2^31-1）</td>\n</tr>\n<tr>\n<td>long（长整型）</td>\n<td>windows为4字节，Linux为4字节（32位），8字节（64位）</td>\n<td>（-2^31 - 2^31-1）</td>\n</tr>\n<tr>\n<td>long long（长长整型）</td>\n<td>8字节</td>\n<td>（-2^63 - 2^63-1）</td>\n</tr>\n</tbody></table>\n<ul>\n<li>浮点型</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>数据类型</th>\n<th>占用空间</th>\n<th>有效数字范围</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>float</td>\n<td>4字节</td>\n<td>7位有效数字</td>\n</tr>\n<tr>\n<td>double</td>\n<td>8字节</td>\n<td>15 - 16位有效数字</td>\n</tr>\n</tbody></table>\n<ul>\n<li><p>字符型</p>\n</li>\n<li><p>作用：显示单个字符</p>\n</li>\n<li><p>语法：char 变量名 &#x3D; ‘变量值’</p>\n</li>\n<li><p>注意：char定义的变量只能用单引号；只能有一个字符</p>\n</li>\n<li><p>占用：char占用1个字节；将字符对应的ASCII码放入存储单元</p>\n</li>\n<li><p>ASCII：\t</p>\n<p>0 - 31 分配个控制字符</p>\n<p>32 - 126 分配个键盘上能找到的字符</p>\n</li>\n</ul>\n<h4 id=\"3-3-函数\"><a href=\"#3-3-函数\" class=\"headerlink\" title=\"3.3 函数\"></a>3.3 函数</h4><p>和数学一样，返回数值的函数可以作为运算量参与表达式的运算</p>\n<p>需要加入头文件 math.h</p>\n<ul>\n<li>sqrt(x)：求x的平方根</li>\n<li>fabs(x)：求x的绝对值</li>\n<li>exp(x)：求e的x次方</li>\n</ul>\n<h3 id=\"4-运算符\"><a href=\"#4-运算符\" class=\"headerlink\" title=\"4. 运算符\"></a>4. 运算符</h3><p>分类：</p>\n<ul>\n<li>算术运算符</li>\n<li>关系运算符</li>\n<li>逻辑运算符</li>\n<li>位运算符</li>\n<li>赋值运算符</li>\n<li>条件运算符</li>\n<li>求字节运算符</li>\n<li>逗号运算符</li>\n<li>指针运算符</li>\n<li>其他</li>\n</ul>\n<p>加减乘除运算为：二目运算符（目数取决于参与运算量的个数）</p>\n<p>% ：求余或求模，返回两个整形数的余数</p>\n<h4 id=\"4-1-算术运算符的结合性\"><a href=\"#4-1-算术运算符的结合性\" class=\"headerlink\" title=\"4.1 算术运算符的结合性\"></a>4.1 算术运算符的结合性</h4><p>当表达式中，所有运算符同级，从左往右算；否则，优先算高级。</p>\n<p>特点表达式，从右往左算</p>\n<p>自增（++），自减（–）：从右往左算 （只对变量做运算，不对表达式）</p>\n<p>++x：先改变量值，再参与表达式运算</p>\n<p>x++：先参与表达式运算，再改变量值</p>\n<p>参数求值顺序位：从右往左</p>\n<h4 id=\"4-2-关系及逻辑运算符\"><a href=\"#4-2-关系及逻辑运算符\" class=\"headerlink\" title=\"4.2 关系及逻辑运算符\"></a>4.2 关系及逻辑运算符</h4><h5 id=\"4-2-1-关系运算符\"><a href=\"#4-2-1-关系运算符\" class=\"headerlink\" title=\"4.2.1 关系运算符\"></a>4.2.1 关系运算符</h5><p>实现同类型的运算量之间进行关系比较，用关系运算符连接的式子位关系表达式，值：逻辑真（1），逻辑假（0）</p>\n<h5 id=\"4-2-2-逻辑运算符和表达式\"><a href=\"#4-2-2-逻辑运算符和表达式\" class=\"headerlink\" title=\"4.2.2 逻辑运算符和表达式\"></a>4.2.2 逻辑运算符和表达式</h5><p>逻辑与（&amp;&amp;），逻辑或（||），逻辑非（！）</p>\n<h4 id=\"4-3-赋值、逗号、求字节\"><a href=\"#4-3-赋值、逗号、求字节\" class=\"headerlink\" title=\"4.3 赋值、逗号、求字节\"></a>4.3 赋值、逗号、求字节</h4><h5 id=\"4-3-1-赋值\"><a href=\"#4-3-1-赋值\" class=\"headerlink\" title=\"4.3.1 赋值\"></a>4.3.1 赋值</h5><p>形式：变量 &#x3D; 表达式；</p>\n<p>右结合性（14级）</p>\n<h5 id=\"4-3-2-逗号\"><a href=\"#4-3-2-逗号\" class=\"headerlink\" title=\"4.3.2 逗号\"></a>4.3.2 逗号</h5><p>形式：表达式1，表达式2，… ，表达式n；</p>\n<p>左结合性（最低优先级，15级）</p>\n<h5 id=\"4-3-3-求字节\"><a href=\"#4-3-3-求字节\" class=\"headerlink\" title=\"4.3.3 求字节\"></a>4.3.3 求字节</h5><p>形式：sizeof 变量名 或 sizeof(类型名)</p>\n<p>功能：求变量或数据类型内存空间占用的字节数</p>\n<p>运算结果：整型数；</p>\n<p>优先级：单目运算符，2级</p>\n<h4 id=\"4-4-位运算\"><a href=\"#4-4-位运算\" class=\"headerlink\" title=\"4.4 位运算\"></a>4.4 位运算</h4><p>表达式的值，转二进制，一位一位的逻辑运算</p>\n<ol>\n<li>按位与</li>\n<li>按位或</li>\n<li>按位异或（真 异或 ？&#x3D; ！？；假 异或 ？&#x3D; ？）</li>\n<li>按位取反</li>\n</ol>\n<img src=\"https://cdn.jsdelivr.net/gh/FHangH/FHangBlogCDN_02@master/1.C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/1.png\"/>\n\n<img src=\"https://cdn.jsdelivr.net/gh/FHangH/FHangBlogCDN_02@master/1.C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/2.png\"/>\n\n\n\n\n\n<h3 id=\"5-数据类型转换\"><a href=\"#5-数据类型转换\" class=\"headerlink\" title=\"5. 数据类型转换\"></a>5. 数据类型转换</h3><p>转换方式：</p>\n<ul>\n<li>赋值转换</li>\n<li>自动转换</li>\n<li>强制转换</li>\n</ul>\n<h4 id=\"5-1-赋值转换\"><a href=\"#5-1-赋值转换\" class=\"headerlink\" title=\"5.1 赋值转换\"></a>5.1 赋值转换</h4><p>赋值时，将右边的值的类型转换成左边变量类型一致的类型</p>\n<h4 id=\"5-2-自动转换\"><a href=\"#5-2-自动转换\" class=\"headerlink\" title=\"5.2 自动转换\"></a>5.2 自动转换</h4><p>两种类型的数组在表达式中进行算术运算时，低精度会自动转成高精度</p>\n<p>float 转成 double</p>\n<p>char 转成 string</p>\n<p>short&#x2F;int 转成 long</p>\n<h4 id=\"5-3-强制转换\"><a href=\"#5-3-强制转换\" class=\"headerlink\" title=\"5.3 强制转换\"></a>5.3 强制转换</h4><p>系统无法自动转换，又必须与另一个类型的数据进行计算，用户需要手动指定转换类型</p>\n<p>形式：（类型名）表达式；</p>\n<p>注意：强制转换是临时转换，变量值不变，只在需要转换的表达式中有效</p>\n<h3 id=\"6-算法\"><a href=\"#6-算法\" class=\"headerlink\" title=\"6. 算法\"></a>6. 算法</h3><ol>\n<li><p>概念</p>\n<p>为解决某一个具体问题采取明确，有限的操作步骤</p>\n</li>\n<li><p>特性</p>\n<ul>\n<li>确定性：每一个步骤语义明确</li>\n<li>有穷性：任务可以复杂，多，但不能无限执行</li>\n<li>可行性：每一步都是C语言能够完成的</li>\n<li>输入：一个算法可以有0个或n个输入</li>\n<li>输出：一个算法至少有一个输出</li>\n</ul>\n</li>\n<li><p>描述工具</p>\n<ul>\n<li>伪代码表示法</li>\n<li>传统流程图表示法</li>\n<li>N-S结构化表示法</li>\n</ul>\n</li>\n<li><p>结构化思想</p>\n<ul>\n<li>顺序结构</li>\n<li>选择结构</li>\n<li>循环结构</li>\n</ul>\n</li>\n<li><p>语句种类</p>\n<ul>\n<li>表达式语句</li>\n<li>空语句</li>\n<li>函数调用语句</li>\n<li>控制语句</li>\n<li>复核语句</li>\n</ul>\n</li>\n</ol>\n<h4 id=\"6-1-字符输入输出函数\"><a href=\"#6-1-字符输入输出函数\" class=\"headerlink\" title=\"6.1 字符输入输出函数\"></a>6.1 字符输入输出函数</h4><h5 id=\"6-1-1-字符输入函数\"><a href=\"#6-1-1-字符输入函数\" class=\"headerlink\" title=\"6.1.1 字符输入函数\"></a>6.1.1 字符输入函数</h5><p>getchar()：从输入设备中，读入1个字符，返回字符的ASCII码，并通过程序流显示在屏幕上</p>\n<p>例：char a；a &#x3D; getchar()；</p>\n<p>注：getch() 后，无需回车键进入下一步</p>\n<h5 id=\"6-1-2-字符输出函数\"><a href=\"#6-1-2-字符输出函数\" class=\"headerlink\" title=\"6.1.2 字符输出函数\"></a>6.1.2 字符输出函数</h5><p>putchar()：输出一个字符</p>\n<p>例：char ch &#x3D; ‘A’;</p>\n<p>putchar(ch);</p>\n<p>putchar(‘A’);</p>\n<p>putchar(65);</p>\n<p>putchar(‘\\101’);</p>\n<p>putchar(‘\\x41’);</p>\n<p>注：putch()：也只输出一个字符</p>\n<h4 id=\"6-2-格式输入输出函数\"><a href=\"#6-2-格式输入输出函数\" class=\"headerlink\" title=\"6.2 格式输入输出函数\"></a>6.2 格式输入输出函数</h4><h5 id=\"6-2-1-格式输出函数\"><a href=\"#6-2-1-格式输出函数\" class=\"headerlink\" title=\"6.2.1 格式输出函数\"></a>6.2.1 格式输出函数</h5><p>例：printf(“格式控制字符串”， 输出字符列表)；</p>\n<img src=\"https://cdn.jsdelivr.net/gh/FHangH/FHangBlogCDN_02@master/1.C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/3.png\"/>\n\n\n\n<h5 id=\"6-2-2-格式输入函数\"><a href=\"#6-2-2-格式输入函数\" class=\"headerlink\" title=\"6.2.2 格式输入函数\"></a>6.2.2 格式输入函数</h5><p>scanf(“格式控制字符”， 字符地址列表)；</p>\n<p>例：scanf(“a&#x3D;%d, b&#x3D;%d”, &amp;a, &amp;b);</p>\n<h4 id=\"6-3-三目运算\"><a href=\"#6-3-三目运算\" class=\"headerlink\" title=\"6.3 三目运算\"></a>6.3 三目运算</h4><ul>\n<li>作用：通过三目运算符实现简单的判断</li>\n<li>语法：表达式a ？表达式b ：表达式c</li>\n<li>解释：<ol>\n<li>a为真，执行b，并返回b的结果；</li>\n<li>a为假，执行c，并返回c的结果；</li>\n</ol>\n</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> a = <span class=\"number\">10</span>, b = <span class=\"number\">20</span>;</span><br><span class=\"line\">\t<span class=\"type\">int</span> c;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tc = (a &gt; b ? a : b);</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;c = &quot;</span> &lt;&lt; c &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//三目运算符表达式返回的是 变量，所以可以直接作为左值被赋值；</span></span><br><span class=\"line\">\t(a &lt; b ? a : b) = <span class=\"number\">100</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;b = &quot;</span> &lt;&lt; b &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h4 id=\"6-4-switch\"><a href=\"#6-4-switch\" class=\"headerlink\" title=\"6.4 switch\"></a>6.4 switch</h4><ul>\n<li>语法：</li>\n</ul>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">switch</span> (表达式)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> 结果<span class=\"number\">1</span>:</span><br><span class=\"line\">    执行语句;</span><br><span class=\"line\">    <span class=\"keyword\">break</span>；</span><br><span class=\"line\">    <span class=\"keyword\">case</span> 结果<span class=\"number\">1</span>:</span><br><span class=\"line\">    执行语句;</span><br><span class=\"line\">    <span class=\"keyword\">break</span>；</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    <span class=\"keyword\">default</span>:</span><br><span class=\"line\">    执行语句;</span><br><span class=\"line\">    <span class=\"keyword\">break</span>；</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>注意：</p>\n<p>switch语句的表达式类型只能是整型或字符型；</p>\n<p>case后没有break语句，程序会一直向下执行；</p>\n</li>\n</ul>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> value;</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;Enter int value : &quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\tcin &gt;&gt; value;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">switch</span> (value)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> <span class=\"number\">10</span>:</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;Return S&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> <span class=\"number\">9</span>:</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;Return A&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> <span class=\"number\">8</span>:</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;Return A&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> <span class=\"number\">7</span>:</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;Return B&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> <span class=\"number\">6</span>:</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;Return B&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> <span class=\"number\">5</span>:</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;Return C&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> <span class=\"number\">4</span>:</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;Return C&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">default</span>:</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;Return D&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"7-循环结构程序\"><a href=\"#7-循环结构程序\" class=\"headerlink\" title=\"7. 循环结构程序\"></a>7. 循环结构程序</h3><ol>\n<li>while</li>\n<li>do-while</li>\n<li>for</li>\n</ol>\n<h5 id=\"7-1-while循环\"><a href=\"#7-1-while循环\" class=\"headerlink\" title=\"7.1 while循环\"></a>7.1 while循环</h5><ul>\n<li><p>作用：满足判断条件，执行循环语句</p>\n</li>\n<li><p>语法：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">while</span> (判断条件)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t循环语句;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>案列：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> num = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (num &lt; <span class=\"number\">10</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;num = &quot;</span> &lt;&lt; num &lt;&lt; endl;</span><br><span class=\"line\">\t\tnum++;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h5 id=\"7-2-do-while\"><a href=\"#7-2-do-while\" class=\"headerlink\" title=\"7.2 do-while\"></a>7.2 do-while</h5><ul>\n<li><p>作用：先执行循环语句，再满足判断条件，执行循环语句</p>\n</li>\n<li><p>注意：do…while 与 while的区别在于，do…while 先执行一次循环语句，再判断条件是否满足继续执行</p>\n</li>\n<li><p>语法：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    循环语句;</span><br><span class=\"line\">&#125;<span class=\"keyword\">while</span> (循环条件);</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> num = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">do</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;num = &quot;</span> &lt;&lt; num &lt;&lt; endl;</span><br><span class=\"line\">\t\tnum++;</span><br><span class=\"line\">\t&#125; <span class=\"keyword\">while</span> (num &lt; <span class=\"number\">10</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n</ul>\n<p>水仙花案列</p>\n<ul>\n<li><p>说明：一个三位的整数满足每一位的三次方的和依旧等于这个三位数 （do … while）</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> dNum = <span class=\"number\">100</span>; <span class=\"comment\">//最小的三位数</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">do</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">double</span> a, b, c, d; <span class=\"comment\">// a为百位，b为十位，c为个位，d为 a b c三次方的和</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">//pow(x, y) == x 的 y 次方</span></span><br><span class=\"line\">\t\ta = <span class=\"built_in\">pow</span>(dNum / <span class=\"number\">100</span>, <span class=\"number\">3</span>);</span><br><span class=\"line\">\t\tb = <span class=\"built_in\">pow</span>(dNum / <span class=\"number\">10</span> % <span class=\"number\">10</span>, <span class=\"number\">3</span>);</span><br><span class=\"line\">\t\tc = <span class=\"built_in\">pow</span>(dNum % <span class=\"number\">10</span>, <span class=\"number\">3</span>);</span><br><span class=\"line\">\t\td = a + b + c;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">//判断当前的三位数是不是水仙花数</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (d == dNum)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//条件为真时 打印水仙花数</span></span><br><span class=\"line\">\t\t\tcout &lt;&lt; dNum &lt;&lt; endl;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tdNum++; <span class=\"comment\">//每当while条件满足都执行一遍</span></span><br><span class=\"line\">\t&#125; <span class=\"keyword\">while</span> (dNum &lt; <span class=\"number\">1000</span>); <span class=\"comment\">//判断当前是否是三位数</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h5 id=\"7-3-for\"><a href=\"#7-3-for\" class=\"headerlink\" title=\"7.3 for\"></a>7.3 for</h5><ul>\n<li><p>作用：满足条件，执行语句</p>\n</li>\n<li><p>语法：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (起始表达式; 循环条件; 循环体)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t循环语句;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; i &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<p>for 循环案列-1</p>\n<ul>\n<li><p>说明：1 - 100 的区间数字，满足 各位 或 十位 或 倍数 与 7 有关，打印 yes，其余直接打印数字；</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">100</span>; i++) <span class=\"comment\">//循环打印 1 - 100 </span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//判断遍历的数字是否满足条件</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (i % <span class=\"number\">10</span> == <span class=\"number\">7</span> || i / <span class=\"number\">10</span> % <span class=\"number\">10</span> == <span class=\"number\">7</span> || i % <span class=\"number\">7</span> == <span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tcout &lt;&lt; <span class=\"string\">&quot;Yes&quot;</span> &lt;&lt; endl; <span class=\"comment\">//满足调件打印 yes</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tcout &lt;&lt; i &lt;&lt; endl; <span class=\"comment\">//不满足条件打印 原数字</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<p>for 循环案列-2</p>\n<ul>\n<li><p>判断一个整数是否为素数（【2， n-1】内没有n的因子）</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> Log printf</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> Enter scanf_s</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> a = <span class=\"number\">0</span>;  <span class=\"comment\">// 素数的个数</span></span><br><span class=\"line\">    <span class=\"type\">int</span> num = <span class=\"number\">0</span>;  <span class=\"comment\">// 输入的整数</span></span><br><span class=\"line\"></span><br><span class=\"line\">    Log(<span class=\"string\">&quot;输入一个整数：&quot;</span>);</span><br><span class=\"line\">    Enter(<span class=\"string\">&quot;%d&quot;</span>, &amp;num);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">2</span>; i &lt; num; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (num % i == <span class=\"number\">0</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            a++;  <span class=\"comment\">// 素数个数加1</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (a == <span class=\"number\">0</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Log(<span class=\"string\">&quot;%d是素数。\\n&quot;</span>, num);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Log(<span class=\"string\">&quot;%d不是素数。\\n&quot;</span>, num);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h5 id=\"7-4-goto\"><a href=\"#7-4-goto\" class=\"headerlink\" title=\"7.4 goto\"></a>7.4 goto</h5><ul>\n<li>作用：无条件跳转语句(转向语句)，控制程序流程无条件转移至“语句标号”所指定的语句，开始执行</li>\n<li>语法：goto 标记;</li>\n<li>解释：程序执行到goto时，如果标记存在，怎直接跳转到标记处，并继续执行</li>\n<li>缺点：功能太强，容易破坏程序</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">using namespace <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;S&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;A&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">goto</span> GotoTarget; <span class=\"comment\">//此处的 goto 语句标记为 GotoTarget</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;B&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;C&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;D&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\tGotoTarget: <span class=\"comment\">//程序直接跳转至此处，并继续向下执行</span></span><br><span class=\"line\">\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;E&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> n = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    NEXT:</span><br><span class=\"line\">    sum = sum + n;</span><br><span class=\"line\">    n++;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (sum &lt;= <span class=\"number\">200</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">goto</span> NEXT;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;sum=%d\\n&quot;</span>, sum);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> n = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    LOOP:</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (sum &gt;= <span class=\"number\">200</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">goto</span> END;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        sum += n;</span><br><span class=\"line\">        n++;</span><br><span class=\"line\">        <span class=\"keyword\">goto</span> LOOP;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    END:</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;sum=%d\\n&quot;</span>, sum);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h5 id=\"7-5-break和continue\"><a href=\"#7-5-break和continue\" class=\"headerlink\" title=\"7.5 break和continue\"></a>7.5 break和continue</h5><h6 id=\"7-5-1-break\"><a href=\"#7-5-1-break\" class=\"headerlink\" title=\"7.5.1 break\"></a>7.5.1 break</h6><ul>\n<li>作用：用于跳出选择结构或者循环结构</li>\n<li>使用：<ul>\n<li>出现在switch语句中，终止case并跳出switch；</li>\n<li>出现在循环语句中，跳出循环；</li>\n<li>出现在嵌套循环中，跳出内层循环；</li>\n</ul>\n</li>\n</ul>\n<h6 id=\"7-5-2-continue\"><a href=\"#7-5-2-continue\" class=\"headerlink\" title=\"7.5.2 continue\"></a>7.5.2 continue</h6><p>只能在循环体中使用</p>\n<ul>\n<li>作用：在循环语句中，跳过本次循环中余下尚未执行的语句，继续执行下一循环</li>\n</ul>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//从1 -100 遍历100次</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">100</span>; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//如果i 为偶数，则跳过当前循环，执行下一次遍历</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (i % <span class=\"number\">2</span> == <span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tcout &lt;&lt; i &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h5 id=\"7-6-循环嵌套\"><a href=\"#7-6-循环嵌套\" class=\"headerlink\" title=\"7.6 循环嵌套\"></a>7.6 循环嵌套</h5><ul>\n<li><p>作用：在循环语句内再添加循环，解决实际问题</p>\n</li>\n<li><p>注意：一定要确保被嵌套的循环结构完整的包含在外层循环的结构体中</p>\n</li>\n<li><p>描述：打印 10*10 的矩阵</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">10</span>; j++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tcout &lt;&lt; <span class=\"string\">&quot;* &quot;</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tcout &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<p>打印乘法表：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> h = <span class=\"number\">1</span>; h &lt;= <span class=\"number\">9</span>; h++) <span class=\"comment\">//行数</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> v = <span class=\"number\">1</span>; v &lt;= h; v++) <span class=\"comment\">//列数，但不超过行数</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d * %d = %d   &quot;</span>, v, h, v*h);<span class=\"comment\">//结果为 列数*行数=</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p>打印菱形：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> Log printf</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> Enter scanf_s</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> enterNum = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    Log(<span class=\"string\">&quot;Enter Num :&quot;</span>);</span><br><span class=\"line\">    Enter(<span class=\"string\">&quot;%d&quot;</span>, &amp;enterNum);</span><br><span class=\"line\">    Log(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= enterNum; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">1</span>; j &lt;= enterNum - i; j++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            Log(<span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> k = <span class=\"number\">1</span>; k &lt;= <span class=\"number\">2</span> * i - <span class=\"number\">1</span>; k++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            Log(<span class=\"string\">&quot;*&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        Log(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = enterNum - <span class=\"number\">1</span>; i &gt;= <span class=\"number\">1</span>; i--)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">1</span>; j &lt;= enterNum - i; j++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            Log(<span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> k = <span class=\"number\">1</span>; k &lt;= <span class=\"number\">2</span> * i - <span class=\"number\">1</span>; k++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            Log(<span class=\"string\">&quot;*&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        Log(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"8-数组\"><a href=\"#8-数组\" class=\"headerlink\" title=\"8. 数组\"></a>8. 数组</h3><h5 id=\"8-1-一维数组\"><a href=\"#8-1-一维数组\" class=\"headerlink\" title=\"8.1 一维数组\"></a>8.1 一维数组</h5><h6 id=\"8-1-1-一维数组的定义\"><a href=\"#8-1-1-一维数组的定义\" class=\"headerlink\" title=\"8.1.1 一维数组的定义\"></a>8.1.1 一维数组的定义</h6><p>【存储类型】类型说明符 数组名 【常量表达式】</p>\n<ol>\n<li><p>数据类型 数组名[数组长度];</p>\n</li>\n<li><p>数据类型 数组名[数组长度] &#x3D; {元素1，元素2，…..};</p>\n</li>\n<li><p>数据类型 数组名[] &#x3D; {元素1，元素2，…..};</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//1. 数据类型 数组名[数组长度];</span></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;数据类型 数组名[数组长度]&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"type\">int</span> arr1[<span class=\"number\">3</span>];</span><br><span class=\"line\">\tarr1[<span class=\"number\">0</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\tarr1[<span class=\"number\">1</span>] = <span class=\"number\">2</span>;</span><br><span class=\"line\">\tarr1[<span class=\"number\">2</span>] = <span class=\"number\">3</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">3</span>; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; arr1[i] &lt;&lt; <span class=\"string\">&quot;  &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//2. 数据类型 数组名[数组长度] = &#123;元素1，元素2，.....&#125;;</span></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;数据类型 数组名[数组长度] = &#123;元素1，元素2，.....&#125;&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"type\">int</span> arr2[<span class=\"number\">3</span>] = &#123; <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span> &#125;;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">3</span>; j++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; arr2[j] &lt;&lt; <span class=\"string\">&quot;  &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//3. 数据类型 数组名[] = &#123;元素1，元素2，.....&#125;;</span></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;数据类型 数组名[] = &#123;元素1，元素2，.....&#125;&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"type\">int</span> arr3[] = &#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> k = <span class=\"number\">0</span>; k &lt; <span class=\"number\">3</span>; k++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; arr1[k] &lt;&lt; <span class=\"string\">&quot;  &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h6 id=\"8-1-2-一维数组名作用\"><a href=\"#8-1-2-一维数组名作用\" class=\"headerlink\" title=\"8.1.2 一维数组名作用\"></a>8.1.2 一维数组名作用</h6><p>内存空间由数组的类型和元素的个数共同决定</p>\n<p>L &#x3D; 元素个数 * sizeof（类型名）</p>\n<p>作用：</p>\n<ol>\n<li><p>可以统计整个数组在内存中的长度</p>\n</li>\n<li><p>可以获取数组在内存中的首地址</p>\n</li>\n<li><p>可以获取数组元素的个数</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> arr[<span class=\"number\">10</span>] = &#123; <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>, <span class=\"number\">10</span> &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;arr数组占用的内存空间：&quot;</span> &lt;&lt; <span class=\"built_in\">sizeof</span>(arr) &lt;&lt; endl;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;arr数组单个元素占用空间：&quot;</span> &lt;&lt; <span class=\"built_in\">sizeof</span>(arr[<span class=\"number\">0</span>]) &lt;&lt; endl;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;arr数组的元素个数：&quot;</span> &lt;&lt; <span class=\"built_in\">sizeof</span>(arr)/<span class=\"built_in\">sizeof</span>(arr[<span class=\"number\">0</span>]) &lt;&lt; endl;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;arr数组的首地址：&quot;</span> &lt;&lt; (<span class=\"type\">int</span>)arr &lt;&lt; endl;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;arr数组第一元素的地址：&quot;</span> &lt;&lt; (<span class=\"type\">int</span>)&amp;arr[<span class=\"number\">0</span>] &lt;&lt; endl;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;arr数组第二元素的地址：&quot;</span> &lt;&lt; (<span class=\"type\">int</span>)&amp;arr[<span class=\"number\">1</span>] &lt;&lt; endl;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;arr数组最后元素的地址：&quot;</span> &lt;&lt; (<span class=\"type\">int</span>)&amp;arr[<span class=\"built_in\">sizeof</span>(arr) / <span class=\"built_in\">sizeof</span>(arr[<span class=\"number\">0</span>])] &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h6 id=\"8-1-3-输入数字，按顺序输出\"><a href=\"#8-1-3-输入数字，按顺序输出\" class=\"headerlink\" title=\"8.1.3 输入数字，按顺序输出\"></a>8.1.3 输入数字，按顺序输出</h6><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">static</span> <span class=\"type\">int</span> a[<span class=\"number\">10</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; ++i)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Enter Num to Array :&quot;</span>);</span><br><span class=\"line\">        scanf_s(<span class=\"string\">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">10</span>; ++j)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%3d&quot;</span>, a[j]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> k = <span class=\"number\">9</span>; k &gt;= <span class=\"number\">0</span>; --k)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%3d&quot;</span>, a[k]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h6 id=\"8-1-4-输入数字，输出最大值\"><a href=\"#8-1-4-输入数字，输出最大值\" class=\"headerlink\" title=\"8.1.4 输入数字，输出最大值\"></a>8.1.4 输入数字，输出最大值</h6><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> maxNum = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"type\">static</span> <span class=\"type\">int</span> a[<span class=\"number\">10</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; ++i)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Enter Num :&quot;</span>);</span><br><span class=\"line\">        scanf_s(<span class=\"string\">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">10</span>; ++j)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (a[j] &gt; maxNum)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            maxNum = a[j];</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;MaxNum is :%d&quot;</span>, maxNum);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h6 id=\"8-1-5-输入数字，求平均值\"><a href=\"#8-1-5-输入数字，求平均值\" class=\"headerlink\" title=\"8.1.5 输入数字，求平均值\"></a>8.1.5 输入数字，求平均值</h6><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">使用一维数组循环</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">float</span> sumNum = <span class=\"number\">0</span>, averageNum, enterNum;</span><br><span class=\"line\">    <span class=\"type\">static</span> <span class=\"type\">int</span> a[<span class=\"number\">5</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">5</span>; ++i)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Enter Num :&quot;</span>);</span><br><span class=\"line\">        scanf_s(<span class=\"string\">&quot;%f&quot;</span>, &amp;enterNum);</span><br><span class=\"line\">        sumNum += enterNum;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    averageNum = sumNum / <span class=\"number\">5</span>;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;AverageNum is :%.2f&quot;</span>, averageNum);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">不使用数组循环</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">float</span> enterNum, sumNum = <span class=\"number\">0</span>, averageNum;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">5</span>; ++i)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Enter Num :&quot;</span>);</span><br><span class=\"line\">        scanf_s(<span class=\"string\">&quot;%f&quot;</span>, &amp;enterNum);</span><br><span class=\"line\">        sumNum += enterNum;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    averageNum = sumNum / <span class=\"number\">5</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;AverageNum is :%.2f&quot;</span>, averageNum);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h5 id=\"8-2-二维数组\"><a href=\"#8-2-二维数组\" class=\"headerlink\" title=\"8.2 二维数组\"></a>8.2 二维数组</h5><ul>\n<li><p>形式：【存储类型】类型说明符 数组名 【常量表达式1】【常量表达式2】；</p>\n</li>\n<li><p>说明：二维数组元素在内存中排列顺序为按行为序排列</p>\n</li>\n<li><p>初始化：</p>\n</li>\n</ul>\n<img src=\"https://cdn.jsdelivr.net/gh/FHangH/FHangBlogCDN_02@master/1.C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/4.png\"/>\n\n<p>- </p>\n<h6 id=\"8-2-1-二维数组的定义\"><a href=\"#8-2-1-二维数组的定义\" class=\"headerlink\" title=\"8.2.1 二维数组的定义\"></a>8.2.1 二维数组的定义</h6><p>四种定义方式：</p>\n<ol>\n<li>数据类型 数组名 [行数] [列数]；</li>\n<li>数据类型 数组名 [行数] [列数] &#x3D; ｛｛数据1，数据2｝，｛数据3，数据4｝｝；</li>\n<li>数据类型 数组名 [行数] [列数] &#x3D; ｛数据1，数据2，数据3，数据4｝；</li>\n<li>数据类型 数组名 [] [列数] &#x3D; ｛数据1，数据2，数据3，数据4｝；</li>\n</ol>\n<p>第二种更直观，可读性更高</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//1. 数据类型 数组名[行数][列数]；</span></span><br><span class=\"line\">\t<span class=\"type\">int</span> arr1[<span class=\"number\">2</span>][<span class=\"number\">3</span>];</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tarr1[<span class=\"number\">0</span>][<span class=\"number\">0</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\tarr1[<span class=\"number\">0</span>][<span class=\"number\">1</span>] = <span class=\"number\">2</span>;</span><br><span class=\"line\">\tarr1[<span class=\"number\">0</span>][<span class=\"number\">2</span>] = <span class=\"number\">3</span>;</span><br><span class=\"line\">\tarr1[<span class=\"number\">1</span>][<span class=\"number\">0</span>] = <span class=\"number\">4</span>;</span><br><span class=\"line\">\tarr1[<span class=\"number\">1</span>][<span class=\"number\">1</span>] = <span class=\"number\">5</span>;</span><br><span class=\"line\">\tarr1[<span class=\"number\">1</span>][<span class=\"number\">2</span>] = <span class=\"number\">6</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;------数据类型 数组名[行数][列数]------&quot;</span> &lt;&lt; endl &lt;&lt; <span class=\"string\">&quot;\\t&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> a = <span class=\"number\">0</span>; a &lt; <span class=\"number\">2</span>; a++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> a1 = <span class=\"number\">0</span>; a1 &lt; <span class=\"number\">3</span>; a1++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tcout &lt;&lt; arr1[a][a1] &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//2. 数据类型 数组名[行数][列数] = &#123;｛数据1，数据2｝，｛数据3，数据4｝&#125;；</span></span><br><span class=\"line\">\t<span class=\"type\">int</span> arr2[<span class=\"number\">2</span>][<span class=\"number\">3</span>] =</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t&#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>&#125;,</span><br><span class=\"line\">\t\t&#123;<span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>&#125;</span><br><span class=\"line\">\t&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;------数据类型 数组名[行数][列数] = &#123;｛数据1，数据2｝，｛数据3，数据4｝&#125;------&quot;</span> &lt;&lt; endl &lt;&lt; <span class=\"string\">&quot;\\t&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> b = <span class=\"number\">0</span>; b &lt; <span class=\"number\">2</span>; b++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> b1 = <span class=\"number\">0</span>; b1 &lt; <span class=\"number\">3</span>; b1++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tcout &lt;&lt; arr2[b][b1] &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//3. 数据类型 数组名[行数][列数] = ｛数据1，数据2，数据3，数据4｝；</span></span><br><span class=\"line\">\t<span class=\"type\">int</span> arr3[<span class=\"number\">2</span>][<span class=\"number\">3</span>] = &#123; <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span> &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;------数据类型 数组名[行数][列数] = ｛数据1，数据2，数据3，数据4｝------&quot;</span> &lt;&lt; endl &lt;&lt; <span class=\"string\">&quot;\\t&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> c = <span class=\"number\">0</span>; c &lt; <span class=\"number\">2</span>; c++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> c1 = <span class=\"number\">0</span>; c1 &lt; <span class=\"number\">3</span>; c1++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tcout &lt;&lt; arr3[c][c1] &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//4. 数据类型 数组名[][列数] = ｛数据1，数据2，数据3，数据4｝；</span></span><br><span class=\"line\">\t<span class=\"type\">int</span> arr4[][<span class=\"number\">3</span>] = &#123; <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span> &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;------数据类型 数组名[][列数] = ｛数据1，数据2，数据3，数据4｝------&quot;</span> &lt;&lt; endl &lt;&lt; <span class=\"string\">&quot;\\t&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> d = <span class=\"number\">0</span>; d &lt; <span class=\"number\">2</span>; d++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> d1 = <span class=\"number\">0</span>; d1 &lt; <span class=\"number\">3</span>; d1++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tcout &lt;&lt; arr4[d][d1] &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h6 id=\"8-2-2-二维数组名作用\"><a href=\"#8-2-2-二维数组名作用\" class=\"headerlink\" title=\"8.2.2 二维数组名作用\"></a>8.2.2 二维数组名作用</h6><ol>\n<li><p>查看二维数组所占空间</p>\n</li>\n<li><p>查看二维数组的首地址</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> arr[<span class=\"number\">2</span>][<span class=\"number\">3</span>] =</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t&#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>&#125;,</span><br><span class=\"line\">\t\t&#123;<span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>&#125;</span><br><span class=\"line\">\t&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;二维数组的大小：&quot;</span> &lt;&lt; <span class=\"built_in\">sizeof</span>(arr) &lt;&lt; endl;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;二维数组一行的大小：&quot;</span> &lt;&lt; <span class=\"built_in\">sizeof</span>(arr[<span class=\"number\">0</span>]) &lt;&lt; endl;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;二维数组元素的大小：&quot;</span> &lt;&lt; <span class=\"built_in\">sizeof</span>(arr[<span class=\"number\">0</span>][<span class=\"number\">0</span>]) &lt;&lt; endl;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;二维数组的行数：&quot;</span> &lt;&lt; <span class=\"built_in\">sizeof</span>(arr) / <span class=\"built_in\">sizeof</span>(arr[<span class=\"number\">0</span>]) &lt;&lt; endl;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;二维数组的列数：&quot;</span> &lt;&lt; <span class=\"built_in\">sizeof</span>(arr[<span class=\"number\">0</span>]) / <span class=\"built_in\">sizeof</span>(arr[<span class=\"number\">0</span>][<span class=\"number\">0</span>]) &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;*************************&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t<span class=\"comment\">//地址</span></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;二维数组的首地址：&quot;</span> &lt;&lt; (<span class=\"type\">int</span>)arr &lt;&lt; endl;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;二维数组第一行的地址：&quot;</span> &lt;&lt; (<span class=\"type\">int</span>)&amp;arr[<span class=\"number\">0</span>] &lt;&lt; endl;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;二维数组第二行的地址：&quot;</span> &lt;&lt; (<span class=\"type\">int</span>)&amp;arr[<span class=\"number\">1</span>] &lt;&lt; endl;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;二维数组第一个元素的地址：&quot;</span> &lt;&lt; (<span class=\"type\">int</span>)&amp;arr[<span class=\"number\">0</span>][<span class=\"number\">0</span>] &lt;&lt; endl;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;二维数组第二个元素的地址：&quot;</span> &lt;&lt; (<span class=\"type\">int</span>)&amp;arr[<span class=\"number\">0</span>][<span class=\"number\">1</span>] &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h6 id=\"8-2-3-二维数组输入输出\"><a href=\"#8-2-3-二维数组输入输出\" class=\"headerlink\" title=\"8.2.3 二维数组输入输出\"></a>8.2.3 二维数组输入输出</h6><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">static</span> <span class=\"type\">int</span> a[<span class=\"number\">2</span>][<span class=\"number\">3</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Enter 6 Num:\\n&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">2</span>; ++i)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">3</span>; ++j)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d Row %d Column:&quot;</span>, i, j);</span><br><span class=\"line\">            scanf_s(<span class=\"string\">&quot;%d&quot;</span>, &amp;a[i][j]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Log Array :\\n&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> k = <span class=\"number\">0</span>; k &lt; <span class=\"number\">2</span>; ++k)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> g = <span class=\"number\">0</span>; g &lt; <span class=\"number\">3</span>; ++g)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%3d&quot;</span>, a[k][g]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h6 id=\"8-2-4-二维数组找到最大元素及索引\"><a href=\"#8-2-4-二维数组找到最大元素及索引\" class=\"headerlink\" title=\"8.2.4 二维数组找到最大元素及索引\"></a>8.2.4 二维数组找到最大元素及索引</h6><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">static</span> <span class=\"type\">int</span> a[<span class=\"number\">3</span>][<span class=\"number\">4</span>];</span><br><span class=\"line\">    <span class=\"type\">int</span> max = a[<span class=\"number\">0</span>][<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"type\">int</span> row = <span class=\"number\">0</span>, column = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Enter 12 Num To Array\\n&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">3</span>; ++i)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">4</span>; ++j)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d Row %d Column :&quot;</span>, i, j);</span><br><span class=\"line\">            scanf_s(<span class=\"string\">&quot;%d&quot;</span>, &amp;a[i][j]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Log Array\\n&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> k = <span class=\"number\">0</span>; k &lt; <span class=\"number\">3</span>; ++k)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> g = <span class=\"number\">0</span>; g &lt; <span class=\"number\">4</span>; ++g)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (max &lt; a[k][g])</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                max = a[k][g];</span><br><span class=\"line\">                row = k;</span><br><span class=\"line\">                column = g;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%3d&quot;</span>, a[k][g]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Max num : %d;\\t Row : %d;\\t Column : %d\\t&quot;</span>, max, row, column);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h6 id=\"8-2-5-3-3二维数组求对角线值和\"><a href=\"#8-2-5-3-3二维数组求对角线值和\" class=\"headerlink\" title=\"8.2.5 3*3二维数组求对角线值和\"></a>8.2.5 3*3二维数组求对角线值和</h6><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">第一种：效率低</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> a[<span class=\"number\">3</span>][<span class=\"number\">3</span>] = &#123;&#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>&#125;,</span><br><span class=\"line\">                   &#123;<span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>&#125;,</span><br><span class=\"line\">                   &#123;<span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>&#125;&#125;;</span><br><span class=\"line\">    <span class=\"type\">int</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">3</span>; ++i)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">3</span>; ++j)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i == j)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                sum += a[i][j];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;3*3的二维数组对角线的值和：%d&quot;</span>, sum);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">第二种：效率高</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> a[<span class=\"number\">3</span>][<span class=\"number\">3</span>] = &#123;&#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>&#125;,</span><br><span class=\"line\">                   &#123;<span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>&#125;,</span><br><span class=\"line\">                   &#123;<span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>&#125;&#125;;</span><br><span class=\"line\">    <span class=\"type\">int</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">3</span>; ++i)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        sum += a[i][i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;3*3的二维数组对角线的值和：%d&quot;</span>, sum);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h5 id=\"8-3-字符数组\"><a href=\"#8-3-字符数组\" class=\"headerlink\" title=\"8.3 字符数组\"></a>8.3 字符数组</h5><ul>\n<li><p>说明：字符数组相较于普通数组，除了它们的共同特性外，字符数组具有独自的特点</p>\n</li>\n<li><p>定义：char 数组名 【常量表达式】； —-  char a 【10】；</p>\n<p>定义字符数组a有10个元素，每个元素一个字符变量，占一个字节空间，用于存放一个字符变量</p>\n</li>\n</ul>\n<h6 id=\"8-3-1-字符数组初始化\"><a href=\"#8-3-1-字符数组初始化\" class=\"headerlink\" title=\"8.3.1 字符数组初始化\"></a>8.3.1 字符数组初始化</h6><ol>\n<li><p>逐个元素初始化：char c[3] &#x3D; {‘a’, ‘b’, ‘c’};\t</p>\n<p> （如果初值个数&gt;数组长度，语法错误）</p>\n<p> （如果初值个数&lt;数组长度，则其余元素自动定义为“串结束符”：\\0）</p>\n<p> （如果初值个数&#x3D;数组长度，则定义时，可省略数组长度）</p>\n</li>\n<li><p>用字符串初始化：char a[11] &#x3D; {“I am a boy”};</p>\n</li>\n</ol>\n<img src=\"https://cdn.jsdelivr.net/gh/FHangH/FHangBlogCDN_02@master/1.C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/5.png\"/>\n\n\n\n<h6 id=\"8-3-2-字符数组输入输出\"><a href=\"#8-3-2-字符数组输入输出\" class=\"headerlink\" title=\"8.3.2 字符数组输入输出\"></a>8.3.2 字符数组输入输出</h6><p>char a[20];</p>\n<ol>\n<li><p>用格式符”%c“，逐个字符输入输出</p>\n<p>scanf (“%c”, &amp;a[0]);</p>\n<p>printf (“%c”, a[0]);</p>\n</li>\n<li><p>用格式符”%s“，整个字符串输入输出 (字符串输出时，数组长度至少大于初值个数一个单元，即默认的”\\0“，否则输出结果不符合预期)</p>\n<p>scanf (“%s”, &amp;a);</p>\n<p>printf (“%s”, a);</p>\n<img src=\"https://cdn.jsdelivr.net/gh/FHangH/FHangBlogCDN_02@master/1.C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/6.png\"/>\n\n<img src=\"https://cdn.jsdelivr.net/gh/FHangH/FHangBlogCDN_02@master/1.C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/7.png\"/></li>\n</ol>\n<h6 id=\"8-3-3-字符串处理函数\"><a href=\"#8-3-3-字符串处理函数\" class=\"headerlink\" title=\"8.3.3 字符串处理函数\"></a>8.3.3 字符串处理函数</h6><img src=\"https://cdn.jsdelivr.net/gh/FHangH/FHangBlogCDN_02@master/1.C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/8.png\"/>\n\n<img src=\"https://cdn.jsdelivr.net/gh/FHangH/FHangBlogCDN_02@master/1.C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/9.png\"/>\n\n\n\n\n\n\n\n<h3 id=\"9-函数\"><a href=\"#9-函数\" class=\"headerlink\" title=\"9. 函数\"></a>9. 函数</h3><h5 id=\"9-1-函数的定义\"><a href=\"#9-1-函数的定义\" class=\"headerlink\" title=\"9.1 函数的定义\"></a>9.1 函数的定义</h5><h6 id=\"9-1-1-函数的分类\"><a href=\"#9-1-1-函数的分类\" class=\"headerlink\" title=\"9.1.1 函数的分类\"></a>9.1.1 函数的分类</h6><ol>\n<li>是否由用户定义<ul>\n<li>标准库函数</li>\n<li>用户自定义函数</li>\n</ul>\n</li>\n<li>是否返回值<ul>\n<li>返回值的函数：sqrt(x) fabs(x)</li>\n<li>不返回值的函数:  clrscr()</li>\n</ul>\n</li>\n<li>是否有参数<ul>\n<li>有参函数：sqrt(x) fabs(x)</li>\n<li>无参函数:  clrscr()</li>\n</ul>\n</li>\n<li>是否在文件内部<ul>\n<li>内部函数</li>\n<li>外部函数</li>\n</ul>\n</li>\n</ol>\n<h6 id=\"9-1-2-函数的定义\"><a href=\"#9-1-2-函数的定义\" class=\"headerlink\" title=\"9.1.2 函数的定义\"></a>9.1.2 函数的定义</h6><ol>\n<li><p>方式一：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">函数返回值类型 函数名(参数列表)</span><br><span class=\"line\">\t参数类型说明</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t变量说明；</span><br><span class=\"line\">\t\t语句序列；</span><br><span class=\"line\">\t&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>方式二：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">函数返回值类型 函数名(参数类型说明 参数列表)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t变量说明；</span><br><span class=\"line\">\t语句序列；</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h6 id=\"9-1-3-定义不返回值的函数\"><a href=\"#9-1-3-定义不返回值的函数\" class=\"headerlink\" title=\"9.1.3 定义不返回值的函数\"></a>9.1.3 定义不返回值的函数</h6><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">write</span><span class=\"params\">()</span> <span class=\"comment\">//无返回值，无参数的函数</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt;= <span class=\"number\">12</span>; ++i)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%c&quot;</span>, <span class=\"string\">&#x27;*&#x27;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    write();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">write</span><span class=\"params\">(<span class=\"type\">int</span> num)</span> <span class=\"comment\">//无返回值，有参数的函数</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt;= num; ++i)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%c&quot;</span>, <span class=\"string\">&#x27;*&#x27;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    write(<span class=\"number\">12</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h6 id=\"9-1-4-定义返回值的函数\"><a href=\"#9-1-4-定义返回值的函数\" class=\"headerlink\" title=\"9.1.4 定义返回值的函数\"></a>9.1.4 定义返回值的函数</h6><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">sum</span><span class=\"params\">(<span class=\"type\">int</span> num)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt;= num; ++i)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        sum += i;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> sum;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d&quot;</span>, sum(<span class=\"number\">3</span>));</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h5 id=\"9-2-函数的使用\"><a href=\"#9-2-函数的使用\" class=\"headerlink\" title=\"9.2 函数的使用\"></a>9.2 函数的使用</h5><h6 id=\"9-2-1-函数的执行过程\"><a href=\"#9-2-1-函数的执行过程\" class=\"headerlink\" title=\"9.2.1 函数的执行过程\"></a>9.2.1 函数的执行过程</h6><p>例：求前n个自然数和的平均值</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">float</span> <span class=\"title function_\">averageNum</span><span class=\"params\">(<span class=\"type\">float</span> num)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">float</span> sum = <span class=\"number\">0.0f</span>, average;</span><br><span class=\"line\">    <span class=\"type\">int</span> count;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt;= (<span class=\"type\">int</span>)num ; ++i)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        sum += (<span class=\"type\">float</span>)i;</span><br><span class=\"line\">        count = i;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    average = sum / (<span class=\"type\">float</span>)count;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> average;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> enterNum;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;enter num:&quot;</span>);</span><br><span class=\"line\">    scanf_s(<span class=\"string\">&quot;%d&quot;</span>, &amp;enterNum);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;averageNum=%7.2f&quot;</span>, averageNum((<span class=\"type\">float</span>)enterNum));</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h5 id=\"9-3-函数的调用形式\"><a href=\"#9-3-函数的调用形式\" class=\"headerlink\" title=\"9.3 函数的调用形式\"></a>9.3 函数的调用形式</h5><ul>\n<li>语句调用</li>\n<li>表达式调用</li>\n</ul>\n<h5 id=\"9-4-函数的声明\"><a href=\"#9-4-函数的声明\" class=\"headerlink\" title=\"9.4 函数的声明\"></a>9.4 函数的声明</h5><p>声明：先定义后调用，声明的函数必须放在main函数之前，否则运行错误</p>\n<p>注：</p>\n<ul>\n<li>C++中可以运行，但结果错误</li>\n<li>返回值为int，权限高，可以不声明</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">maxNum</span><span class=\"params\">(<span class=\"type\">int</span> x, <span class=\"type\">int</span> y, <span class=\"type\">int</span> z)</span>; <span class=\"comment\">// 先声明函数</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;MaxNum:%d&quot;</span>, maxNum(<span class=\"number\">10</span>, <span class=\"number\">20</span>, <span class=\"number\">30</span>));</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">maxNum</span><span class=\"params\">(<span class=\"type\">int</span> x, <span class=\"type\">int</span> y, <span class=\"type\">int</span> z)</span> <span class=\"comment\">// 在mian()函数后面定义函数</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> max = <span class=\"number\">0</span>;</span><br><span class=\"line\">    max = x &gt; y ? x : y;</span><br><span class=\"line\">    max = max &gt; z ? max : z;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> max;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h5 id=\"9-5-带参宏和函数的区别\"><a href=\"#9-5-带参宏和函数的区别\" class=\"headerlink\" title=\"9.5 带参宏和函数的区别\"></a>9.5 带参宏和函数的区别</h5><p>区别：宏中的 sum(x, y)，x和y不存值，而是将函数中出现sum(x, y)类型的表达式用 x+y替代，并返回，再有函数将表达式x+y赋值计算</p>\n<ul>\n<li>宏：返回替换的表达式，带入函数中计算</li>\n<li>函数：带入参数计算，返回结果</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> sum(x, y) x+y; <span class=\"comment\">// 带参宏</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> num = <span class=\"number\">0</span>;</span><br><span class=\"line\">    num = sum(<span class=\"number\">10</span>, <span class=\"number\">20</span>); <span class=\"comment\">// 展开： num = sum(x+y) -&gt; num = x + y</span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Sum Num :%d&quot;</span>, num);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h5 id=\"9-6-函数的嵌套和递归调用\"><a href=\"#9-6-函数的嵌套和递归调用\" class=\"headerlink\" title=\"9.6 函数的嵌套和递归调用\"></a>9.6 函数的嵌套和递归调用</h5><h6 id=\"9-6-1-函数的嵌套调用\"><a href=\"#9-6-1-函数的嵌套调用\" class=\"headerlink\" title=\"9.6.1 函数的嵌套调用\"></a>9.6.1 函数的嵌套调用</h6><img src=\"https://cdn.jsdelivr.net/gh/FHangH/FHangBlogCDN_02@master/1.C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/10.png\"/>\n\n\n\n<h6 id=\"9-6-2-例题\"><a href=\"#9-6-2-例题\" class=\"headerlink\" title=\"9.6.2 例题\"></a>9.6.2 例题</h6><img src=\"https://cdn.jsdelivr.net/gh/FHangH/FHangBlogCDN_02@master/1.C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/11.png\" style=\"zoom:50%;\" />\n\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">funcSum</span><span class=\"params\">(<span class=\"type\">int</span> num)</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">float</span> <span class=\"title function_\">funcCalculate</span><span class=\"params\">(<span class=\"type\">int</span> m, <span class=\"type\">int</span> n, <span class=\"type\">int</span> p)</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> m, n, p;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;enter num:&quot;</span>);</span><br><span class=\"line\">    scanf_s(<span class=\"string\">&quot;%d %d %d&quot;</span>, &amp;m, &amp;n, &amp;p);</span><br><span class=\"line\">    <span class=\"type\">float</span> num = funcCalculate(m, n, p);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Calculate Num :%7.2f&quot;</span>, num);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">funcSum</span><span class=\"params\">(<span class=\"type\">int</span> num)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> sum;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (sum = <span class=\"number\">0</span>; num &gt; <span class=\"number\">0</span>; --num)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        sum += num;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> sum;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">float</span> <span class=\"title function_\">funcCalculate</span><span class=\"params\">(<span class=\"type\">int</span> m, <span class=\"type\">int</span> n, <span class=\"type\">int</span> p)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">float</span> y = (<span class=\"type\">float</span>)(funcSum(m) * funcSum(n));</span><br><span class=\"line\">    y = y / (<span class=\"type\">float</span>)funcSum(p);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> y;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h6 id=\"9-6-3-函数的递归调用\"><a href=\"#9-6-3-函数的递归调用\" class=\"headerlink\" title=\"9.6.3 函数的递归调用\"></a>9.6.3 函数的递归调用</h6><img src=\"https://cdn.jsdelivr.net/gh/FHangH/FHangBlogCDN_02@master/1.C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/12.png\" style=\"zoom:50%;\" />\n\n\n\n\n\n<h5 id=\"9-7-变量的作用域\"><a href=\"#9-7-变量的作用域\" class=\"headerlink\" title=\"9.7 变量的作用域\"></a>9.7 变量的作用域</h5><h6 id=\"9-7-1-定义和区别\"><a href=\"#9-7-1-定义和区别\" class=\"headerlink\" title=\"9.7.1 定义和区别\"></a>9.7.1 定义和区别</h6><img src=\"https://cdn.jsdelivr.net/gh/FHangH/FHangBlogCDN_02@master/1.C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/13.png\" style=\"zoom:67%;\" />\n\n\n\n<h6 id=\"9-7-2-全局变量例子\"><a href=\"#9-7-2-全局变量例子\" class=\"headerlink\" title=\"9.7.2 全局变量例子\"></a>9.7.2 全局变量例子</h6><img src=\"https://cdn.jsdelivr.net/gh/FHangH/FHangBlogCDN_02@master/1.C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/14.png\" style=\"zoom:67%;\" />\n\n\n\n<h6 id=\"9-7-3-全局变量和局部变量同名\"><a href=\"#9-7-3-全局变量和局部变量同名\" class=\"headerlink\" title=\"9.7.3 全局变量和局部变量同名\"></a>9.7.3 全局变量和局部变量同名</h6><img src=\"https://cdn.jsdelivr.net/gh/FHangH/FHangBlogCDN_02@master/1.C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/15.png\" style=\"zoom: 67%;\" />\n\n\n\n\n\n<h5 id=\"9-8-变量的存储类型\"><a href=\"#9-8-变量的存储类型\" class=\"headerlink\" title=\"9.8 变量的存储类型\"></a>9.8 变量的存储类型</h5><h6 id=\"9-8-1-定义和分类\"><a href=\"#9-8-1-定义和分类\" class=\"headerlink\" title=\"9.8.1 定义和分类\"></a>9.8.1 定义和分类</h6><img src=\"https://cdn.jsdelivr.net/gh/FHangH/FHangBlogCDN_02@master/1.C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/16.png\"/>\n\n<img src=\"https://cdn.jsdelivr.net/gh/FHangH/FHangBlogCDN_02@master/1.C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/17.png\"/>\n\n\n\n<h6 id=\"9-8-2-例子\"><a href=\"#9-8-2-例子\" class=\"headerlink\" title=\"9.8.2 例子\"></a>9.8.2 例子</h6><img src=\"https://cdn.jsdelivr.net/gh/FHangH/FHangBlogCDN_02@master/1.C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/18.png\" style=\"zoom:50%;\" />\n\n<img src=\"https://cdn.jsdelivr.net/gh/FHangH/FHangBlogCDN_02@master/1.C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/19.png\" style=\"zoom:50%;\" />\n\n\n\n\n\n\n\n<h3 id=\"10-指针\"><a href=\"#10-指针\" class=\"headerlink\" title=\"10. 指针\"></a>10. 指针</h3><h5 id=\"10-1-指针的概念\"><a href=\"#10-1-指针的概念\" class=\"headerlink\" title=\"10.1 指针的概念\"></a>10.1 指针的概念</h5><ul>\n<li>计算机中为方便地区不同的内存单元，会为每个单元分配内存地址，这个地址称为内存单元地址，简称：内存地址</li>\n<li>C语言中把指针定义为地址，指针是地址的另一种描述，相同的概念：指针&#x3D;&#x3D;地址</li>\n</ul>\n<h5 id=\"10-2-指针的类型\"><a href=\"#10-2-指针的类型\" class=\"headerlink\" title=\"10.2 指针的类型\"></a>10.2 指针的类型</h5><ul>\n<li>指针指向的对象类型可能不同</li>\n<li>变量，数组，函数，结构体均是内存中的存储对象，都有这不同的存储类型，不同类型的存储空间大小不同，它们的地址是属于不同类型的指针。</li>\n<li>不同类型的指针之间，不能直接有任何操作</li>\n</ul>\n<h5 id=\"10-3-指针和变量\"><a href=\"#10-3-指针和变量\" class=\"headerlink\" title=\"10.3 指针和变量\"></a>10.3 指针和变量</h5><h6 id=\"10-3-1-变量的指针\"><a href=\"#10-3-1-变量的指针\" class=\"headerlink\" title=\"10.3.1 变量的指针\"></a>10.3.1 变量的指针</h6><ul>\n<li>一个变量通常占用若干个连续的内存单元，把这若干个单元起始单元的地址称为变量的地址</li>\n<li>内存单元本身的地址是0和1组成，不方便使用，C语言用 “&amp;变量名” 表示变量的地址</li>\n<li>不同类型的变量，指针的类型不同</li>\n</ul>\n<h6 id=\"10-3-2-指向变量的指针变量\"><a href=\"#10-3-2-指向变量的指针变量\" class=\"headerlink\" title=\"10.3.2 指向变量的指针变量\"></a>10.3.2 指向变量的指针变量</h6><ul>\n<li><p>指针变量：专门存放地址的变量</p>\n</li>\n<li><p>指向变量的指针变量：专门存放其他变量地址的指针变量，该指针变量指向对象是一个变量</p>\n<ol>\n<li><p>形式：数据类型名 *变量名；</p>\n</li>\n<li><p>例：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> x = <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> *p1; # p1是变量名， *是定义符，向系统说明p1是指针变量（存放地址）</span><br><span class=\"line\">p1 = &amp;x; # &amp;x是整形变量的地址，将其赋值个p1保存，此时p1保存了x的地址</span><br><span class=\"line\"><span class=\"meta\"># x是p1指向的变量，p1是x变量的指针变量</span></span><br></pre></td></tr></table></figure></li>\n</ol>\n</li>\n<li><p>指针运算符 “*” 又称间接访问运算符：间址运算符（单目运算符，第二优先级，右结合性）</p>\n</li>\n<li><p>形式：*地址表达式</p>\n<ol>\n<li><p>先计算表达式的值，再根据表达式的值（地址）及类型，访问内存中相应的对象，分别是两种：从内存中读取，往内存中写入</p>\n</li>\n<li><p>“*&amp;x”：右结合性 &#x3D;&#x3D; * (&amp;x) &#x3D;&#x3D; x &#x3D;&#x3D; *&amp;x</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> a = <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> *pa; # 此处的*是定义一个pa的指针变量</span><br><span class=\"line\">*pa = &amp;a; # 把 a的地址存进去，&amp;（引用）获得变量的地址，此处 *（解析）指向并得到地址内的值</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;*pa=%d&quot;</span>, *pa); # 打印结果为 *pa=<span class=\"number\">5</span>；</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> a = <span class=\"number\">5</span>, b = <span class=\"number\">10</span>, *pa = <span class=\"literal\">NULL</span>, *pb = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    pa = &amp;a;</span><br><span class=\"line\">    pb = &amp;b;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;*pa = %d, *pb = %d&quot;</span>, *pa, *pb);</span><br><span class=\"line\"></span><br><span class=\"line\">    *pb = *pa + *pb;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n*pb = %d&quot;</span>, *pb);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ol>\n</li>\n</ul>\n<h6 id=\"10-3-3-指向指针变量的指针\"><a href=\"#10-3-3-指向指针变量的指针\" class=\"headerlink\" title=\"10.3.3 指向指针变量的指针\"></a>10.3.3 指向指针变量的指针</h6><ul>\n<li><p>定义一个指针变量，让它保存其他指针变量的地址，则该指针变量为指向指针的指针变量（多级指针）</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> x = <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> *px;</span><br><span class=\"line\">px = &amp;<span class=\"number\">5</span>; # 此时px存储了x的地址</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> *py;</span><br><span class=\"line\">py = &amp;px; <span class=\"meta\"># py存储了px的地址（二级指针)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> a = <span class=\"number\">5</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> *pa;</span><br><span class=\"line\">    <span class=\"type\">int</span> **pb; # 定义一个 <span class=\"type\">int</span> * 类型的指针变量（二级指针）</span><br><span class=\"line\"></span><br><span class=\"line\">    pa = &amp;a; <span class=\"meta\"># a的地址赋值该指针变量 pa</span></span><br><span class=\"line\">    pb = &amp;pa; # 指针变量pa的地址赋值 <span class=\"function\">pb</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"title\">printf</span><span class=\"params\">(<span class=\"string\">&quot;**pb = %d&quot;</span>, **pb)</span></span>; # **pb == *(*pb): (*pb)解析pb内地址指向的变量pa，*(*pb) == *pa </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h5 id=\"10-4-指针与数组\"><a href=\"#10-4-指针与数组\" class=\"headerlink\" title=\"10.4 指针与数组\"></a>10.4 指针与数组</h5><ul>\n<li>一个数组占用一片连续的内存空间，数组元素的使用可以和同类型的变量相比</li>\n</ul>\n<h6 id=\"10-4-1-一维数组与指针\"><a href=\"#10-4-1-一维数组与指针\" class=\"headerlink\" title=\"10.4.1 一维数组与指针\"></a>10.4.1 一维数组与指针</h6><ol>\n<li><p>一维数组的指针</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> arrX[<span class=\"number\">5</span>], i;</span><br><span class=\"line\"><span class=\"meta\"># w + i == &amp;arrX[i] : 表示第i个元素的地址</span></span><br><span class=\"line\"><span class=\"meta\"># w == &amp;arrX[0] : 表示数组的首地址和第0个元素的地址</span></span><br><span class=\"line\"># *(w + i) == arrX[i] : 表示dii个元素 / * （解析）w + i </span><br></pre></td></tr></table></figure>\n</li>\n<li><p>指向数组元素的指针变量</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> arrX[<span class=\"number\">5</span>], i, *p;</span><br><span class=\"line\"><span class=\"meta\"># p = &amp;i;</span></span><br><span class=\"line\"><span class=\"meta\"># p = &amp;arrX[i];</span></span><br><span class=\"line\"><span class=\"meta\"># p = w + i;</span></span><br><span class=\"line\"># 当i=<span class=\"number\">0</span> 有 p = w，此时p指向arrX[<span class=\"number\">0</span>]</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>引用数组元素方法：int a[5], *p &#x3D; a;</p>\n<ul>\n<li><p>下标法：a[i], p[i]</p>\n</li>\n<li><p>指针法：*(a+i), *(p+i)</p>\n</li>\n<li><p>例子：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> arr[<span class=\"number\">10</span>], *p = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    p = arr;</span><br><span class=\"line\">    <span class=\"type\">int</span> x = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (p &lt; arr+<span class=\"number\">10</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;arr[%d]=&quot;</span>, x);</span><br><span class=\"line\">        scanf_s(<span class=\"string\">&quot;%d&quot;</span>, p);</span><br><span class=\"line\">        p++;</span><br><span class=\"line\">        x++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (p = arr + <span class=\"number\">9</span>; p &gt;= arr ; --p)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%3d&quot;</span>, *p);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> arr[<span class=\"number\">10</span>] = &#123;<span class=\"number\">10</span>, <span class=\"number\">20</span>, <span class=\"number\">30</span>, <span class=\"number\">40</span>, <span class=\"number\">50</span>, <span class=\"number\">60</span>, <span class=\"number\">70</span>, <span class=\"number\">80</span>, <span class=\"number\">90</span>, <span class=\"number\">100</span>&#125;;</span><br><span class=\"line\">    <span class=\"type\">int</span> *p = arr + <span class=\"number\">2</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">5</span>; ++i)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%5d&quot;</span>, p[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ol>\n<h6 id=\"10-4-2-二维数组与指针\"><a href=\"#10-4-2-二维数组与指针\" class=\"headerlink\" title=\"10.4.2 二维数组与指针\"></a>10.4.2 二维数组与指针</h6><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> i, j, arr[<span class=\"number\">3</span>][<span class=\"number\">4</span>];</span><br><span class=\"line\">w + i # 表示i行的行地址；i = <span class=\"number\">0</span>，arr表示第<span class=\"number\">0</span>行的行地址</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*(arr + i) # 与arr[i]相同，表示第i行的一维数组名称，也是arr[i][<span class=\"number\">0</span>]的元素地址</span><br><span class=\"line\">*(arr + i) + j # 表示&amp;arr[i][j]，表示第i行第j列的元素地址</span><br><span class=\"line\">*(*(w + i)+ j) ==== arr[i][j]</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> i, j, k, arr[i][j][k];</span><br><span class=\"line\">*(*(*(arr + i) +j) +k) == arr[i][j][k]</span><br></pre></td></tr></table></figure>\n\n<img src=\"https://cdn.jsdelivr.net/gh/FHangH/FHangBlogCDN_02@master/1.C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/20.png\" style=\"zoom:75%;\" />\n\n<img src=\"https://cdn.jsdelivr.net/gh/FHangH/FHangBlogCDN_02@master/1.C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/21.png\" style=\"zoom:75%;\" />\n\n\n\n\n\n<h5 id=\"10-5-指针和字符\"><a href=\"#10-5-指针和字符\" class=\"headerlink\" title=\"10.5 指针和字符\"></a>10.5 指针和字符</h5><h6 id=\"10-5-1-指针变量访问字符数组\"><a href=\"#10-5-1-指针变量访问字符数组\" class=\"headerlink\" title=\"10.5.1 指针变量访问字符数组\"></a>10.5.1 指针变量访问字符数组</h6><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">char</span> *str = <span class=\"string\">&quot;Hello World !&quot;</span>;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%s\\n&quot;</span>, str);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%s\\n&quot;</span>, str + <span class=\"number\">6</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h6 id=\"10-5-2-指向字符的指针变量\"><a href=\"#10-5-2-指向字符的指针变量\" class=\"headerlink\" title=\"10.5.2 指向字符的指针变量\"></a>10.5.2 指向字符的指针变量</h6><p>输入字符串，判断是否是回文符</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;string.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">char</span> str[<span class=\"number\">20</span>], *str_Front, *str_Rear;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Enter String :&quot;</span>);</span><br><span class=\"line\">    <span class=\"built_in\">gets_s</span>(str, <span class=\"number\">20</span>);</span><br><span class=\"line\">    str_Rear = str + <span class=\"built_in\">strlen</span>(str) - <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (str_Front = str; str_Front &lt; str_Rear; str_Front++, str_Rear--)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (*str_Front != *str_Rear)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d %d&quot;</span>, *str_Front, *str_Rear);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (*str_Front &gt; *str_Rear)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot; F&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot; T&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h5 id=\"10-6-指针和函数\"><a href=\"#10-6-指针和函数\" class=\"headerlink\" title=\"10.6 指针和函数\"></a>10.6 指针和函数</h5><h6 id=\"10-6-1-指针变量作为函数的参数\"><a href=\"#10-6-1-指针变量作为函数的参数\" class=\"headerlink\" title=\"10.6.1 指针变量作为函数的参数\"></a>10.6.1 指针变量作为函数的参数</h6><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">funcSwap</span><span class=\"params\">(<span class=\"type\">int</span> *x, <span class=\"type\">int</span> *y)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> x = <span class=\"number\">2</span>, y = <span class=\"number\">3</span>;</span><br><span class=\"line\">    <span class=\"built_in\">funcSwap</span>(&amp;x, &amp;y); # &amp; 为引用 得到 x的内存地址</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;x = %d, y = %d&quot;</span>, x, y);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">funcSwap</span><span class=\"params\">(<span class=\"type\">int</span> *x, <span class=\"type\">int</span> *y)</span> # 此处是写如 * 为定义 地址变量（指针变量）</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> s = *x; #访问时，* 为解析地址的内存值 == x</span><br><span class=\"line\">    *x = *y;</span><br><span class=\"line\">    *y = s;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h6 id=\"10-6-2-指针变量实现字符串复制\"><a href=\"#10-6-2-指针变量实现字符串复制\" class=\"headerlink\" title=\"10.6.2 指针变量实现字符串复制\"></a>10.6.2 指针变量实现字符串复制</h6><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">funcCopyStr</span><span class=\"params\">(<span class=\"type\">char</span> *originStr, <span class=\"type\">char</span> *flagStr)</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">char</span> str_Origin[<span class=\"number\">100</span>], str_Flag[<span class=\"number\">100</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Enter String To Copy :&quot;</span>);</span><br><span class=\"line\">    gets_s(str_Origin, <span class=\"number\">100</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    funcCopyStr(str_Origin, str_Flag);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%s\\n&quot;</span>, str_Origin);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%s\\n&quot;</span>, str_Flag);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">funcCopyStr</span><span class=\"params\">(<span class=\"type\">char</span> *originStr, <span class=\"type\">char</span> *flagStr)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (; (*flagStr = *originStr); originStr++, flagStr++);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h6 id=\"10-6-3-指针数组做函数参数\"><a href=\"#10-6-3-指针数组做函数参数\" class=\"headerlink\" title=\"10.6.3 指针数组做函数参数\"></a>10.6.3 指针数组做函数参数</h6><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">(<span class=\"type\">int</span> n, <span class=\"type\">char</span> *args[])</span> <span class=\"meta\"># mian函数内只能定义这样的形参 n == 命令单词的个数；*args[] == 保存命令参数的地址</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;n=%d&quot;</span>, n);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt; n; ++i)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%s\\n&quot;</span>, args[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h6 id=\"10-6-4-指针函数\"><a href=\"#10-6-4-指针函数\" class=\"headerlink\" title=\"10.6.4 指针函数\"></a>10.6.4 指针函数</h6><ul>\n<li><p>函数也可以返回地址（指针函数）</p>\n</li>\n<li><p>类型标识符 *函数名(参数表) {}</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> *<span class=\"title function_\">funcJudgeMaxNum</span><span class=\"params\">(<span class=\"type\">int</span> *p_num1, <span class=\"type\">int</span> *p_num2)</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> num1, num2, *maxNum;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Enter num1 and num2 :&quot;</span>);</span><br><span class=\"line\">    scanf_s(<span class=\"string\">&quot;%d %d&quot;</span>, &amp;num1, &amp;num2);</span><br><span class=\"line\"></span><br><span class=\"line\">    maxNum = funcJudgeMaxNum(&amp;num1, &amp;num2);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;MaxNum = %d&quot;</span>, *maxNum);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> *<span class=\"title function_\">funcJudgeMaxNum</span><span class=\"params\">(<span class=\"type\">int</span> *p_num1, <span class=\"type\">int</span> *p_num2)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> *p_num1 &gt; *p_num2 ? p_num1 : p_num2;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h6 id=\"10-6-5-指针函数动态获取内存空间\"><a href=\"#10-6-5-指针函数动态获取内存空间\" class=\"headerlink\" title=\"10.6.5 指针函数动态获取内存空间\"></a>10.6.5 指针函数动态获取内存空间</h6><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;malloc.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> numCount, *p_TestArr;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Enter num count=&quot;</span>);</span><br><span class=\"line\">    scanf_s(<span class=\"string\">&quot;%d&quot;</span>, &amp;numCount);</span><br><span class=\"line\"></span><br><span class=\"line\">    p_TestArr = (<span class=\"type\">int</span> *)<span class=\"built_in\">malloc</span>(numCount * <span class=\"keyword\">sizeof</span>(<span class=\"type\">int</span>)); # 申请一个numCount*<span class=\"number\">2</span>字节的空间并转换成内存地址赋值个 p_TestArr</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"title function_\">for</span> <span class=\"params\">(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; numCount; ++i)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;TestArr[%d]=&quot;</span>, i);</span><br><span class=\"line\">        scanf_s(<span class=\"string\">&quot;%d&quot;</span>, &amp;p_TestArr[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;This Arr=&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; numCount; ++j)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%4d&quot;</span>, p_TestArr[j]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h6 id=\"10-6-6-指向函数的指针变量\"><a href=\"#10-6-6-指向函数的指针变量\" class=\"headerlink\" title=\"10.6.6 指向函数的指针变量\"></a>10.6.6 指向函数的指针变量</h6><ul>\n<li><p>概念：一个专门保存函数地址的指针变量</p>\n</li>\n<li><p>定义：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> (*f) (int1, int2); # 参数类型可以不带</span><br><span class=\"line\"><span class=\"type\">float</span> (*p) ();</span><br><span class=\"line\"><span class=\"type\">float</span> *(*f) ();</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">float</span> <span class=\"title function_\">func_AddNum</span><span class=\"params\">(<span class=\"type\">float</span> num1, <span class=\"type\">float</span> num2)</span>;</span><br><span class=\"line\"><span class=\"type\">float</span> <span class=\"title function_\">func_SubNum</span><span class=\"params\">(<span class=\"type\">float</span> num1, <span class=\"type\">float</span> num2)</span>;</span><br><span class=\"line\"><span class=\"type\">float</span> <span class=\"title function_\">func_MulNum</span><span class=\"params\">(<span class=\"type\">float</span> num1, <span class=\"type\">float</span> num2)</span>;</span><br><span class=\"line\"><span class=\"type\">float</span> <span class=\"title function_\">func_DivNum</span><span class=\"params\">(<span class=\"type\">float</span> num1, <span class=\"type\">float</span> num2)</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> num1, num2;</span><br><span class=\"line\">    <span class=\"type\">char</span> op;</span><br><span class=\"line\">    <span class=\"type\">float</span> (*p_Calculate)(<span class=\"type\">float</span>, <span class=\"type\">float</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Enter num1 num2:&quot;</span>);</span><br><span class=\"line\">    scanf_s(<span class=\"string\">&quot;%d %c %d&quot;</span>, &amp;num1, &amp;op, <span class=\"number\">1</span>, &amp;num2);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">switch</span> (op)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">&#x27;+&#x27;</span>: p_Calculate = func_AddNum;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">&#x27;-&#x27;</span>: p_Calculate = func_SubNum;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">&#x27;*&#x27;</span>: p_Calculate = func_MulNum;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">&#x27;/&#x27;</span>: p_Calculate = func_DivNum;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;CalculateResult Num = %.2f&quot;</span>, (*p_Calculate)(num1, num2));</span><br><span class=\"line\">    getchar();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">float</span> <span class=\"title function_\">func_AddNum</span><span class=\"params\">(<span class=\"type\">float</span> num1, <span class=\"type\">float</span> num2)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num1 + num2;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">float</span> <span class=\"title function_\">func_SubNum</span><span class=\"params\">(<span class=\"type\">float</span> num1, <span class=\"type\">float</span> num2)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num1 - num2;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">float</span> <span class=\"title function_\">func_MulNum</span><span class=\"params\">(<span class=\"type\">float</span> num1, <span class=\"type\">float</span> num2)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num1 * num2;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">float</span> <span class=\"title function_\">func_DivNum</span><span class=\"params\">(<span class=\"type\">float</span> num1, <span class=\"type\">float</span> num2)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num1 / num2;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"11-结构体\"><a href=\"#11-结构体\" class=\"headerlink\" title=\"11. 结构体\"></a>11. 结构体</h3><h5 id=\"11-1-结构体与变量\"><a href=\"#11-1-结构体与变量\" class=\"headerlink\" title=\"11.1 结构体与变量\"></a>11.1 结构体与变量</h5><h6 id=\"11-1-1-结构体类型的定义\"><a href=\"#11-1-1-结构体类型的定义\" class=\"headerlink\" title=\"11.1.1 结构体类型的定义\"></a>11.1.1 结构体类型的定义</h6><ul>\n<li><p>是具有不同类型的有序集合</p>\n</li>\n<li><p>结构体所占空间等于各个数据成员的所需空间之和</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> 结构体名</span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">    类型表示符 成员名<span class=\"number\">1</span>;</span><br><span class=\"line\">    类型表示符 成员名<span class=\"number\">2</span>;</span><br><span class=\"line\">    类型表示符 成员名<span class=\"number\">3</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> 定义结构体类型的关键字</span></span><br><span class=\"line\"><span class=\"class\">域名或成员名：命名规则和变量相同，同一结构体的同层成员不可同名</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h6 id=\"11-1-2-结构体变量\"><a href=\"#11-1-2-结构体变量\" class=\"headerlink\" title=\"11.1.2 结构体变量\"></a>11.1.2 结构体变量</h6><ol>\n<li><p>先定义结构体类型，再定义变量名</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">s_Student</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">    <span class=\"type\">int</span> age;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">s_Student</span> <span class=\"title\">stu1</span>, <span class=\"title\">stu2</span>;</span></span><br></pre></td></tr></table></figure>\n\n\n</li>\n<li><p>定义结构体类型和定义变量名写在一起</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">s_Student</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">    <span class=\"type\">int</span> age;</span><br><span class=\"line\">&#125;stu1, stu2;</span><br></pre></td></tr></table></figure>\n\n\n</li>\n<li><p>若结构体类型名只用一次，则定义可省去</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">    <span class=\"type\">int</span> age;</span><br><span class=\"line\">&#125;stu1, stu2;</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h6 id=\"11-1-3-结构体类型嵌套\"><a href=\"#11-1-3-结构体类型嵌套\" class=\"headerlink\" title=\"11.1.3 结构体类型嵌套\"></a>11.1.3 结构体类型嵌套</h6><ul>\n<li><p>定义：结构体成员可以是其他结构体类型，但不能在结构体中嵌套其他结构体</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">s_date</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">    <span class=\"type\">int</span> year, month, day;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">s_student</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">    <span class=\"type\">char</span> name[<span class=\"number\">20</span>];</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">birthday</span>;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">s_student</span> <span class=\"title\">stu1</span>, <span class=\"title\">stu2</span>;</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h6 id=\"11-1-4-typedef-定义类型\"><a href=\"#11-1-4-typedef-定义类型\" class=\"headerlink\" title=\"11.1.4 typedef 定义类型\"></a>11.1.4 typedef 定义类型</h6><ul>\n<li><p>把一种数据类型名定义成与之等价的另一种类型名</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"type\">int</span> fh_int;</span><br><span class=\"line\">fh_int x, y; # == <span class=\"type\">int</span> x, y;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"type\">int</span> * fh_pint;</span><br><span class=\"line\">fh_pint x, y; # == *x, *y;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>利用typedef可以将struct student 定义成一个较为简单的类型名</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">student</span> <span class=\"title\">fh_stu</span>;</span></span><br><span class=\"line\">fh_stu stu1, stu2; # == <span class=\"keyword\">struct</span> student stu1, stu2;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h6 id=\"11-1-5-结构体的引用\"><a href=\"#11-1-5-结构体的引用\" class=\"headerlink\" title=\"11.1.5 结构体的引用\"></a>11.1.5 结构体的引用</h6><ul>\n<li><p>结构体是聚合类型的数据，由多种不同的类型的数据成员组成</p>\n</li>\n<li><p>结构体变量的输入输出，只能对其各个成员分别进行</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">结构体成员的表达式：结构体变量名.成员名</span><br><span class=\"line\"><span class=\"string\">&quot;.&quot;</span> 是成员（分量）运算符，具有最高优先级</span><br><span class=\"line\">注：同类型的结构体变量之间，可以整体相互赋值</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">s_student</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">    <span class=\"type\">char</span> stu_name[<span class=\"number\">20</span>];</span><br><span class=\"line\">    <span class=\"type\">int</span> stu_age;</span><br><span class=\"line\">    <span class=\"type\">float</span> stu_percent;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">s_student</span> <span class=\"title\">stu</span>;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Enter name:&quot;</span>);</span><br><span class=\"line\">    gets_s(stu.stu_name, <span class=\"number\">20</span>);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Enter age:&quot;</span>);</span><br><span class=\"line\">    scanf_s(<span class=\"string\">&quot;%d&quot;</span>, &amp;stu.stu_age);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Enter percent:&quot;</span>);</span><br><span class=\"line\">    scanf_s(<span class=\"string\">&quot;%f&quot;</span>, &amp;stu.stu_percent);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Student:\\n&quot;</span>);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\t %s\\n \\t %d\\n \\t %.2f\\n&quot;</span>, stu.stu_name, stu.stu_age, stu.stu_percent);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h6 id=\"11-1-6-结构体定义时初始化\"><a href=\"#11-1-6-结构体定义时初始化\" class=\"headerlink\" title=\"11.1.6 结构体定义时初始化\"></a>11.1.6 结构体定义时初始化</h6><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">s1_student</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">    <span class=\"type\">char</span> stu_name[<span class=\"number\">20</span>];</span><br><span class=\"line\">    <span class=\"type\">int</span> stu_age;</span><br><span class=\"line\">    <span class=\"type\">float</span> stu_percent;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">s1_student</span> <span class=\"title\">stu1</span> =</span> &#123;<span class=\"string\">&quot;fang&quot;</span>, <span class=\"number\">22</span>, <span class=\"number\">99</span>&#125;, stu2;</span><br><span class=\"line\">    stu2 = stu1;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Student01:\\n&quot;</span>);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\t %s\\n \\t %d\\n \\t %.2f\\n&quot;</span>, stu1.stu_name, stu1.stu_age, stu1.stu_percent);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Student02:\\n&quot;</span>);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\t %s\\n \\t %d\\n \\t %.2f\\n&quot;</span>, stu2.stu_name, stu2.stu_age, stu2.stu_percent);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h5 id=\"11-2-结构体与数组\"><a href=\"#11-2-结构体与数组\" class=\"headerlink\" title=\"11.2 结构体与数组\"></a>11.2 结构体与数组</h5><h6 id=\"11-2-1-结构体数组的定义\"><a href=\"#11-2-1-结构体数组的定义\" class=\"headerlink\" title=\"11.2.1 结构体数组的定义\"></a>11.2.1 结构体数组的定义</h6><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">s_student</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">    <span class=\"type\">char</span> stu_name[<span class=\"number\">20</span>];</span><br><span class=\"line\">    <span class=\"type\">int</span> stu_age;</span><br><span class=\"line\">    <span class=\"type\">float</span> stu_percent;</span><br><span class=\"line\">&#125;stu[<span class=\"number\">2</span>];</span><br></pre></td></tr></table></figure>\n\n\n\n<h6 id=\"11-2-2-结构体数组的初始化\"><a href=\"#11-2-2-结构体数组的初始化\" class=\"headerlink\" title=\"11.2.2 结构体数组的初始化\"></a>11.2.2 结构体数组的初始化</h6><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">s_student</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">    <span class=\"type\">char</span> stu_name[<span class=\"number\">20</span>];</span><br><span class=\"line\">    <span class=\"type\">int</span> stu_age;</span><br><span class=\"line\">    <span class=\"type\">float</span> stu_percent;</span><br><span class=\"line\">&#125;stu[<span class=\"number\">2</span>] = </span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    &#123;<span class=\"string\">&quot;fang&quot;</span>, <span class=\"number\">22</span>, <span class=\"number\">99</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"string\">&quot;fang&quot;</span>, <span class=\"number\">22</span>, <span class=\"number\">99</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"string\">&quot;fang&quot;</span>, <span class=\"number\">22</span>, <span class=\"number\">99</span>&#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h5 id=\"11-3-结构体与指针\"><a href=\"#11-3-结构体与指针\" class=\"headerlink\" title=\"11.3 结构体与指针\"></a>11.3 结构体与指针</h5><h6 id=\"11-3-1-指向结构体变量的指针变量\"><a href=\"#11-3-1-指向结构体变量的指针变量\" class=\"headerlink\" title=\"11.3.1 指向结构体变量的指针变量\"></a>11.3.1 指向结构体变量的指针变量</h6><ul>\n<li><p>指针变量保存结构体变量地址</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">s_student</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">    <span class=\"type\">char</span> stu_name[<span class=\"number\">20</span>];</span><br><span class=\"line\">    <span class=\"type\">int</span> stu_age;</span><br><span class=\"line\">    <span class=\"type\">float</span> stu_percent;</span><br><span class=\"line\">&#125;stu, *p_stu;</span><br><span class=\"line\"></span><br><span class=\"line\">p_stu = &amp;stu;</span><br><span class=\"line\"></span><br><span class=\"line\">stu.stu_age = <span class=\"number\">20</span>; # == (*p_stu).stu_age = <span class=\"number\">20</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"># (*p_stu).stu_age 不可省去（）</span><br><span class=\"line\"># (*p_stu).stu_age 书写麻烦，所以C语言提供了 “指向运算符” ：“-&gt;”, 优先级<span class=\"number\">1</span>级，左结合性；</span><br><span class=\"line\"># 格式：指针变量-&gt;成员分量名称</span><br><span class=\"line\"># (*p_stu).stu_age == p_stu-&gt;stu_age</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">s2_student</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">    <span class=\"type\">char</span> stu_name[<span class=\"number\">20</span>];</span><br><span class=\"line\">    <span class=\"type\">int</span> stu_age;</span><br><span class=\"line\">    <span class=\"type\">char</span> sex;</span><br><span class=\"line\">    <span class=\"type\">float</span> stu_percent;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">s2_student</span> <span class=\"title\">stu1</span> =</span> &#123;<span class=\"string\">&quot;fang&quot;</span>, <span class=\"number\">22</span>, <span class=\"string\">&#x27;T&#x27;</span>, <span class=\"number\">99</span>&#125;, *p_stu2;</span><br><span class=\"line\">    p_stu2 = &amp;stu1;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Student01:\\n&quot;</span>);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\t %s\\n, \\t %d\\n, \\t %s\\n, \\t %.2f\\n&quot;</span>,</span><br><span class=\"line\">            stu1.stu_name, stu1.stu_age, (stu1.sex == <span class=\"string\">&#x27;T&#x27;</span>) ? <span class=\"string\">&quot;man&quot;</span> : <span class=\"string\">&quot;women&quot;</span>, stu1.stu_percent);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Student02:\\n&quot;</span>);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\t %s\\n, \\t %d\\n, \\t %s\\n, \\t %.2f\\n&quot;</span>,</span><br><span class=\"line\">            p_stu2-&gt;stu_name, p_stu2-&gt;stu_age, (p_stu2-&gt;sex == <span class=\"string\">&#x27;T&#x27;</span>) ? <span class=\"string\">&quot;man&quot;</span> : <span class=\"string\">&quot;women&quot;</span>, p_stu2-&gt;stu_percent);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h6 id=\"11-3-2-指向结构体数组的指针变量\"><a href=\"#11-3-2-指向结构体数组的指针变量\" class=\"headerlink\" title=\"11.3.2 指向结构体数组的指针变量\"></a>11.3.2 指向结构体数组的指针变量</h6><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">s3_student</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">    <span class=\"type\">char</span> stu_name[<span class=\"number\">20</span>];</span><br><span class=\"line\">    <span class=\"type\">int</span> stu_age;</span><br><span class=\"line\">    <span class=\"type\">char</span> sex;</span><br><span class=\"line\">    <span class=\"type\">float</span> stu_grade;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">s3_student</span> <span class=\"title\">stu</span>[3] =</span> &#123;</span><br><span class=\"line\">            &#123;<span class=\"string\">&quot;fang01&quot;</span>, <span class=\"number\">22</span>, <span class=\"string\">&#x27;T&#x27;</span>, <span class=\"number\">97</span>&#125;,</span><br><span class=\"line\">            &#123;<span class=\"string\">&quot;fang02&quot;</span>, <span class=\"number\">23</span>, <span class=\"string\">&#x27;F&#x27;</span>, <span class=\"number\">98</span>&#125;,</span><br><span class=\"line\">            &#123;<span class=\"string\">&quot;fang03&quot;</span>, <span class=\"number\">24</span>, <span class=\"string\">&#x27;T&#x27;</span>, <span class=\"number\">99</span>&#125;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">s3_student</span> *<span class=\"title\">p_stu</span>;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%6s %5s %5s %7s\\n&quot;</span>, <span class=\"string\">&quot;Name&quot;</span>, <span class=\"string\">&quot;Age&quot;</span>, <span class=\"string\">&quot;Sex&quot;</span>, <span class=\"string\">&quot;Grade&quot;</span>);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;----------------------------\\n&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (p_stu = stu; p_stu &lt; stu + <span class=\"number\">3</span>; p_stu++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%7s %4d %4c %8.2f\\n&quot;</span>, p_stu-&gt;stu_name, p_stu-&gt;stu_age, p_stu-&gt;sex, p_stu-&gt;stu_grade);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h5 id=\"11-4-联合体-共用体\"><a href=\"#11-4-联合体-共用体\" class=\"headerlink\" title=\"11.4 联合体(共用体)\"></a>11.4 联合体(共用体)</h5><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">union</span> <span class=\"title\">xyz</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">\t<span class=\"type\">char</span> x;</span><br><span class=\"line\">\t<span class=\"type\">int</span> y;</span><br><span class=\"line\">\t<span class=\"type\">double</span> z;</span><br><span class=\"line\">&#125; t;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\"># t 的内存大小，以union中最大的为标准，也就是double，8个字节</span></span><br><span class=\"line\"># 由于所有成员共用一个空间，在某一时刻，t变量只有其中一个分量的有效值</span><br></pre></td></tr></table></figure>\n\n\n\n<h5 id=\"11-5-枚举类型\"><a href=\"#11-5-枚举类型\" class=\"headerlink\" title=\"11.5 枚举类型\"></a>11.5 枚举类型</h5><ul>\n<li><p>一种简单的数据类型，把所有的值列举出来，形成该值的取值范围，枚举型变量只能从中取出值，称为枚举元素或枚举常量</p>\n</li>\n<li><p>枚举类型是一种基本数据类型，不是构造体类型，因此不能 分解成任何基本类型</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">enum</span> 枚举名 &#123;</span>枚举值表&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">enum</span> <span class=\"title\">weekday</span> &#123;</span>sun, mou, tue, web, thu, fri, sat&#125;;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">enum</span> <span class=\"title\">weekday</span> <span class=\"title\">a</span>, <span class=\"title\">b</span>, <span class=\"title\">c</span>;</span> <span class=\"meta\"># a, b, c 是枚举类型weekday的变量</span></span><br><span class=\"line\"></span><br><span class=\"line\"># 也可以定义枚举类型时定义变量</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">enum</span> <span class=\"title\">weekday</span> &#123;</span>sun, mou, tue, web, thu, fri, sat&#125; a, b, c;</span><br><span class=\"line\"># 或</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">enum</span> &#123;</span>sun, mou, tue, web, thu, fri, sat&#125; a, b, c;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h6 id=\"11-5-1-枚举类型的使用规定\"><a href=\"#11-5-1-枚举类型的使用规定\" class=\"headerlink\" title=\"11.5.1 枚举类型的使用规定\"></a>11.5.1 枚举类型的使用规定</h6><ol>\n<li>枚举值是常量，不是变量，不能被赋值</li>\n<li>枚举元素本身由系统定义了一个表示序号的值，序号值可以自定</li>\n<li>只能把枚举值赋值给枚举变量，不能把元素的序号数值赋值给枚举变量</li>\n<li>输出枚举值的格式字符是 “ %d ” ，对应序号，为整数</li>\n</ol>\n<h3 id=\"12-文件\"><a href=\"#12-文件\" class=\"headerlink\" title=\"12. 文件\"></a>12. 文件</h3><h5 id=\"12-1-文件概念和分类\"><a href=\"#12-1-文件概念和分类\" class=\"headerlink\" title=\"12.1 文件概念和分类\"></a>12.1 文件概念和分类</h5><h6 id=\"12-1-1-文件概念\"><a href=\"#12-1-1-文件概念\" class=\"headerlink\" title=\"12.1.1 文件概念\"></a>12.1.1 文件概念</h6><img src=\"https://cdn.jsdelivr.net/gh/FHangH/FHangBlogCDN_02@master/1.C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/22.png\"/>\n\n<img src=\"https://cdn.jsdelivr.net/gh/FHangH/FHangBlogCDN_02@master/1.C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/23.png\" style=\"zoom:80%;\" />\n\n\n\n\n\n<h6 id=\"12-1-2-文件简单分类\"><a href=\"#12-1-2-文件简单分类\" class=\"headerlink\" title=\"12.1.2 文件简单分类\"></a>12.1.2 文件简单分类</h6><img src=\"https://cdn.jsdelivr.net/gh/FHangH/FHangBlogCDN_02@master/1.C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/24.png\"/>\n\n<img src=\"https://cdn.jsdelivr.net/gh/FHangH/FHangBlogCDN_02@master/1.C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/25.png\"/>\n\n\n\n\n\n<h5 id=\"12-2-文件基本操作\"><a href=\"#12-2-文件基本操作\" class=\"headerlink\" title=\"12.2 文件基本操作\"></a>12.2 文件基本操作</h5><h6 id=\"12-2-1-定义文件指针\"><a href=\"#12-2-1-定义文件指针\" class=\"headerlink\" title=\"12.2.1 定义文件指针\"></a>12.2.1 定义文件指针</h6><img src=\"https://cdn.jsdelivr.net/gh/FHangH/FHangBlogCDN_02@master/1.C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/26.png\"/>\n\n<img src=\"https://cdn.jsdelivr.net/gh/FHangH/FHangBlogCDN_02@master/1.C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/27.png\"/>\n\n\n\n\n\n<h6 id=\"12-2-2-文件的打开\"><a href=\"#12-2-2-文件的打开\" class=\"headerlink\" title=\"12.2.2 文件的打开\"></a>12.2.2 文件的打开</h6><img src=\"https://cdn.jsdelivr.net/gh/FHangH/FHangBlogCDN_02@master/1.C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/28.png\"/>\n\n<table>\n<thead>\n<tr>\n<th align=\"center\">打开方式</th>\n<th align=\"center\">含义</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">r</td>\n<td align=\"center\">只读</td>\n<td align=\"center\">为输入打开一个已存在的文本文件</td>\n</tr>\n<tr>\n<td align=\"center\">w</td>\n<td align=\"center\">只写</td>\n<td align=\"center\">为输出打开一个文本文件</td>\n</tr>\n<tr>\n<td align=\"center\">a</td>\n<td align=\"center\">只追加</td>\n<td align=\"center\">为追加打开一个已存在的文本文件</td>\n</tr>\n<tr>\n<td align=\"center\">rb</td>\n<td align=\"center\">只读</td>\n<td align=\"center\">为输入打开一个已存在的二进制文件</td>\n</tr>\n<tr>\n<td align=\"center\">wb</td>\n<td align=\"center\">只写</td>\n<td align=\"center\">为输出打开一个二进制文件</td>\n</tr>\n<tr>\n<td align=\"center\">ab</td>\n<td align=\"center\">只追加</td>\n<td align=\"center\">为输入打开一个二进制文件</td>\n</tr>\n<tr>\n<td align=\"center\">r+</td>\n<td align=\"center\">读写</td>\n<td align=\"center\">为既读又写打开一个已存在的文本文件</td>\n</tr>\n<tr>\n<td align=\"center\">w+</td>\n<td align=\"center\">读写</td>\n<td align=\"center\">为既读又写新建一个文本文件</td>\n</tr>\n<tr>\n<td align=\"center\">a+</td>\n<td align=\"center\">读写</td>\n<td align=\"center\">为既读又写打开一个已存在的文本文件，文件指针移至为念末尾</td>\n</tr>\n<tr>\n<td align=\"center\">rb+</td>\n<td align=\"center\">读写</td>\n<td align=\"center\">为既读又写打开一个已存在的二进制文件</td>\n</tr>\n<tr>\n<td align=\"center\">wb+</td>\n<td align=\"center\">读写</td>\n<td align=\"center\">为既读又写新建一个二进制文件</td>\n</tr>\n<tr>\n<td align=\"center\">ab+</td>\n<td align=\"center\">读写</td>\n<td align=\"center\">为读&#x2F;写打开一个二进制文件进行追加</td>\n</tr>\n</tbody></table>\n<h6 id=\"12-2-3-文件的操作\"><a href=\"#12-2-3-文件的操作\" class=\"headerlink\" title=\"12.2.3 文件的操作\"></a>12.2.3 文件的操作</h6><img src=\"https://cdn.jsdelivr.net/gh/FHangH/FHangBlogCDN_02@master/1.C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/29.png\" style=\"zoom:80%;\" />\n\n<img src=\"https://cdn.jsdelivr.net/gh/FHangH/FHangBlogCDN_02@master/1.C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/30.png\" style=\"zoom:60%;\" />\n\n\n\n\n\n<h6 id=\"12-2-4-文件的关闭\"><a href=\"#12-2-4-文件的关闭\" class=\"headerlink\" title=\"12.2.4 文件的关闭\"></a>12.2.4 文件的关闭</h6><img src=\"https://cdn.jsdelivr.net/gh/FHangH/FHangBlogCDN_02@master/1.C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/31.png\" style=\"zoom:80%;\" />\n\n\n\n\n\n<h6 id=\"12-2-5-文件操作示例\"><a href=\"#12-2-5-文件操作示例\" class=\"headerlink\" title=\"12.2.5 文件操作示例\"></a>12.2.5 文件操作示例</h6><ul>\n<li><p>在C盘目录下新建一个 “ fh.txt “ 的文件，用来保存键盘输入的字符，直到按回车键为止</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字符输出函数（fputc）</span><br><span class=\"line\">fputc函数使用格式：fputc(ch, fp_fh);</span><br><span class=\"line\">将 ch 的值输出到 fp_fh 所指向的文件，并返回该字符，输出失败返回EOF</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    FILE *fp_fh;</span><br><span class=\"line\">    <span class=\"type\">errno_t</span> err_fh; # 新版C语言的要求，老版本的省去</span><br><span class=\"line\">    <span class=\"type\">char</span> str_fh;</span><br><span class=\"line\"></span><br><span class=\"line\">    err_fh = fopen_s(&amp;fp_fh,<span class=\"string\">&quot;C:\\\\Users\\\\FHang\\\\Desktop\\\\fh.txt&quot;</span>, <span class=\"string\">&quot;w&quot;</span>); # 老版本省去</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (err_fh != <span class=\"number\">0</span>) # 老版本改为 <span class=\"keyword\">if</span> ((fp_fh = fopen(<span class=\"string\">&quot;C:\\\\Users\\\\FHang\\\\Desktop\\\\fh.txt&quot;</span>, <span class=\"string\">&quot;w&quot;</span>)) == <span class=\"literal\">NULL</span>) </span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Can not find this file\\n&quot;</span>);</span><br><span class=\"line\">        <span class=\"built_in\">exit</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Please input a string. Press enter key to end\\n&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> ((str_fh = getchar()) != <span class=\"string\">&#x27;\\n&#x27;</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        fputc(str_fh, fp_fh);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    fclose(fp_fh);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Create file fh.txt success.&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"13-链表\"><a href=\"#13-链表\" class=\"headerlink\" title=\"13. 链表\"></a>13. 链表</h3><h5 id=\"13-1-链表的概念\"><a href=\"#13-1-链表的概念\" class=\"headerlink\" title=\"13.1 链表的概念\"></a>13.1 链表的概念</h5><h6 id=\"13-1-1-概念\"><a href=\"#13-1-1-概念\" class=\"headerlink\" title=\"13.1.1 概念\"></a>13.1.1 概念</h6><p>链表的每个节点都有两个部分：</p>\n<ul>\n<li>数据区和指针区。前者用来存储数据，后者用来存储指向下一个节点的指针；</li>\n<li>我们使用 malloc() 函数来为每个节点分配内存；</li>\n<li>节点的头部只含有指向第一个节点的指针;</li>\n<li>存储在栈区的 head 指向了存储在堆区的节点;</li>\n<li>堆区的节点又互相连接，形成链状的结构;</li>\n<li>最后一个节点的指针区被赋值为 NULL，标明了链表的结束。</li>\n</ul>\n<h6 id=\"13-1-2-数组相关\"><a href=\"#13-1-2-数组相关\" class=\"headerlink\" title=\"13.1.2 数组相关\"></a>13.1.2 数组相关</h6><ul>\n<li>数组的缺点：<ol>\n<li>正常情况下，创建的数组为固定大小的静态数组，当数组的数据内容出现增删，需要手动修改大小；</li>\n<li>如果一次性创建足够大的数组，会浪费内存空间；</li>\n<li>动态数组的创建（不会），麻烦；</li>\n<li>数组的内存空间是连续的，当需要添加或删除某一个元素时，其新元素之后的所有数组元素，需要逐一遍历更换内存地址，性能消耗大；</li>\n</ol>\n</li>\n<li>数组的优点：<ol>\n<li>数组的内存空间是连续的，直接通过数组小标查找数组元素，很高效；</li>\n</ol>\n</li>\n</ul>\n<h6 id=\"13-1-3-链表相关\"><a href=\"#13-1-3-链表相关\" class=\"headerlink\" title=\"13.1.3 链表相关\"></a>13.1.3 链表相关</h6><ul>\n<li>链表优点：<ol>\n<li>链表的内存空间是非连续的，它们通过链表中的指针域，存储了下一个的链表的首地址，以此达到数据表相连；</li>\n<li>插入或删除指定链表时，只需要将新链表，以及前后链表的首地址和指针域进行相关改动即可，不会影响到所有的链表；</li>\n<li>只需要找到第一个链表节点，就能顺着指针域找到所有的链表；</li>\n</ol>\n</li>\n<li>链表缺点：<ol>\n<li>查找指定链表节点，需要从第一个节点顺着指针域一个个找下去，消耗性能大，远不及数组直接通过下标定位；</li>\n<li>当在整个链表的第一节点前插入新节点，原来找到的链表首节点，就不再是首节点，需要重新找；</li>\n<li>链表的每个节点都需要一块内存空间存储下一个节点的首地址；</li>\n</ol>\n</li>\n</ul>\n<h6 id=\"13-1-4-链表分类\"><a href=\"#13-1-4-链表分类\" class=\"headerlink\" title=\"13.1.4 链表分类\"></a>13.1.4 链表分类</h6><ol>\n<li>内存类型区分：<ul>\n<li>静态链表</li>\n<li>动态链表：使用malloc()</li>\n</ul>\n</li>\n<li>功能结构区分：<ul>\n<li>单向链表</li>\n<li>双向链表</li>\n<li>循环链表</li>\n<li>单向循环链表</li>\n<li>双向循环链表</li>\n</ul>\n</li>\n</ol>\n<h5 id=\"13-2-静态链表\"><a href=\"#13-2-静态链表\" class=\"headerlink\" title=\"13.2 静态链表\"></a>13.2 静态链表</h5><h6 id=\"13-2-1-静态链表的结构\"><a href=\"#13-2-1-静态链表的结构\" class=\"headerlink\" title=\"13.2.1 静态链表的结构\"></a>13.2.1 静态链表的结构</h6><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Node</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">    <span class=\"type\">int</span> data; <span class=\"comment\">//数据域</span></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Node</span>* <span class=\"title\">next</span>;</span> <span class=\"comment\">//指针域，用于存储下一个节点的首地址</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 初始化创建静态链表节点</span></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Node</span> <span class=\"title\">Node1</span> =</span> &#123;<span class=\"number\">1</span>, <span class=\"literal\">NULL</span>&#125;;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Node</span> <span class=\"title\">Node2</span> =</span> &#123;<span class=\"number\">2</span>, <span class=\"literal\">NULL</span>&#125;;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Node</span> <span class=\"title\">Node3</span> =</span> &#123;<span class=\"number\">3</span>, <span class=\"literal\">NULL</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 将Node2的首地址存入Node1的next指针地址变量内</span></span><br><span class=\"line\">    Node1.next = &amp;Node2;</span><br><span class=\"line\">    Node2.next = &amp;Node3;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h6 id=\"13-2-2-遍历打印静态链表\"><a href=\"#13-2-2-遍历打印静态链表\" class=\"headerlink\" title=\"13.2.2 遍历打印静态链表\"></a>13.2.2 遍历打印静态链表</h6><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Node</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">    <span class=\"type\">int</span> data; <span class=\"comment\">//数据域</span></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Node</span>* <span class=\"title\">next</span>;</span> <span class=\"comment\">//指针域，用于存储下一个节点的首地址</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">printList</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Node</span> <span class=\"title\">node1</span> =</span> &#123;<span class=\"number\">1</span>, <span class=\"literal\">NULL</span>&#125;;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Node</span> <span class=\"title\">node2</span> =</span> &#123;<span class=\"number\">2</span>, <span class=\"literal\">NULL</span>&#125;;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Node</span> <span class=\"title\">node3</span> =</span> &#123;<span class=\"number\">3</span>, <span class=\"literal\">NULL</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 将Node2的首地址存入Node1的next指针地址变量内</span></span><br><span class=\"line\">    node1.next = &amp;node2;</span><br><span class=\"line\">    node2.next = &amp;node3;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 遍历链表</span></span><br><span class=\"line\">    <span class=\"comment\">// 先定义一个辅助指针变量</span></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Node</span> *<span class=\"title\">pCurrent</span> =</span> &amp;node1;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (pCurrent != <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 将这个指针指向的内存空间中的节点元素打印</span></span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d\\n&quot;</span>, pCurrent-&gt;data);</span><br><span class=\"line\">        <span class=\"comment\">// 打印后，将节点的指针域内存放的下一个节点首地址，赋值给pCurrent，从而找到下一个链表节点</span></span><br><span class=\"line\">        pCurrent = pCurrent-&gt;next;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    printList();</span><br><span class=\"line\">    system(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h6 id=\"13-3-动态链表-模块化\"><a href=\"#13-3-动态链表-模块化\" class=\"headerlink\" title=\"13.3 动态链表(模块化)\"></a>13.3 动态链表(模块化)</h6><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">// Created by FHang on 2021/3/29.</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> * 动态创建链表</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Node</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">    <span class=\"type\">int</span> data; <span class=\"comment\">//数据域</span></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Node</span> *<span class=\"title\">next</span>;</span> <span class=\"comment\">//指针域</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 创建链表</span></span><br><span class=\"line\"><span class=\"keyword\">struct</span> Node *<span class=\"title function_\">createList</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"comment\">// headNode成为结构体变量</span></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Node</span> *<span class=\"title\">headNode</span> =</span> (<span class=\"keyword\">struct</span> Node*)<span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(<span class=\"keyword\">struct</span> Node));</span><br><span class=\"line\">    <span class=\"comment\">// 变量使用前，需要初始化</span></span><br><span class=\"line\">    <span class=\"comment\">// headNode-&gt;data = 1;</span></span><br><span class=\"line\">    headNode-&gt;next = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> headNode;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 创建节点</span></span><br><span class=\"line\"><span class=\"keyword\">struct</span> Node *<span class=\"title function_\">createNode</span><span class=\"params\">(<span class=\"type\">int</span> data)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Node</span> *<span class=\"title\">newNode</span> =</span> (<span class=\"keyword\">struct</span> Node*)<span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(<span class=\"keyword\">struct</span> Node));</span><br><span class=\"line\">    newNode-&gt;data = data;</span><br><span class=\"line\">    newNode-&gt;next = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> newNode;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 插入节点(表头法插入)</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">insertNodeByHead</span><span class=\"params\">(<span class=\"keyword\">struct</span> Node *headNode, <span class=\"type\">int</span> data)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 创建新的插入节点</span></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Node</span> *<span class=\"title\">newNode</span> =</span> createNode(data);</span><br><span class=\"line\">    newNode-&gt;next = headNode-&gt;next;</span><br><span class=\"line\">    headNode-&gt;next = newNode;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 删除指定链表</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">deleteNode</span><span class=\"params\">(<span class=\"keyword\">struct</span> Node *headNode, <span class=\"type\">int</span> posData)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Node</span> *<span class=\"title\">posNode</span> =</span> headNode-&gt;next;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Node</span> *<span class=\"title\">posNodeFront</span> =</span> headNode;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (posNode == <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Can&#x27;t Delete Null Linklist !\\n&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (posNode-&gt;data != posData)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            posNodeFront = posNode;</span><br><span class=\"line\">            posNode = posNodeFront-&gt;next;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (posNode == <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Can&#x27;t Find This Linklist !\\n&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">return</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        posNodeFront-&gt;next = posNode-&gt;next;</span><br><span class=\"line\">        <span class=\"built_in\">free</span>(posNode);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 打印</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">printList</span><span class=\"params\">(<span class=\"keyword\">struct</span> Node *headNode)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Node</span> *<span class=\"title\">pMove</span> =</span> headNode-&gt;next;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (pMove != <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Data=%d\\n&quot;</span>, pMove-&gt;data);</span><br><span class=\"line\">        pMove = pMove-&gt;next;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Node</span> *<span class=\"title\">list</span> =</span> createList();</span><br><span class=\"line\">    insertNodeByHead(<span class=\"built_in\">list</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">    insertNodeByHead(<span class=\"built_in\">list</span>, <span class=\"number\">2</span>);</span><br><span class=\"line\">    insertNodeByHead(<span class=\"built_in\">list</span>, <span class=\"number\">3</span>);</span><br><span class=\"line\">    printList(<span class=\"built_in\">list</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    deleteNode(<span class=\"built_in\">list</span>, <span class=\"number\">2</span>);</span><br><span class=\"line\">    printList(<span class=\"built_in\">list</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    system(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h3 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\"></a>例子</h3><h4 id=\"1-求百十个位的和\"><a href=\"#1-求百十个位的和\" class=\"headerlink\" title=\"1.  求百十个位的和\"></a>1.  求百十个位的和</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> Debug printf</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> Enter scanf_s</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> enterNum, sumNum;</span><br><span class=\"line\">    <span class=\"type\">int</span> b, s, g;</span><br><span class=\"line\"></span><br><span class=\"line\">    Debug(<span class=\"string\">&quot;Enter Num : &quot;</span>);</span><br><span class=\"line\">    Enter(<span class=\"string\">&quot;%d&quot;</span>, &amp;enterNum);</span><br><span class=\"line\"></span><br><span class=\"line\">    b = enterNum / <span class=\"number\">100</span>;</span><br><span class=\"line\">    s = enterNum / <span class=\"number\">10</span> % <span class=\"number\">10</span>;</span><br><span class=\"line\">    g = enterNum % <span class=\"number\">10</span>;</span><br><span class=\"line\">    sumNum = b + s + g;</span><br><span class=\"line\"></span><br><span class=\"line\">    Debug(<span class=\"string\">&quot;Sum=%d&quot;</span>, sumNum);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"2-求200-300之间素数和\"><a href=\"#2-求200-300之间素数和\" class=\"headerlink\" title=\"2. 求200-300之间素数和\"></a>2. 求200-300之间素数和</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> n, i;</span><br><span class=\"line\">    <span class=\"type\">int</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (n = <span class=\"number\">200</span>; n &lt; <span class=\"number\">300</span>; ++n)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (i = <span class=\"number\">2</span>; i &lt; n / <span class=\"number\">2</span>; ++i)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (n % i == <span class=\"number\">0</span>)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i &gt;= n / <span class=\"number\">2</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            sum += n;</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%4d&quot;</span>, n);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n sum = %d&quot;</span>, sum);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"3-斐波那契\"><a href=\"#3-斐波那契\" class=\"headerlink\" title=\"3. 斐波那契\"></a>3. 斐波那契</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> f1 = <span class=\"number\">1</span>, f2 = <span class=\"number\">1</span>, f3;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;1=%d\\n2=%d\\n&quot;</span>, f1, f2);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> k = <span class=\"number\">3</span>; k &lt;= <span class=\"number\">20</span>; ++k)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        f3 = f1 + f2;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d=%d\\n&quot;</span>, k, f3);</span><br><span class=\"line\">        f1 = f2;</span><br><span class=\"line\">        f2 = f3;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"4-递增算法\"><a href=\"#4-递增算法\" class=\"headerlink\" title=\"4. 递增算法\"></a>4. 递增算法</h4><img src=\"https://cdn.jsdelivr.net/gh/FHangH/FHangBlogCDN_02@master/1.C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/32.png\"/>\n\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> sum = <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">9</span>; i &gt;= <span class=\"number\">1</span>; i--)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        sum = (sum + <span class=\"number\">1</span>) * <span class=\"number\">2</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i == <span class=\"number\">1</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;1 day has %d&quot;</span>, sum);</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h4 id=\"5-100-999之间水仙花数\"><a href=\"#5-100-999之间水仙花数\" class=\"headerlink\" title=\"5. 100-999之间水仙花数\"></a>5. 100-999之间水仙花数</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> sum, bw, sw, gw;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">100</span>; i &lt;= <span class=\"number\">999</span>; ++i)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        bw = i / <span class=\"number\">100</span>;</span><br><span class=\"line\">        sw = i / <span class=\"number\">10</span> % <span class=\"number\">10</span>;</span><br><span class=\"line\">        gw = i % <span class=\"number\">10</span>;</span><br><span class=\"line\">        sum = bw * bw * bw + sw * sw * sw + gw * gw * gw;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (sum == i)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d\\t&quot;</span>, sum);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h4 id=\"6-求-1-2-3-…-10\"><a href=\"#6-求-1-2-3-…-10\" class=\"headerlink\" title=\"6. 求 1!+2!+3!+…+10!\"></a>6. 求 1!+2!+3!+…+10!</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">long</span> sum = <span class=\"number\">0</span>, fact = <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> n = <span class=\"number\">1</span>; n &lt;= <span class=\"number\">10</span> ; ++n)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        fact *= n;</span><br><span class=\"line\">        sum += fact;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;sum = %ld&quot;</span>, sum);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h4 id=\"7-求多项式的值\"><a href=\"#7-求多项式的值\" class=\"headerlink\" title=\"7. 求多项式的值\"></a>7. 求多项式的值</h4><img src=\"https://cdn.jsdelivr.net/gh/FHangH/FHangBlogCDN_02@master/1.C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/33.png\"/>\n\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">float</span> x = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"type\">float</span> sum = <span class=\"number\">1</span>, term = <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Enter X Num : &quot;</span>);</span><br><span class=\"line\">    scanf_s(<span class=\"string\">&quot;%f&quot;</span>, &amp;x);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> n = <span class=\"number\">1</span>; n &lt;= <span class=\"number\">20</span> ; ++n)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        term = (-term * x) / x;</span><br><span class=\"line\">        sum += term;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Calculate Num is %.2f\\n&quot;</span>, sum);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h4 id=\"8-将整形一维数组的内容颠倒顺序\"><a href=\"#8-将整形一维数组的内容颠倒顺序\" class=\"headerlink\" title=\"8. 将整形一维数组的内容颠倒顺序\"></a>8. 将整形一维数组的内容颠倒顺序</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> arr[<span class=\"number\">10</span>] = &#123;<span class=\"number\">11</span>, <span class=\"number\">22</span>, <span class=\"number\">33</span>, <span class=\"number\">44</span>, <span class=\"number\">55</span>, <span class=\"number\">66</span>, <span class=\"number\">77</span>, <span class=\"number\">88</span>, <span class=\"number\">99</span>, <span class=\"number\">100</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; ++i)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%4d&quot;</span>, arr[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>, j = <span class=\"number\">9</span>; i &lt; j; ++i, --j)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        sum = arr[i];</span><br><span class=\"line\">        arr[i] = arr[j];</span><br><span class=\"line\">        arr[j] = sum;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> k = <span class=\"number\">0</span>; k &lt; <span class=\"number\">10</span>; ++k)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%4d&quot;</span>, arr[k]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h4 id=\"9-将3行4列的数组值转置到4行3列\"><a href=\"#9-将3行4列的数组值转置到4行3列\" class=\"headerlink\" title=\"9. 将3行4列的数组值转置到4行3列\"></a>9. 将3行4列的数组值转置到4行3列</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> arrA[<span class=\"number\">3</span>][<span class=\"number\">4</span>] = &#123;&#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>,  <span class=\"number\">3</span>,  <span class=\"number\">4</span>&#125;,</span><br><span class=\"line\">                     &#123;<span class=\"number\">5</span>, <span class=\"number\">6</span>,  <span class=\"number\">7</span>,  <span class=\"number\">8</span>&#125;,</span><br><span class=\"line\">                     &#123;<span class=\"number\">9</span>, <span class=\"number\">10</span>, <span class=\"number\">11</span>, <span class=\"number\">12</span>&#125;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">static</span> <span class=\"type\">int</span> arrB[<span class=\"number\">4</span>][<span class=\"number\">3</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Before Transpose:\\n&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">3</span>; ++i)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">4</span>; ++j)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%4d&quot;</span>, arrA[i][j]);</span><br><span class=\"line\">            arrB[j][i] = arrA[i][j];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Later Transpose:\\n&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">4</span>; ++i)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">3</span>; ++j)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%4d&quot;</span>, arrB[i][j]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h4 id=\"10-将字符串1内容赋值到字符串2中\"><a href=\"#10-将字符串1内容赋值到字符串2中\" class=\"headerlink\" title=\"10. 将字符串1内容赋值到字符串2中\"></a>10. 将字符串1内容赋值到字符串2中</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">char</span> s2[<span class=\"number\">50</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">char</span> s1[<span class=\"number\">50</span>] = <span class=\"string\">&quot;abcdefghjklmn&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; (s2[i] = s1[i]); ++i);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">puts</span>(s2);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h4 id=\"11-打印杨辉三角前10行\"><a href=\"#11-打印杨辉三角前10行\" class=\"headerlink\" title=\"11. 打印杨辉三角前10行\"></a>11. 打印杨辉三角前10行</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> arr[<span class=\"number\">10</span>][<span class=\"number\">10</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; ++i)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt;= i; ++j)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (j==<span class=\"number\">0</span>||i==j)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                arr[i][j] = <span class=\"number\">1</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                arr[i][j] = arr[i<span class=\"number\">-1</span>][j<span class=\"number\">-1</span>] + arr[i<span class=\"number\">-1</span>][j];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; ++i)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt;= i; ++j)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%5d&quot;</span>, arr[i][j]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h4 id=\"12-判断字符串或数字是否为回文\"><a href=\"#12-判断字符串或数字是否为回文\" class=\"headerlink\" title=\"12. 判断字符串或数字是否为回文\"></a>12. 判断字符串或数字是否为回文</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;string&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">char</span> enterStr[<span class=\"number\">45</span>];</span><br><span class=\"line\">    <span class=\"type\">int</span> i, j;</span><br><span class=\"line\"></span><br><span class=\"line\">    gets(enterStr);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>, j = <span class=\"built_in\">strlen</span>(enterStr) - <span class=\"number\">1</span>; i &lt; j &amp;&amp; (enterStr[i] == enterStr[j]); ++i, --j);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (i &lt; j)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;No&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Yes&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> x, y = <span class=\"number\">0</span>, z;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Enter:&quot;</span>);</span><br><span class=\"line\">    scanf_s(<span class=\"string\">&quot;%d&quot;</span>, &amp;z);</span><br><span class=\"line\">    x = z;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (x != <span class=\"number\">0</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        y = (<span class=\"number\">10</span>*y) + (x%<span class=\"number\">10</span>);</span><br><span class=\"line\">        x = x/<span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"comment\">//        printf(&quot;x=%d\\n&quot;, x);</span></span><br><span class=\"line\"><span class=\"comment\">//        printf(&quot;y=%d\\n&quot;, y);</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (z == y)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Yes&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;No&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"13-用递归算法计算n！\"><a href=\"#13-用递归算法计算n！\" class=\"headerlink\" title=\"13. 用递归算法计算n！\"></a>13. 用递归算法计算n！</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">double</span> <span class=\"title function_\">funcFact</span><span class=\"params\">(<span class=\"type\">int</span> n)</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> n = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"type\">double</span> factNum;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Enter Num :&quot;</span>);</span><br><span class=\"line\">    scanf_s(<span class=\"string\">&quot;%d&quot;</span>, &amp;n);</span><br><span class=\"line\">    factNum = funcFact(n);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Fact = %.0lf&quot;</span>, factNum);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">double</span> <span class=\"title function_\">funcFact</span><span class=\"params\">(<span class=\"type\">int</span> n)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">double</span> fact;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (n == <span class=\"number\">1</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        fact = <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        fact = n * funcFact(n - <span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> fact;</span><br><span class=\"line\">    <span class=\"comment\">// 三目运算来表达</span></span><br><span class=\"line\">    <span class=\"comment\">// return n == 1 ? 1 : n * funcFact(n - 1);</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"14-用递归计算1-2-…-n\"><a href=\"#14-用递归计算1-2-…-n\" class=\"headerlink\" title=\"14. 用递归计算1+2+…+n\"></a>14. 用递归计算1+2+…+n</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">funcSum</span><span class=\"params\">(<span class=\"type\">int</span> n)</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> enterNum;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Enter Num :&quot;</span>);</span><br><span class=\"line\">    scanf_s(<span class=\"string\">&quot;%d&quot;</span>, &amp;enterNum);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Sum = %d&quot;</span>, funcSum(enterNum));</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">funcSum</span><span class=\"params\">(<span class=\"type\">int</span> n)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> n == <span class=\"number\">1</span> ? <span class=\"number\">1</span> : n + funcSum(n - <span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"15-用循环和递归计算任意整数个位数之和\"><a href=\"#15-用循环和递归计算任意整数个位数之和\" class=\"headerlink\" title=\"15. 用循环和递归计算任意整数个位数之和\"></a>15. 用循环和递归计算任意整数个位数之和</h4><ul>\n<li>循环</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> n;</span><br><span class=\"line\">    <span class=\"type\">int</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Enter Num :&quot;</span>);</span><br><span class=\"line\">    scanf_s(<span class=\"string\">&quot;%d&quot;</span>, &amp;n);</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (n)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        sum += n % <span class=\"number\">10</span>;</span><br><span class=\"line\">        n = n / <span class=\"number\">10</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Sum = %d&quot;</span>, sum);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>递归</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">funcSum</span><span class=\"params\">(<span class=\"type\">int</span> n)</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> n;</span><br><span class=\"line\">    <span class=\"type\">int</span> sum;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Enter Num :&quot;</span>);</span><br><span class=\"line\">    scanf_s(<span class=\"string\">&quot;%d&quot;</span>, &amp;n);</span><br><span class=\"line\">    sum = funcSum(n);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Sum = %d&quot;</span>, sum);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">funcSum</span><span class=\"params\">(<span class=\"type\">int</span> n)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> n &lt; <span class=\"number\">10</span> ? n : (n % <span class=\"number\">10</span>) + funcSum(n / <span class=\"number\">10</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"16-通过函数将数组内元素加10\"><a href=\"#16-通过函数将数组内元素加10\" class=\"headerlink\" title=\"16. 通过函数将数组内元素加10\"></a>16. 通过函数将数组内元素加10</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">funcAdd</span><span class=\"params\">(<span class=\"type\">int</span> *p_arr, <span class=\"type\">int</span> eleCount, <span class=\"type\">int</span> addNum)</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> arr[<span class=\"number\">5</span>] = &#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>&#125;;</span><br><span class=\"line\">    <span class=\"type\">int</span> eleCount;</span><br><span class=\"line\">    eleCount = <span class=\"keyword\">sizeof</span>(arr) / <span class=\"keyword\">sizeof</span>(arr[<span class=\"number\">0</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\">    funcAdd(arr, eleCount, <span class=\"number\">10</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; eleCount; ++i)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%3d&quot;</span>, arr[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">funcAdd</span><span class=\"params\">(<span class=\"type\">int</span> *p_arr, <span class=\"type\">int</span> eleCount, <span class=\"type\">int</span> addNum)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; eleCount; ++i)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        p_arr[i] += addNum;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"17-指针变量为形参，求数组元素和平均值\"><a href=\"#17-指针变量为形参，求数组元素和平均值\" class=\"headerlink\" title=\"17. 指针变量为形参，求数组元素和平均值\"></a>17. 指针变量为形参，求数组元素和平均值</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">float</span> <span class=\"title function_\">funcCalculateAverage</span><span class=\"params\">(<span class=\"type\">const</span> <span class=\"type\">int</span> *p_arr, <span class=\"type\">int</span> eleCount)</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> arr[<span class=\"number\">6</span>] = &#123;<span class=\"number\">10</span>, <span class=\"number\">20</span>, <span class=\"number\">30</span>, <span class=\"number\">40</span>, <span class=\"number\">50</span>, <span class=\"number\">11</span>&#125;;</span><br><span class=\"line\">    <span class=\"type\">int</span> eleCount;</span><br><span class=\"line\">    eleCount = <span class=\"keyword\">sizeof</span>(arr) / <span class=\"keyword\">sizeof</span>(arr[<span class=\"number\">0</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;arr[%d] average = %.2f&quot;</span>, eleCount, funcCalculateAverage(arr, eleCount));</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">float</span> <span class=\"title function_\">funcCalculateAverage</span><span class=\"params\">(<span class=\"type\">const</span> <span class=\"type\">int</span> *p_arr, <span class=\"type\">int</span> eleCount)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"type\">float</span> average;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; eleCount; ++i)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        sum += p_arr[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    average = (<span class=\"type\">float</span>)sum / (<span class=\"type\">float</span>)eleCount;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> average;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"18-数组元素指针访问数组\"><a href=\"#18-数组元素指针访问数组\" class=\"headerlink\" title=\"18. 数组元素指针访问数组\"></a>18. 数组元素指针访问数组</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> *p;</span><br><span class=\"line\">    <span class=\"type\">int</span> arr[<span class=\"number\">3</span>][<span class=\"number\">4</span>] = &#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>, <span class=\"number\">10</span>, <span class=\"number\">11</span>, <span class=\"number\">12</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"># 两种写法</span><br><span class=\"line\"><span class=\"comment\">//    for (p = arr[0]; p &lt; arr[0] + 12; p++)</span></span><br><span class=\"line\"><span class=\"comment\">//    &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//        if ((p - arr[0]) % 4 == 0)</span></span><br><span class=\"line\"><span class=\"comment\">//        &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//            printf(&quot;\\n&quot;);</span></span><br><span class=\"line\"><span class=\"comment\">//        &#125;</span></span><br><span class=\"line\"><span class=\"comment\">//        printf(&quot;%3d&quot;, *p);</span></span><br><span class=\"line\"><span class=\"comment\">//    &#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (p = *(arr + <span class=\"number\">0</span>); p &lt; *(arr + <span class=\"number\">0</span>) + <span class=\"number\">12</span>; p++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ((p - *(arr + <span class=\"number\">0</span>)) % <span class=\"number\">4</span> == <span class=\"number\">0</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%3d&quot;</span>, *p);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"19-一维数组访问二维数组\"><a href=\"#19-一维数组访问二维数组\" class=\"headerlink\" title=\"19. 一维数组访问二维数组\"></a>19. 一维数组访问二维数组</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> (*p)[<span class=\"number\">4</span>];</span><br><span class=\"line\">    <span class=\"type\">int</span> arr[<span class=\"number\">3</span>][<span class=\"number\">4</span>] = &#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>, <span class=\"number\">10</span>, <span class=\"number\">11</span>, <span class=\"number\">12</span>&#125;;</span><br><span class=\"line\">    p = arr;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">3</span>; ++i)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">4</span>; ++j)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%3d&quot;</span>, p[i][j]);</span><br><span class=\"line\"><span class=\"comment\">//            printf(&quot;%3d&quot;, *(*(p + i) + j));</span></span><br><span class=\"line\"><span class=\"comment\">//            printf(&quot;%3d&quot;, *(*(arr + i) + j));</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> (*p)[<span class=\"number\">4</span>], arr[<span class=\"number\">3</span>][<span class=\"number\">4</span>] = &#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>, <span class=\"number\">10</span>, <span class=\"number\">11</span>, <span class=\"number\">12</span>&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (p = arr; p &lt; arr + <span class=\"number\">3</span>; p++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">4</span>; ++i)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%3d&quot;</span>, *(*p + i));</span><br><span class=\"line\"><span class=\"comment\">//            printf(&quot;%3d&quot;, *(*(arr + x) + i)); -&gt; x 的取值为 0， 1， 2</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"20-指针数组访问另一个一维数组\"><a href=\"#20-指针数组访问另一个一维数组\" class=\"headerlink\" title=\"20. 指针数组访问另一个一维数组\"></a>20. 指针数组访问另一个一维数组</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> *p_Arr[<span class=\"number\">5</span>]; # == p_Arr0, p_Arr1, ... p_Arr4</span><br><span class=\"line\">    <span class=\"type\">int</span> tag_Arr[<span class=\"number\">5</span>] = &#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">5</span>; ++i)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        p_Arr[i] = tag_Arr + i;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">5</span>; ++j)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%3d&quot;</span>, *p_Arr[j]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"21-指针数组的应用\"><a href=\"#21-指针数组的应用\" class=\"headerlink\" title=\"21. 指针数组的应用\"></a>21. 指针数组的应用</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">char</span> *p_StrArr[<span class=\"number\">2</span>] = &#123;<span class=\"string\">&quot;Hello&quot;</span>, <span class=\"string\">&quot;World&quot;</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">2</span>; ++i)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%s\\n&quot;</span>, p_StrArr[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n","text":"C语言基础[toc] 1. 编译预处理命令三种： 宏定义 文件包含 条件编译 1.1 宏定义宏是根据一系列定义的规则替换一段文本的一种模式 格式：#define...","permalink":"/post/5.C语言基础_01","photos":[],"count_time":{"symbolsCount":"52k","symbolsTime":"48 mins."},"categories":[{"name":"编程","slug":"编程","count":16,"path":"api/categories/编程.json"}],"tags":[{"name":"C/C++","slug":"C-C","count":10,"path":"api/tags/C-C.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80\"><span class=\"toc-text\">C语言基础</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E7%BC%96%E8%AF%91%E9%A2%84%E5%A4%84%E7%90%86%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">1. 编译预处理命令</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-1-%E5%AE%8F%E5%AE%9A%E4%B9%89\"><span class=\"toc-text\">1.1 宏定义</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-2-%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">1.2 文件包含命令</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E7%BC%96%E8%AF%91%E8%BF%87%E7%A8%8B\"><span class=\"toc-text\">2. 编译过程</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E8%BF%90%E7%AE%97%E9%87%8F\"><span class=\"toc-text\">3. 运算量</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-1-%E5%B8%B8%E9%87%8F\"><span class=\"toc-text\">3.1 常量</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#3-1-1-%E5%80%BC%E5%B8%B8%E9%87%8F\"><span class=\"toc-text\">3.1.1 值常量</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#3-1-2-%E7%AC%A6%E5%8F%B7%E5%B8%B8%E9%87%8F\"><span class=\"toc-text\">3.1.2 符号常量</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-2-%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">3.2 变量</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#3-2-1-%E7%B1%BB%E5%9E%8B%E5%8D%A0%E5%86%85%E5%AD%98%E5%A4%A7%E5%B0%8F\"><span class=\"toc-text\">3.2.1 类型占内存大小</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-3-%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">3.3 函数</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">4. 运算符</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-1-%E7%AE%97%E6%9C%AF%E8%BF%90%E7%AE%97%E7%AC%A6%E7%9A%84%E7%BB%93%E5%90%88%E6%80%A7\"><span class=\"toc-text\">4.1 算术运算符的结合性</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-2-%E5%85%B3%E7%B3%BB%E5%8F%8A%E9%80%BB%E8%BE%91%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">4.2 关系及逻辑运算符</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#4-2-1-%E5%85%B3%E7%B3%BB%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">4.2.1 关系运算符</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#4-2-2-%E9%80%BB%E8%BE%91%E8%BF%90%E7%AE%97%E7%AC%A6%E5%92%8C%E8%A1%A8%E8%BE%BE%E5%BC%8F\"><span class=\"toc-text\">4.2.2 逻辑运算符和表达式</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-3-%E8%B5%8B%E5%80%BC%E3%80%81%E9%80%97%E5%8F%B7%E3%80%81%E6%B1%82%E5%AD%97%E8%8A%82\"><span class=\"toc-text\">4.3 赋值、逗号、求字节</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#4-3-1-%E8%B5%8B%E5%80%BC\"><span class=\"toc-text\">4.3.1 赋值</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#4-3-2-%E9%80%97%E5%8F%B7\"><span class=\"toc-text\">4.3.2 逗号</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#4-3-3-%E6%B1%82%E5%AD%97%E8%8A%82\"><span class=\"toc-text\">4.3.3 求字节</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-4-%E4%BD%8D%E8%BF%90%E7%AE%97\"><span class=\"toc-text\">4.4 位运算</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2\"><span class=\"toc-text\">5. 数据类型转换</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#5-1-%E8%B5%8B%E5%80%BC%E8%BD%AC%E6%8D%A2\"><span class=\"toc-text\">5.1 赋值转换</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#5-2-%E8%87%AA%E5%8A%A8%E8%BD%AC%E6%8D%A2\"><span class=\"toc-text\">5.2 自动转换</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#5-3-%E5%BC%BA%E5%88%B6%E8%BD%AC%E6%8D%A2\"><span class=\"toc-text\">5.3 强制转换</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-%E7%AE%97%E6%B3%95\"><span class=\"toc-text\">6. 算法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#6-1-%E5%AD%97%E7%AC%A6%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">6.1 字符输入输出函数</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#6-1-1-%E5%AD%97%E7%AC%A6%E8%BE%93%E5%85%A5%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">6.1.1 字符输入函数</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#6-1-2-%E5%AD%97%E7%AC%A6%E8%BE%93%E5%87%BA%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">6.1.2 字符输出函数</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#6-2-%E6%A0%BC%E5%BC%8F%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">6.2 格式输入输出函数</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#6-2-1-%E6%A0%BC%E5%BC%8F%E8%BE%93%E5%87%BA%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">6.2.1 格式输出函数</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#6-2-2-%E6%A0%BC%E5%BC%8F%E8%BE%93%E5%85%A5%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">6.2.2 格式输入函数</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#6-3-%E4%B8%89%E7%9B%AE%E8%BF%90%E7%AE%97\"><span class=\"toc-text\">6.3 三目运算</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#6-4-switch\"><span class=\"toc-text\">6.4 switch</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#7-%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84%E7%A8%8B%E5%BA%8F\"><span class=\"toc-text\">7. 循环结构程序</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#7-1-while%E5%BE%AA%E7%8E%AF\"><span class=\"toc-text\">7.1 while循环</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#7-2-do-while\"><span class=\"toc-text\">7.2 do-while</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#7-3-for\"><span class=\"toc-text\">7.3 for</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#7-4-goto\"><span class=\"toc-text\">7.4 goto</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#7-5-break%E5%92%8Ccontinue\"><span class=\"toc-text\">7.5 break和continue</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#7-5-1-break\"><span class=\"toc-text\">7.5.1 break</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#7-5-2-continue\"><span class=\"toc-text\">7.5.2 continue</span></a></li></ol></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#7-6-%E5%BE%AA%E7%8E%AF%E5%B5%8C%E5%A5%97\"><span class=\"toc-text\">7.6 循环嵌套</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#8-%E6%95%B0%E7%BB%84\"><span class=\"toc-text\">8. 数组</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#8-1-%E4%B8%80%E7%BB%B4%E6%95%B0%E7%BB%84\"><span class=\"toc-text\">8.1 一维数组</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#8-1-1-%E4%B8%80%E7%BB%B4%E6%95%B0%E7%BB%84%E7%9A%84%E5%AE%9A%E4%B9%89\"><span class=\"toc-text\">8.1.1 一维数组的定义</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#8-1-2-%E4%B8%80%E7%BB%B4%E6%95%B0%E7%BB%84%E5%90%8D%E4%BD%9C%E7%94%A8\"><span class=\"toc-text\">8.1.2 一维数组名作用</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#8-1-3-%E8%BE%93%E5%85%A5%E6%95%B0%E5%AD%97%EF%BC%8C%E6%8C%89%E9%A1%BA%E5%BA%8F%E8%BE%93%E5%87%BA\"><span class=\"toc-text\">8.1.3 输入数字，按顺序输出</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#8-1-4-%E8%BE%93%E5%85%A5%E6%95%B0%E5%AD%97%EF%BC%8C%E8%BE%93%E5%87%BA%E6%9C%80%E5%A4%A7%E5%80%BC\"><span class=\"toc-text\">8.1.4 输入数字，输出最大值</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#8-1-5-%E8%BE%93%E5%85%A5%E6%95%B0%E5%AD%97%EF%BC%8C%E6%B1%82%E5%B9%B3%E5%9D%87%E5%80%BC\"><span class=\"toc-text\">8.1.5 输入数字，求平均值</span></a></li></ol></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#8-2-%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84\"><span class=\"toc-text\">8.2 二维数组</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#8-2-1-%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%E7%9A%84%E5%AE%9A%E4%B9%89\"><span class=\"toc-text\">8.2.1 二维数组的定义</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#8-2-2-%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%E5%90%8D%E4%BD%9C%E7%94%A8\"><span class=\"toc-text\">8.2.2 二维数组名作用</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#8-2-3-%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA\"><span class=\"toc-text\">8.2.3 二维数组输入输出</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#8-2-4-%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%E6%89%BE%E5%88%B0%E6%9C%80%E5%A4%A7%E5%85%83%E7%B4%A0%E5%8F%8A%E7%B4%A2%E5%BC%95\"><span class=\"toc-text\">8.2.4 二维数组找到最大元素及索引</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#8-2-5-3-3%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%E6%B1%82%E5%AF%B9%E8%A7%92%E7%BA%BF%E5%80%BC%E5%92%8C\"><span class=\"toc-text\">8.2.5 3*3二维数组求对角线值和</span></a></li></ol></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#8-3-%E5%AD%97%E7%AC%A6%E6%95%B0%E7%BB%84\"><span class=\"toc-text\">8.3 字符数组</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#8-3-1-%E5%AD%97%E7%AC%A6%E6%95%B0%E7%BB%84%E5%88%9D%E5%A7%8B%E5%8C%96\"><span class=\"toc-text\">8.3.1 字符数组初始化</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#8-3-2-%E5%AD%97%E7%AC%A6%E6%95%B0%E7%BB%84%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA\"><span class=\"toc-text\">8.3.2 字符数组输入输出</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#8-3-3-%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%A4%84%E7%90%86%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">8.3.3 字符串处理函数</span></a></li></ol></li></ol></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#9-%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">9. 函数</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#9-1-%E5%87%BD%E6%95%B0%E7%9A%84%E5%AE%9A%E4%B9%89\"><span class=\"toc-text\">9.1 函数的定义</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#9-1-1-%E5%87%BD%E6%95%B0%E7%9A%84%E5%88%86%E7%B1%BB\"><span class=\"toc-text\">9.1.1 函数的分类</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#9-1-2-%E5%87%BD%E6%95%B0%E7%9A%84%E5%AE%9A%E4%B9%89\"><span class=\"toc-text\">9.1.2 函数的定义</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#9-1-3-%E5%AE%9A%E4%B9%89%E4%B8%8D%E8%BF%94%E5%9B%9E%E5%80%BC%E7%9A%84%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">9.1.3 定义不返回值的函数</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#9-1-4-%E5%AE%9A%E4%B9%89%E8%BF%94%E5%9B%9E%E5%80%BC%E7%9A%84%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">9.1.4 定义返回值的函数</span></a></li></ol></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#9-2-%E5%87%BD%E6%95%B0%E7%9A%84%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">9.2 函数的使用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#9-2-1-%E5%87%BD%E6%95%B0%E7%9A%84%E6%89%A7%E8%A1%8C%E8%BF%87%E7%A8%8B\"><span class=\"toc-text\">9.2.1 函数的执行过程</span></a></li></ol></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#9-3-%E5%87%BD%E6%95%B0%E7%9A%84%E8%B0%83%E7%94%A8%E5%BD%A2%E5%BC%8F\"><span class=\"toc-text\">9.3 函数的调用形式</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#9-4-%E5%87%BD%E6%95%B0%E7%9A%84%E5%A3%B0%E6%98%8E\"><span class=\"toc-text\">9.4 函数的声明</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#9-5-%E5%B8%A6%E5%8F%82%E5%AE%8F%E5%92%8C%E5%87%BD%E6%95%B0%E7%9A%84%E5%8C%BA%E5%88%AB\"><span class=\"toc-text\">9.5 带参宏和函数的区别</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#9-6-%E5%87%BD%E6%95%B0%E7%9A%84%E5%B5%8C%E5%A5%97%E5%92%8C%E9%80%92%E5%BD%92%E8%B0%83%E7%94%A8\"><span class=\"toc-text\">9.6 函数的嵌套和递归调用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#9-6-1-%E5%87%BD%E6%95%B0%E7%9A%84%E5%B5%8C%E5%A5%97%E8%B0%83%E7%94%A8\"><span class=\"toc-text\">9.6.1 函数的嵌套调用</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#9-6-2-%E4%BE%8B%E9%A2%98\"><span class=\"toc-text\">9.6.2 例题</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#9-6-3-%E5%87%BD%E6%95%B0%E7%9A%84%E9%80%92%E5%BD%92%E8%B0%83%E7%94%A8\"><span class=\"toc-text\">9.6.3 函数的递归调用</span></a></li></ol></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#9-7-%E5%8F%98%E9%87%8F%E7%9A%84%E4%BD%9C%E7%94%A8%E5%9F%9F\"><span class=\"toc-text\">9.7 变量的作用域</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#9-7-1-%E5%AE%9A%E4%B9%89%E5%92%8C%E5%8C%BA%E5%88%AB\"><span class=\"toc-text\">9.7.1 定义和区别</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#9-7-2-%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F%E4%BE%8B%E5%AD%90\"><span class=\"toc-text\">9.7.2 全局变量例子</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#9-7-3-%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F%E5%92%8C%E5%B1%80%E9%83%A8%E5%8F%98%E9%87%8F%E5%90%8C%E5%90%8D\"><span class=\"toc-text\">9.7.3 全局变量和局部变量同名</span></a></li></ol></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#9-8-%E5%8F%98%E9%87%8F%E7%9A%84%E5%AD%98%E5%82%A8%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">9.8 变量的存储类型</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#9-8-1-%E5%AE%9A%E4%B9%89%E5%92%8C%E5%88%86%E7%B1%BB\"><span class=\"toc-text\">9.8.1 定义和分类</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#9-8-2-%E4%BE%8B%E5%AD%90\"><span class=\"toc-text\">9.8.2 例子</span></a></li></ol></li></ol></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#10-%E6%8C%87%E9%92%88\"><span class=\"toc-text\">10. 指针</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#10-1-%E6%8C%87%E9%92%88%E7%9A%84%E6%A6%82%E5%BF%B5\"><span class=\"toc-text\">10.1 指针的概念</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#10-2-%E6%8C%87%E9%92%88%E7%9A%84%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">10.2 指针的类型</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#10-3-%E6%8C%87%E9%92%88%E5%92%8C%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">10.3 指针和变量</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#10-3-1-%E5%8F%98%E9%87%8F%E7%9A%84%E6%8C%87%E9%92%88\"><span class=\"toc-text\">10.3.1 变量的指针</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#10-3-2-%E6%8C%87%E5%90%91%E5%8F%98%E9%87%8F%E7%9A%84%E6%8C%87%E9%92%88%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">10.3.2 指向变量的指针变量</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#10-3-3-%E6%8C%87%E5%90%91%E6%8C%87%E9%92%88%E5%8F%98%E9%87%8F%E7%9A%84%E6%8C%87%E9%92%88\"><span class=\"toc-text\">10.3.3 指向指针变量的指针</span></a></li></ol></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#10-4-%E6%8C%87%E9%92%88%E4%B8%8E%E6%95%B0%E7%BB%84\"><span class=\"toc-text\">10.4 指针与数组</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#10-4-1-%E4%B8%80%E7%BB%B4%E6%95%B0%E7%BB%84%E4%B8%8E%E6%8C%87%E9%92%88\"><span class=\"toc-text\">10.4.1 一维数组与指针</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#10-4-2-%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%E4%B8%8E%E6%8C%87%E9%92%88\"><span class=\"toc-text\">10.4.2 二维数组与指针</span></a></li></ol></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#10-5-%E6%8C%87%E9%92%88%E5%92%8C%E5%AD%97%E7%AC%A6\"><span class=\"toc-text\">10.5 指针和字符</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#10-5-1-%E6%8C%87%E9%92%88%E5%8F%98%E9%87%8F%E8%AE%BF%E9%97%AE%E5%AD%97%E7%AC%A6%E6%95%B0%E7%BB%84\"><span class=\"toc-text\">10.5.1 指针变量访问字符数组</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#10-5-2-%E6%8C%87%E5%90%91%E5%AD%97%E7%AC%A6%E7%9A%84%E6%8C%87%E9%92%88%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">10.5.2 指向字符的指针变量</span></a></li></ol></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#10-6-%E6%8C%87%E9%92%88%E5%92%8C%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">10.6 指针和函数</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#10-6-1-%E6%8C%87%E9%92%88%E5%8F%98%E9%87%8F%E4%BD%9C%E4%B8%BA%E5%87%BD%E6%95%B0%E7%9A%84%E5%8F%82%E6%95%B0\"><span class=\"toc-text\">10.6.1 指针变量作为函数的参数</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#10-6-2-%E6%8C%87%E9%92%88%E5%8F%98%E9%87%8F%E5%AE%9E%E7%8E%B0%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%A4%8D%E5%88%B6\"><span class=\"toc-text\">10.6.2 指针变量实现字符串复制</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#10-6-3-%E6%8C%87%E9%92%88%E6%95%B0%E7%BB%84%E5%81%9A%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0\"><span class=\"toc-text\">10.6.3 指针数组做函数参数</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#10-6-4-%E6%8C%87%E9%92%88%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">10.6.4 指针函数</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#10-6-5-%E6%8C%87%E9%92%88%E5%87%BD%E6%95%B0%E5%8A%A8%E6%80%81%E8%8E%B7%E5%8F%96%E5%86%85%E5%AD%98%E7%A9%BA%E9%97%B4\"><span class=\"toc-text\">10.6.5 指针函数动态获取内存空间</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#10-6-6-%E6%8C%87%E5%90%91%E5%87%BD%E6%95%B0%E7%9A%84%E6%8C%87%E9%92%88%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">10.6.6 指向函数的指针变量</span></a></li></ol></li></ol></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#11-%E7%BB%93%E6%9E%84%E4%BD%93\"><span class=\"toc-text\">11. 结构体</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#11-1-%E7%BB%93%E6%9E%84%E4%BD%93%E4%B8%8E%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">11.1 结构体与变量</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#11-1-1-%E7%BB%93%E6%9E%84%E4%BD%93%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%AE%9A%E4%B9%89\"><span class=\"toc-text\">11.1.1 结构体类型的定义</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#11-1-2-%E7%BB%93%E6%9E%84%E4%BD%93%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">11.1.2 结构体变量</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#11-1-3-%E7%BB%93%E6%9E%84%E4%BD%93%E7%B1%BB%E5%9E%8B%E5%B5%8C%E5%A5%97\"><span class=\"toc-text\">11.1.3 结构体类型嵌套</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#11-1-4-typedef-%E5%AE%9A%E4%B9%89%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">11.1.4 typedef 定义类型</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#11-1-5-%E7%BB%93%E6%9E%84%E4%BD%93%E7%9A%84%E5%BC%95%E7%94%A8\"><span class=\"toc-text\">11.1.5 结构体的引用</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#11-1-6-%E7%BB%93%E6%9E%84%E4%BD%93%E5%AE%9A%E4%B9%89%E6%97%B6%E5%88%9D%E5%A7%8B%E5%8C%96\"><span class=\"toc-text\">11.1.6 结构体定义时初始化</span></a></li></ol></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#11-2-%E7%BB%93%E6%9E%84%E4%BD%93%E4%B8%8E%E6%95%B0%E7%BB%84\"><span class=\"toc-text\">11.2 结构体与数组</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#11-2-1-%E7%BB%93%E6%9E%84%E4%BD%93%E6%95%B0%E7%BB%84%E7%9A%84%E5%AE%9A%E4%B9%89\"><span class=\"toc-text\">11.2.1 结构体数组的定义</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#11-2-2-%E7%BB%93%E6%9E%84%E4%BD%93%E6%95%B0%E7%BB%84%E7%9A%84%E5%88%9D%E5%A7%8B%E5%8C%96\"><span class=\"toc-text\">11.2.2 结构体数组的初始化</span></a></li></ol></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#11-3-%E7%BB%93%E6%9E%84%E4%BD%93%E4%B8%8E%E6%8C%87%E9%92%88\"><span class=\"toc-text\">11.3 结构体与指针</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#11-3-1-%E6%8C%87%E5%90%91%E7%BB%93%E6%9E%84%E4%BD%93%E5%8F%98%E9%87%8F%E7%9A%84%E6%8C%87%E9%92%88%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">11.3.1 指向结构体变量的指针变量</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#11-3-2-%E6%8C%87%E5%90%91%E7%BB%93%E6%9E%84%E4%BD%93%E6%95%B0%E7%BB%84%E7%9A%84%E6%8C%87%E9%92%88%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">11.3.2 指向结构体数组的指针变量</span></a></li></ol></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#11-4-%E8%81%94%E5%90%88%E4%BD%93-%E5%85%B1%E7%94%A8%E4%BD%93\"><span class=\"toc-text\">11.4 联合体(共用体)</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#11-5-%E6%9E%9A%E4%B8%BE%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">11.5 枚举类型</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#11-5-1-%E6%9E%9A%E4%B8%BE%E7%B1%BB%E5%9E%8B%E7%9A%84%E4%BD%BF%E7%94%A8%E8%A7%84%E5%AE%9A\"><span class=\"toc-text\">11.5.1 枚举类型的使用规定</span></a></li></ol></li></ol></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#12-%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">12. 文件</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#12-1-%E6%96%87%E4%BB%B6%E6%A6%82%E5%BF%B5%E5%92%8C%E5%88%86%E7%B1%BB\"><span class=\"toc-text\">12.1 文件概念和分类</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#12-1-1-%E6%96%87%E4%BB%B6%E6%A6%82%E5%BF%B5\"><span class=\"toc-text\">12.1.1 文件概念</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#12-1-2-%E6%96%87%E4%BB%B6%E7%AE%80%E5%8D%95%E5%88%86%E7%B1%BB\"><span class=\"toc-text\">12.1.2 文件简单分类</span></a></li></ol></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#12-2-%E6%96%87%E4%BB%B6%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">12.2 文件基本操作</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#12-2-1-%E5%AE%9A%E4%B9%89%E6%96%87%E4%BB%B6%E6%8C%87%E9%92%88\"><span class=\"toc-text\">12.2.1 定义文件指针</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#12-2-2-%E6%96%87%E4%BB%B6%E7%9A%84%E6%89%93%E5%BC%80\"><span class=\"toc-text\">12.2.2 文件的打开</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#12-2-3-%E6%96%87%E4%BB%B6%E7%9A%84%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">12.2.3 文件的操作</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#12-2-4-%E6%96%87%E4%BB%B6%E7%9A%84%E5%85%B3%E9%97%AD\"><span class=\"toc-text\">12.2.4 文件的关闭</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#12-2-5-%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C%E7%A4%BA%E4%BE%8B\"><span class=\"toc-text\">12.2.5 文件操作示例</span></a></li></ol></li></ol></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#13-%E9%93%BE%E8%A1%A8\"><span class=\"toc-text\">13. 链表</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#13-1-%E9%93%BE%E8%A1%A8%E7%9A%84%E6%A6%82%E5%BF%B5\"><span class=\"toc-text\">13.1 链表的概念</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#13-1-1-%E6%A6%82%E5%BF%B5\"><span class=\"toc-text\">13.1.1 概念</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#13-1-2-%E6%95%B0%E7%BB%84%E7%9B%B8%E5%85%B3\"><span class=\"toc-text\">13.1.2 数组相关</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#13-1-3-%E9%93%BE%E8%A1%A8%E7%9B%B8%E5%85%B3\"><span class=\"toc-text\">13.1.3 链表相关</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#13-1-4-%E9%93%BE%E8%A1%A8%E5%88%86%E7%B1%BB\"><span class=\"toc-text\">13.1.4 链表分类</span></a></li></ol></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#13-2-%E9%9D%99%E6%80%81%E9%93%BE%E8%A1%A8\"><span class=\"toc-text\">13.2 静态链表</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#13-2-1-%E9%9D%99%E6%80%81%E9%93%BE%E8%A1%A8%E7%9A%84%E7%BB%93%E6%9E%84\"><span class=\"toc-text\">13.2.1 静态链表的结构</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#13-2-2-%E9%81%8D%E5%8E%86%E6%89%93%E5%8D%B0%E9%9D%99%E6%80%81%E9%93%BE%E8%A1%A8\"><span class=\"toc-text\">13.2.2 遍历打印静态链表</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#13-3-%E5%8A%A8%E6%80%81%E9%93%BE%E8%A1%A8-%E6%A8%A1%E5%9D%97%E5%8C%96\"><span class=\"toc-text\">13.3 动态链表(模块化)</span></a></li></ol></li></ol></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BE%8B%E5%AD%90\"><span class=\"toc-text\">例子</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-%E6%B1%82%E7%99%BE%E5%8D%81%E4%B8%AA%E4%BD%8D%E7%9A%84%E5%92%8C\"><span class=\"toc-text\">1.  求百十个位的和</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-%E6%B1%82200-300%E4%B9%8B%E9%97%B4%E7%B4%A0%E6%95%B0%E5%92%8C\"><span class=\"toc-text\">2. 求200-300之间素数和</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91\"><span class=\"toc-text\">3. 斐波那契</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-%E9%80%92%E5%A2%9E%E7%AE%97%E6%B3%95\"><span class=\"toc-text\">4. 递增算法</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#5-100-999%E4%B9%8B%E9%97%B4%E6%B0%B4%E4%BB%99%E8%8A%B1%E6%95%B0\"><span class=\"toc-text\">5. 100-999之间水仙花数</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#6-%E6%B1%82-1-2-3-%E2%80%A6-10\"><span class=\"toc-text\">6. 求 1!+2!+3!+…+10!</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#7-%E6%B1%82%E5%A4%9A%E9%A1%B9%E5%BC%8F%E7%9A%84%E5%80%BC\"><span class=\"toc-text\">7. 求多项式的值</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#8-%E5%B0%86%E6%95%B4%E5%BD%A2%E4%B8%80%E7%BB%B4%E6%95%B0%E7%BB%84%E7%9A%84%E5%86%85%E5%AE%B9%E9%A2%A0%E5%80%92%E9%A1%BA%E5%BA%8F\"><span class=\"toc-text\">8. 将整形一维数组的内容颠倒顺序</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#9-%E5%B0%863%E8%A1%8C4%E5%88%97%E7%9A%84%E6%95%B0%E7%BB%84%E5%80%BC%E8%BD%AC%E7%BD%AE%E5%88%B04%E8%A1%8C3%E5%88%97\"><span class=\"toc-text\">9. 将3行4列的数组值转置到4行3列</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#10-%E5%B0%86%E5%AD%97%E7%AC%A6%E4%B8%B21%E5%86%85%E5%AE%B9%E8%B5%8B%E5%80%BC%E5%88%B0%E5%AD%97%E7%AC%A6%E4%B8%B22%E4%B8%AD\"><span class=\"toc-text\">10. 将字符串1内容赋值到字符串2中</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#11-%E6%89%93%E5%8D%B0%E6%9D%A8%E8%BE%89%E4%B8%89%E8%A7%92%E5%89%8D10%E8%A1%8C\"><span class=\"toc-text\">11. 打印杨辉三角前10行</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#12-%E5%88%A4%E6%96%AD%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%88%96%E6%95%B0%E5%AD%97%E6%98%AF%E5%90%A6%E4%B8%BA%E5%9B%9E%E6%96%87\"><span class=\"toc-text\">12. 判断字符串或数字是否为回文</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#13-%E7%94%A8%E9%80%92%E5%BD%92%E7%AE%97%E6%B3%95%E8%AE%A1%E7%AE%97n%EF%BC%81\"><span class=\"toc-text\">13. 用递归算法计算n！</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#14-%E7%94%A8%E9%80%92%E5%BD%92%E8%AE%A1%E7%AE%971-2-%E2%80%A6-n\"><span class=\"toc-text\">14. 用递归计算1+2+…+n</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#15-%E7%94%A8%E5%BE%AA%E7%8E%AF%E5%92%8C%E9%80%92%E5%BD%92%E8%AE%A1%E7%AE%97%E4%BB%BB%E6%84%8F%E6%95%B4%E6%95%B0%E4%B8%AA%E4%BD%8D%E6%95%B0%E4%B9%8B%E5%92%8C\"><span class=\"toc-text\">15. 用循环和递归计算任意整数个位数之和</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#16-%E9%80%9A%E8%BF%87%E5%87%BD%E6%95%B0%E5%B0%86%E6%95%B0%E7%BB%84%E5%86%85%E5%85%83%E7%B4%A0%E5%8A%A010\"><span class=\"toc-text\">16. 通过函数将数组内元素加10</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#17-%E6%8C%87%E9%92%88%E5%8F%98%E9%87%8F%E4%B8%BA%E5%BD%A2%E5%8F%82%EF%BC%8C%E6%B1%82%E6%95%B0%E7%BB%84%E5%85%83%E7%B4%A0%E5%92%8C%E5%B9%B3%E5%9D%87%E5%80%BC\"><span class=\"toc-text\">17. 指针变量为形参，求数组元素和平均值</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#18-%E6%95%B0%E7%BB%84%E5%85%83%E7%B4%A0%E6%8C%87%E9%92%88%E8%AE%BF%E9%97%AE%E6%95%B0%E7%BB%84\"><span class=\"toc-text\">18. 数组元素指针访问数组</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#19-%E4%B8%80%E7%BB%B4%E6%95%B0%E7%BB%84%E8%AE%BF%E9%97%AE%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84\"><span class=\"toc-text\">19. 一维数组访问二维数组</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#20-%E6%8C%87%E9%92%88%E6%95%B0%E7%BB%84%E8%AE%BF%E9%97%AE%E5%8F%A6%E4%B8%80%E4%B8%AA%E4%B8%80%E7%BB%B4%E6%95%B0%E7%BB%84\"><span class=\"toc-text\">20. 指针数组访问另一个一维数组</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#21-%E6%8C%87%E9%92%88%E6%95%B0%E7%BB%84%E7%9A%84%E5%BA%94%E7%94%A8\"><span class=\"toc-text\">21. 指针数组的应用</span></a></li></ol></li></ol></li></ol></li></ol>","author":{"name":"FangH","slug":"blog-author","avatar":"/img/fh.png","link":"/","description":"我曾惊鸿一瞥未来","socials":{"github":"https://github.com/FHangH","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/zi-heng-18-99-47","csdn":"https://blog.csdn.net/weixin_44519692?spm=1000.2115.3001.5343","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"Git个人使用","uid":"9bb1210f38db3e1f819e50bcd1059252","slug":"6.Git个人使用","date":"2022-10-06T07:28:25.946Z","updated":"2023-01-10T01:10:19.446Z","comments":true,"path":"api/articles/6.Git个人使用.json","keywords":null,"cover":"https://cdn.jsdelivr.net/gh/FHangH/FHangBlogCDN_03@master/Aurora_ (16).webp","text":"Git个人使用[toc] 1234// 2021-02-19：苦于还是不记得git bash的使用，每次使用都要到网上找一会，太麻烦了，决定写成博客，记录一下个...","permalink":"/post/6.Git个人使用","photos":[],"count_time":{"symbolsCount":"15k","symbolsTime":"14 mins."},"categories":[{"name":"编程","slug":"编程","count":16,"path":"api/categories/编程.json"}],"tags":[{"name":"Git","slug":"Git","count":1,"path":"api/tags/Git.json"}],"author":{"name":"FangH","slug":"blog-author","avatar":"/img/fh.png","link":"/","description":"我曾惊鸿一瞥未来","socials":{"github":"https://github.com/FHangH","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/zi-heng-18-99-47","csdn":"https://blog.csdn.net/weixin_44519692?spm=1000.2115.3001.5343","juejin":"","customs":{}}}},"next_post":{"title":"不同虚拟机的配置方式","uid":"e341529351da1e239445a65d65dc3c4f","slug":"3.不同虚拟机的配置方式_01","date":"2022-10-06T07:28:25.941Z","updated":"2023-01-10T01:10:19.446Z","comments":true,"path":"api/articles/3.不同虚拟机的配置方式_01.json","keywords":null,"cover":"https://cdn.jsdelivr.net/gh/FHangH/FHangBlogCDN_03@master/Aurora_ (11).webp","text":"[toc] 不同虚拟机的配置方式虚拟机软件的选择：VirtualBox6.0及以上；VmwareWorkstation VirtualBox的配置方法：1. c...","permalink":"/post/3.不同虚拟机的配置方式_01","photos":[],"count_time":{"symbolsCount":"4.1k","symbolsTime":"4 mins."},"categories":[{"name":"云计算","slug":"云计算","count":4,"path":"api/categories/云计算.json"}],"tags":[{"name":"IaaS","slug":"IaaS","count":4,"path":"api/tags/IaaS.json"}],"author":{"name":"FangH","slug":"blog-author","avatar":"/img/fh.png","link":"/","description":"我曾惊鸿一瞥未来","socials":{"github":"https://github.com/FHangH","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/zi-heng-18-99-47","csdn":"https://blog.csdn.net/weixin_44519692?spm=1000.2115.3001.5343","juejin":"","customs":{}}}}}