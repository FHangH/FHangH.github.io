{"title":"C++_STL函数对象","uid":"29cfc82accb2b6a310cfbec39b1d8603","slug":"1_C++_STL函数对象_06","date":"2022-10-06T07:28:25.907Z","updated":"2023-01-10T01:10:19.433Z","comments":true,"path":"api/articles/1_C++_STL函数对象_06.json","keywords":null,"cover":"https://cdn.jsdelivr.net/gh/FHangH/FHangBlogCDN_03@master/Aurora_ (6).webp","content":"<h1 id=\"C-STL函数对象\"><a href=\"#C-STL函数对象\" class=\"headerlink\" title=\"C++_STL函数对象\"></a>C++_STL函数对象</h1><p>[toc]</p>\n<h3 id=\"1-函数对象\"><a href=\"#1-函数对象\" class=\"headerlink\" title=\"1. 函数对象\"></a>1. 函数对象</h3><h4 id=\"1-1-函数对象概念\"><a href=\"#1-1-函数对象概念\" class=\"headerlink\" title=\"1.1 函数对象概念\"></a>1.1 函数对象概念</h4><ul>\n<li>概念：<ul>\n<li>重载<code>函数调用操作符</code>的类，其对象常称为<code>函数对象</code></li>\n<li><code>函数对象</code>使用重载的<code>()</code>时，行为类似函数调用，也叫<code>仿函数</code></li>\n</ul>\n</li>\n<li>本质：<ul>\n<li>函数对象(仿函数)是一个类，不是一个函数</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"1-2-函数对象使用\"><a href=\"#1-2-函数对象使用\" class=\"headerlink\" title=\"1.2 函数对象使用\"></a>1.2 函数对象使用</h4><ul>\n<li><p>特点：</p>\n<ul>\n<li>函数对象在使用时，可以像普通函数那样调用，可以有参数，可以有返回值</li>\n<li>函数对象超出普通函数的概念，函数对象可以有自己的状态</li>\n<li>函数对象可以作为参数传递</li>\n</ul>\n</li>\n<li><p>代码示例：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">// Created by FHang on 2021/11/14 15:17</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 函数对象在使用时，可以像普通函数那样调用，可以有参数，可以有返回值</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Fh_Add</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">operator</span><span class=\"params\">()</span><span class=\"params\">(<span class=\"type\">int</span> value1, <span class=\"type\">int</span> value2)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> value1 + value2;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 函数对象超出普通函数的概念，函数对象可以有自己的状态</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Fh_Print</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"type\">int</span> transferCount;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">Fh_Print</span>()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>-&gt;transferCount = <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">operator</span><span class=\"params\">()</span><span class=\"params\">(<span class=\"type\">const</span> string &amp;printStr)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        cout &lt;&lt; printStr &lt;&lt; endl;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>-&gt;transferCount++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">demo1</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    Fh_Add fhAdd;</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Fh_Add&gt;&gt; &quot;</span> &lt;&lt; <span class=\"built_in\">fhAdd</span>(<span class=\"number\">1</span>, <span class=\"number\">2</span>) &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">    cout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">demo2</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    Fh_Print fhPrint;</span><br><span class=\"line\">    <span class=\"built_in\">fhPrint</span>(<span class=\"string\">&quot;Hello World&quot;</span>);</span><br><span class=\"line\">    <span class=\"built_in\">fhPrint</span>(<span class=\"string\">&quot;Hello World&quot;</span>);</span><br><span class=\"line\">    <span class=\"built_in\">fhPrint</span>(<span class=\"string\">&quot;Hello World&quot;</span>);</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Fh_Print Transfer Count&gt;&gt; &quot;</span> &lt;&lt; fhPrint.transferCount &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">    cout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 函数对象可以作为参数传递</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">doPrint</span><span class=\"params\">(Fh_Print &amp;fhPrint, <span class=\"type\">const</span> string &amp;printStr)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">fhPrint</span>(printStr);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">demo3</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    Fh_Print fhPrint;</span><br><span class=\"line\">    <span class=\"built_in\">doPrint</span>(fhPrint, <span class=\"string\">&quot;Hello World&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    cout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">demo1</span>();</span><br><span class=\"line\">    <span class=\"built_in\">demo2</span>();</span><br><span class=\"line\">    <span class=\"built_in\">demo3</span>();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"2-谓词\"><a href=\"#2-谓词\" class=\"headerlink\" title=\"2. 谓词\"></a>2. 谓词</h3><h4 id=\"2-1-谓词基本概念\"><a href=\"#2-1-谓词基本概念\" class=\"headerlink\" title=\"2.1 谓词基本概念\"></a>2.1 谓词基本概念</h4><ul>\n<li>概念：<ul>\n<li>返回<code>bool</code>类型的仿函数称为<code>谓词</code></li>\n<li>如果<code>operator()</code>接受一个参数，为<code>一元谓词</code></li>\n<li>如果<code>operator()</code>接受二个参数，为<code>二元谓词</code></li>\n</ul>\n</li>\n</ul>\n<h4 id=\"2-2-一元谓词\"><a href=\"#2-2-一元谓词\" class=\"headerlink\" title=\"2.2 一元谓词\"></a>2.2 一元谓词</h4><ul>\n<li><p>代码示例：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">// Created by FHang on 2021/11/14 16:09</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">DownSort</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">operator</span><span class=\"params\">()</span><span class=\"params\">(<span class=\"type\">const</span> <span class=\"type\">int</span> &amp;value1, <span class=\"type\">const</span> <span class=\"type\">int</span> &amp;value2)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> value1 &gt; value2;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">printVector</span><span class=\"params\">(<span class=\"type\">const</span> vector&lt;<span class=\"type\">int</span>&gt; &amp;other)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> it : other)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        cout &lt;&lt; it &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    cout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">demo</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    vector&lt;<span class=\"type\">int</span>&gt; v;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt; <span class=\"number\">6</span>; ++i)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        v.<span class=\"built_in\">push_back</span>(i);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">printVector</span>(v);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">sort</span>(v.<span class=\"built_in\">begin</span>(), v.<span class=\"built_in\">end</span>(), <span class=\"built_in\">DownSort</span>());</span><br><span class=\"line\">    <span class=\"built_in\">printVector</span>(v);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">demo</span>();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"3-内建函数对象\"><a href=\"#3-内建函数对象\" class=\"headerlink\" title=\"3. 内建函数对象\"></a>3. 内建函数对象</h3><h4 id=\"3-1-内建函数对象意义\"><a href=\"#3-1-内建函数对象意义\" class=\"headerlink\" title=\"3.1 内建函数对象意义\"></a>3.1 内建函数对象意义</h4><ul>\n<li>概念：<ul>\n<li>STL内建一些函数对象</li>\n</ul>\n</li>\n<li>分类：<ul>\n<li>算术仿函数</li>\n<li>关系仿函数</li>\n<li>逻辑仿函数</li>\n</ul>\n</li>\n<li>用法：<ul>\n<li>这些仿函数所产生的对象，用法和一般函数完全相同</li>\n<li>使用内建函数对象，需要引入头文件<code>#include&lt;functional&gt;</code></li>\n</ul>\n</li>\n</ul>\n<h4 id=\"3-2-算术仿函数\"><a href=\"#3-2-算术仿函数\" class=\"headerlink\" title=\"3.2 算术仿函数\"></a>3.2 算术仿函数</h4><ul>\n<li><p>功能描述：</p>\n<ul>\n<li>实现四则运算</li>\n<li>其中<code>negate</code>是<code>一元运算</code>，其它的都是<code>二元运算</code></li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>仿函数原型</th>\n<th></th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>template&lt;class T&gt; T plus&lt;T&gt;</code></td>\n<td>加法仿函数</td>\n</tr>\n<tr>\n<td><code>template&lt;class T&gt; T minus&lt;T&gt;</code></td>\n<td>减法仿函数</td>\n</tr>\n<tr>\n<td><code>template&lt;class T&gt; T multiplies&lt;T&gt;</code></td>\n<td>乘法仿函数</td>\n</tr>\n<tr>\n<td><code>template&lt;class T&gt; T divides&lt;T&gt;</code></td>\n<td>除法仿函数</td>\n</tr>\n<tr>\n<td><code>template&lt;class T&gt; T modulus&lt;T&gt;</code></td>\n<td>取模仿函数</td>\n</tr>\n<tr>\n<td><code>template&lt;class T&gt; T negate&lt;T&gt;</code></td>\n<td>取反仿函数</td>\n</tr>\n</tbody></table>\n</li>\n<li><p>代码示例：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">// Created by FHang on 2021/11/14 16:45</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;functional&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">demo1</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    negate&lt;&gt; negate1;</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"built_in\">negate1</span>(<span class=\"number\">10</span>) &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">demo2</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    plus&lt;&gt; plus1;</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"built_in\">plus1</span>(<span class=\"number\">10</span>, <span class=\"number\">20</span>) &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">demo1</span>();</span><br><span class=\"line\">    <span class=\"built_in\">demo2</span>();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"3-3-关系仿函数\"><a href=\"#3-3-关系仿函数\" class=\"headerlink\" title=\"3.3 关系仿函数\"></a>3.3 关系仿函数</h4><ul>\n<li><p>功能描述：实现关系对比</p>\n<table>\n<thead>\n<tr>\n<th>仿函数原型</th>\n<th></th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>template&lt;class T&gt; bool equal_to&lt;T&gt;</code></td>\n<td>等于</td>\n</tr>\n<tr>\n<td><code>template&lt;class T&gt; bool not_equal_to&lt;T&gt;</code></td>\n<td>不等于</td>\n</tr>\n<tr>\n<td><code>template&lt;class T&gt; bool greater&lt;T&gt;</code></td>\n<td>大于</td>\n</tr>\n<tr>\n<td><code>template&lt;class T&gt; bool greater_equal&lt;T&gt;</code></td>\n<td>大于等于</td>\n</tr>\n<tr>\n<td><code>template&lt;class T&gt; bool less&lt;T&gt;</code></td>\n<td>小于</td>\n</tr>\n<tr>\n<td><code>template&lt;class T&gt; bool less_equal&lt;T&gt;</code></td>\n<td>小于等于</td>\n</tr>\n</tbody></table>\n</li>\n<li><p>代码示例：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">// Created by FHang on 2021/11/14 16:58</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;functional&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">printVector</span><span class=\"params\">(<span class=\"type\">const</span> vector&lt;<span class=\"type\">int</span>&gt; &amp;v)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> it : v)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        cout &lt;&lt; it &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    cout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">demo</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    vector&lt;<span class=\"type\">int</span>&gt; v;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt; <span class=\"number\">6</span>; ++i)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        v.<span class=\"built_in\">push_back</span>(i);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">printVector</span>(v);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">sort</span>(v.<span class=\"built_in\">begin</span>(),  v.<span class=\"built_in\">end</span>(), greater&lt;&gt;());</span><br><span class=\"line\">    <span class=\"built_in\">printVector</span>(v);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">demo</span>();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"3-4-逻辑仿函数\"><a href=\"#3-4-逻辑仿函数\" class=\"headerlink\" title=\"3.4 逻辑仿函数\"></a>3.4 逻辑仿函数</h4><ul>\n<li><p>功能描述：实现逻辑运算</p>\n<table>\n<thead>\n<tr>\n<th>函数原型</th>\n<th></th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>template&lt;class T&gt; bool logical_and&lt;T&gt;</code></td>\n<td>逻辑与</td>\n</tr>\n<tr>\n<td><code>template&lt;class T&gt; bool logical_or&lt;T&gt;</code></td>\n<td>逻辑或</td>\n</tr>\n<tr>\n<td><code>template&lt;class T&gt; bool logical_not&lt;T&gt;</code></td>\n<td>逻辑非</td>\n</tr>\n</tbody></table>\n</li>\n<li><p>代码示例：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">// Created by FHang on 2021/11/14 17:43</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;functional&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;ctime&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">printVector</span><span class=\"params\">(<span class=\"type\">const</span> vector&lt;<span class=\"type\">bool</span>&gt; &amp;v)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">bool</span> it : v)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        cout &lt;&lt; it &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    cout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">demo</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    vector&lt;<span class=\"type\">bool</span>&gt; v1;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt; <span class=\"number\">5</span>; ++i)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        v1.<span class=\"built_in\">push_back</span>(<span class=\"built_in\">rand</span>()%<span class=\"number\">2</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">printVector</span>(v1);</span><br><span class=\"line\"></span><br><span class=\"line\">    vector&lt;<span class=\"type\">bool</span>&gt; v2;</span><br><span class=\"line\">    v2.<span class=\"built_in\">resize</span>(v1.<span class=\"built_in\">size</span>());</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">transform</span>(v1.<span class=\"built_in\">begin</span>(), v1.<span class=\"built_in\">end</span>(), v2.<span class=\"built_in\">begin</span>(), <span class=\"built_in\">logical_not</span>&lt;<span class=\"type\">bool</span>&gt;());</span><br><span class=\"line\">    <span class=\"built_in\">printVector</span>(v2);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">srand</span>((<span class=\"type\">unsigned</span> <span class=\"type\">int</span>)<span class=\"built_in\">time</span>(<span class=\"literal\">NULL</span>));</span><br><span class=\"line\">    <span class=\"built_in\">demo</span>();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n","text":"C++_STL函数对象[toc] 1. 函数对象1.1 函数对象概念 概念： 重载函数调用操作符的类，其对象常称为函数对象 函数对象使用重载的()时，行为类似函...","permalink":"/post/1_C++_STL函数对象_06","photos":[],"count_time":{"symbolsCount":"5.5k","symbolsTime":"5 mins."},"categories":[{"name":"编程","slug":"编程","count":16,"path":"api/categories/编程.json"}],"tags":[{"name":"C/C++","slug":"C-C","count":10,"path":"api/tags/C-C.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#C-STL%E5%87%BD%E6%95%B0%E5%AF%B9%E8%B1%A1\"><span class=\"toc-text\">C++_STL函数对象</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E5%87%BD%E6%95%B0%E5%AF%B9%E8%B1%A1\"><span class=\"toc-text\">1. 函数对象</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-1-%E5%87%BD%E6%95%B0%E5%AF%B9%E8%B1%A1%E6%A6%82%E5%BF%B5\"><span class=\"toc-text\">1.1 函数对象概念</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-2-%E5%87%BD%E6%95%B0%E5%AF%B9%E8%B1%A1%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">1.2 函数对象使用</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E8%B0%93%E8%AF%8D\"><span class=\"toc-text\">2. 谓词</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-1-%E8%B0%93%E8%AF%8D%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5\"><span class=\"toc-text\">2.1 谓词基本概念</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-2-%E4%B8%80%E5%85%83%E8%B0%93%E8%AF%8D\"><span class=\"toc-text\">2.2 一元谓词</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E5%86%85%E5%BB%BA%E5%87%BD%E6%95%B0%E5%AF%B9%E8%B1%A1\"><span class=\"toc-text\">3. 内建函数对象</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-1-%E5%86%85%E5%BB%BA%E5%87%BD%E6%95%B0%E5%AF%B9%E8%B1%A1%E6%84%8F%E4%B9%89\"><span class=\"toc-text\">3.1 内建函数对象意义</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-2-%E7%AE%97%E6%9C%AF%E4%BB%BF%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">3.2 算术仿函数</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-3-%E5%85%B3%E7%B3%BB%E4%BB%BF%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">3.3 关系仿函数</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-4-%E9%80%BB%E8%BE%91%E4%BB%BF%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">3.4 逻辑仿函数</span></a></li></ol></li></ol></li></ol></li></ol>","author":{"name":"FangH","slug":"blog-author","avatar":"/img/fh.png","link":"/","description":"我曾惊鸿一瞥未来","socials":{"github":"https://github.com/FHangH","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/zi-heng-18-99-47","csdn":"https://blog.csdn.net/weixin_44519692?spm=1000.2115.3001.5343","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"C++_STL算法","uid":"1314ed16965aff00f28615c8023e8a57","slug":"1_C++_STL算法_07","date":"2022-10-06T07:28:25.910Z","updated":"2023-01-10T01:10:19.450Z","comments":true,"path":"api/articles/1_C++_STL算法_07.json","keywords":null,"cover":"https://cdn.jsdelivr.net/gh/FHangH/FHangBlogCDN_03@master/Aurora_ (7).webp","text":"C++_STL算法[toc] 概述： 算法主要是头文件&lt;algorithm&gt; &lt;functional&gt; &lt;numeric&gt; ...","permalink":"/post/1_C++_STL算法_07","photos":[],"count_time":{"symbolsCount":"25k","symbolsTime":"23 mins."},"categories":[{"name":"编程","slug":"编程","count":16,"path":"api/categories/编程.json"}],"tags":[{"name":"C/C++","slug":"C-C","count":10,"path":"api/tags/C-C.json"}],"author":{"name":"FangH","slug":"blog-author","avatar":"/img/fh.png","link":"/","description":"我曾惊鸿一瞥未来","socials":{"github":"https://github.com/FHangH","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/zi-heng-18-99-47","csdn":"https://blog.csdn.net/weixin_44519692?spm=1000.2115.3001.5343","juejin":"","customs":{}}}},"next_post":{}}