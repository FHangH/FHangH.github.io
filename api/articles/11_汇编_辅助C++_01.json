{"title":"汇编_辅助C++","uid":"a6ccd9fe4a40d3d3e4e5ed99b6f169f1","slug":"11_汇编_辅助C++_01","date":"2022-10-06T07:28:25.978Z","updated":"2021-12-05T10:27:40.410Z","comments":true,"path":"api/articles/11_汇编_辅助C++_01.json","keywords":null,"cover":"https://cdn.jsdelivr.net/gh/FHangH/FHangBlogCDN/Post_Img_mini/postImg_23.jpg","content":"<h1 id=\"汇编-辅助C\"><a href=\"#汇编-辅助C\" class=\"headerlink\" title=\"汇编_辅助C++\"></a>汇编_辅助C++</h1><ul>\n<li>汇编语言种类：x64汇编（64bit）</li>\n<li>书写格式：intel</li>\n<li>汇编不区分大小写</li>\n</ul>\n<h3 id=\"1-汇编格式了解\"><a href=\"#1-汇编格式了解\" class=\"headerlink\" title=\"1. 汇编格式了解\"></a>1. 汇编格式了解</h3><table>\n<thead>\n<tr>\n<th>项目</th>\n<th>intel</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>寄存器命名</td>\n<td><code>eax</code></td>\n<td>intel不带%</td>\n</tr>\n<tr>\n<td>操作数顺序</td>\n<td><code>mov edx, eax</code></td>\n<td>将eax的值赋值给edx</td>\n</tr>\n<tr>\n<td>常数\\立即数</td>\n<td><code>mov eax, 3</code><br /><code>mov eax, 0x10</code></td>\n<td>将3赋值给eax<br />将0x10赋值给eax</td>\n</tr>\n<tr>\n<td>jmp指令</td>\n<td><code>jmp edx</code><br /><code>jmp 0x4001002</code><br /><code>jmp [eax]</code></td>\n<td>在AT&amp;T的jmp地址前面加*</td>\n</tr>\n<tr>\n<td>操作数长度</td>\n<td><code>mov edx, eax</code><br /><code>mov al, 0x10</code><br /><code>lea ax, [dx + 0x10]</code></td>\n<td></td>\n</tr>\n</tbody></table>\n<h3 id=\"2-x64汇编-寄存器\"><a href=\"#2-x64汇编-寄存器\" class=\"headerlink\" title=\"2. x64汇编-寄存器\"></a>2. x64汇编-寄存器</h3><ul>\n<li>通用寄存器：(8字节, 1字节&#x3D;8位二进制)<ul>\n<li><code>16bit:</code> <code>AX</code>&#x2F;<code>BX</code>&#x2F;<code>CX</code>&#x2F;<code>DX</code></li>\n<li><code>32bit:</code> <code>EAX</code>&#x2F;<code>EBX</code>&#x2F;<code>ECX</code>&#x2F;<code>EDX</code></li>\n<li><code>64bit:</code> <code>RAX</code>&#x2F;<code>RBX</code>&#x2F;<code>RCX</code>&#x2F;<code>RDX</code></li>\n<li><code>64bit:</code> <code>RBP</code>&#x2F;<code>RSI</code>&#x2F;<code>RDI</code>&#x2F;<code>RSP</code>&#x2F;<code>R8</code>&#x2F;<code>R9</code>&#x2F;<code>R10</code>&#x2F;<code>R11</code>&#x2F;<code>R12</code>&#x2F;<code>R13</code>&#x2F;<code>R14</code>&#x2F;<code>R15</code></li>\n<li><code>64bit</code> 可以向下兼容 <code>32bit</code>，<code>64bit</code> 寄存就分一半就是 <code>32bit</code></li>\n</ul>\n</li>\n<li>兼容方式：<ul>\n<li><code>RAX</code>：<ul>\n<li><code>EAX</code>(低32bit -&gt; 4byte)</li>\n</ul>\n</li>\n<li><code>EAX</code>：<ul>\n<li><code>AX</code>(低16bit -&gt; 2byte)</li>\n</ul>\n</li>\n<li><code>AX</code>：<ul>\n<li><code>AH</code>(高8bit -&gt; 1byte)</li>\n<li><code>AL</code>(低8bit)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>一般规律：<ol>\n<li><code>R</code>，64bit，8字节</li>\n<li><code>E</code>，32bit，4字节</li>\n<li><code>A</code>，16bit，2字节</li>\n<li><code>AH</code>&#x2F;<code>AL</code>，8bit， 1字节</li>\n</ol>\n</li>\n</ul>\n<h3 id=\"3-内联汇编\"><a href=\"#3-内联汇编\" class=\"headerlink\" title=\"3. 内联汇编\"></a>3. 内联汇编</h3><ul>\n<li><p>在 cpp 文件中直接写 汇编代码，仅支持 x86</p>\n</li>\n<li><p>格式：</p>\n<pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">__asm\n&#123;\n    &#x2F;&#x2F; 汇编代码\n&#125;</code></pre>\n\n\n</li>\n<li><p>代码示例1：</p>\n<pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">int main()\n&#123;\n    int a &#x3D; 10;\n    __asm\n    &#123;\n        mov eax, a\n    &#125;\n    \n    return 0;\n&#125;</code></pre>\n\n<pre class=\"line-numbers language-basic\" data-language=\"basic\"><code class=\"language-basic\">&#x2F;&#x2F; mov eax, a &#x3D;&gt; \n&#x2F;&#x2F; mov eax, dword ptr[a]\n&#x2F;&#x2F; 汇编中不存在 a， 只有 a 所在的地址\n\n__asm\n&#123;\n    mov eax, 10\n&#125;\n&#x2F;&#x2F; mov eax, 10 &#x3D;&gt;\n&#x2F;&#x2F; mov eax, 0Ah</code></pre>\n\n\n</li>\n<li><p>代码示例2：<code>10</code>是<code>10进制</code>，<code>16进制</code>是<code>0AH</code>，占用<code>1个字节</code>，需<code>放入AX</code>，<code>低位AL</code>中；<code>11223344H</code>是<code>8位</code>16进制，占用<code>4字节</code>，需<code>放入EAX</code>；</p>\n<pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">int main()\n&#123;\n    __asm\n    &#123;\n        mov ax, 10\n\tmov eax, 11223344H\n    &#125;\n    return 0;\n&#125;</code></pre>\n\n<pre class=\"line-numbers language-basic\" data-language=\"basic\"><code class=\"language-basic\">&#x2F;&#x2F; mov ax, 10 &#x3D;&gt;\n&#x2F;&#x2F; mov eax, 11223344H\nmov eax, 0AH\nmov eax, 11223344H\n\n&#x2F;&#x2F; mov ax, 0AH\n此时：ax 低位 al这 &#x3D;&gt; 000A\n此时：eax &#x3D;&gt; CCCC000A\n\n&#x2F;&#x2F; mov eax, 11223344H\n此时：eax &#x3D;&gt; 11223344\n此时：ax &#x3D;&gt; 00003344\n此时：al &#x3D;&gt; 3344</code></pre></li>\n</ul>\n<h3 id=\"4-汇编语法\"><a href=\"#4-汇编语法\" class=\"headerlink\" title=\"4. 汇编语法\"></a>4. 汇编语法</h3><table>\n<thead>\n<tr>\n<th>语法</th>\n<th>解释</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>mov dest, src</code></td>\n<td><code>src</code>来源，<code>dest</code>目标，<code>mov</code>赋值</td>\n</tr>\n<tr>\n<td><code>[指针值]</code></td>\n<td>内存地址</td>\n</tr>\n<tr>\n<td><code>word</code>\\<code>dword</code>\\<code>qword</code></td>\n<td><code>word</code>2字节，<code>dword</code>4字节，<code>qword</code>8字节</td>\n</tr>\n<tr>\n<td><code>dword ptr</code></td>\n<td>指定内存大小</td>\n</tr>\n<tr>\n<td><code>call 函数地址</code></td>\n<td>调用函数</td>\n</tr>\n<tr>\n<td><code>lea dest, [地址值]</code></td>\n<td>类似与指针，将地址赋值给<code>dest</code></td>\n</tr>\n<tr>\n<td><code>ret</code></td>\n<td>函数返回</td>\n</tr>\n<tr>\n<td><code>xor op1, op2</code></td>\n<td>将 <code>op1</code> 和 <code>op2</code> 异或的结果给 <code>op1</code>，类似 <code>op1 = op1 ^ op2</code></td>\n</tr>\n<tr>\n<td><code>add op1, op2</code></td>\n<td><code>op1 = op1 + op2</code></td>\n</tr>\n<tr>\n<td><code>sub op1, op2</code></td>\n<td><code>op1 = op1 - op2</code></td>\n</tr>\n<tr>\n<td><code>inc op</code></td>\n<td>自增<code>op = op + 1</code></td>\n</tr>\n<tr>\n<td><code>dec op</code></td>\n<td>自减<code>op = op -1</code></td>\n</tr>\n<tr>\n<td><code>jmp 内存地址</code></td>\n<td>跳转到指定地址，执行机器码<br />一般配合<code>test</code>，<code>cmp</code>进行使用，<code>J</code>开头基本都是<code>jmp</code>的特殊形态<br /><code>jmp</code>是无条件跳转；<br /><code>jne : jump not equal</code></td>\n</tr>\n</tbody></table>\n<ul>\n<li><p>代码示例：</p>\n<pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">int a &#x3D; 3;\ncout &lt;&lt; &amp;a &lt;&lt; endl;\n\n&#x2F;&#x2F; &amp;a &#x3D; 010FFE4Ch\n\n# mov dword ptr [ebp-0Ch], 3\n&#x2F;&#x2F; ebp-0Ch 是 变量a 的地址\n&#x2F;&#x2F; ebp ：010FFE58h\n&#x2F;&#x2F; &amp;a : 010FFE4Ch &#x3D;&#x3D; ebp-0Ch</code></pre></li>\n</ul>\n","feature":true,"text":"汇编_辅助C++ 汇编语言种类：x64汇编（64bit） 书写格式：intel 汇编不区分大小写 1. 汇编格式了解 项目 intel 说明 寄存器命名 eax intel不带% 操作数顺序 mov edx, eax 将eax的值赋值给edx 常数\\立即数 mov eax, 3m...","link":"","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[{"name":"编程","slug":"编程","count":16,"path":"api/categories/编程.json"}],"tags":[{"name":"Assemly","slug":"Assemly","count":2,"path":"api/tags/Assemly.json"},{"name":"C/C++","slug":"C-C","count":10,"path":"api/tags/C-C.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%B1%87%E7%BC%96-%E8%BE%85%E5%8A%A9C\"><span class=\"toc-text\">汇编_辅助C++</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E6%B1%87%E7%BC%96%E6%A0%BC%E5%BC%8F%E4%BA%86%E8%A7%A3\"><span class=\"toc-text\">1. 汇编格式了解</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-x64%E6%B1%87%E7%BC%96-%E5%AF%84%E5%AD%98%E5%99%A8\"><span class=\"toc-text\">2. x64汇编-寄存器</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E5%86%85%E8%81%94%E6%B1%87%E7%BC%96\"><span class=\"toc-text\">3. 内联汇编</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-%E6%B1%87%E7%BC%96%E8%AF%AD%E6%B3%95\"><span class=\"toc-text\">4. 汇编语法</span></a></li></ol></li></ol></li></ol>","author":{"name":"FangH","slug":"blog-author","avatar":"/img/fh.png","link":"/","description":"我曾惊鸿一瞥未来","socials":{"github":"https://github.com/FHangH","twitter":"https://twitter.com/nUCFA2659We0pmu","stackoverflow":"https://stackoverflow.com/users/20173508/user20173508","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/zi-heng-18-99-47","csdn":"https://blog.csdn.net/weixin_44519692?spm=1000.2115.3001.5343","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"BlogTest","uid":"8f8247c813460cf709987d85ab2616f5","slug":"999.BlogTest","date":"2022-10-06T07:28:25.980Z","updated":"2022-10-07T09:37:28.985Z","comments":true,"path":"api/articles/999.BlogTest.json","keywords":null,"cover":"https://cdn.jsdelivr.net/gh/FHangH/FHangBlogCDN/Post_Img_mini/postImg_78.jpg","text":"BlogTestBlog 功能测试1. 博客插入视频 视频演示 &#x2F;&#x2F; 自适应大小 BiliBili视频链接 2. Google相册做图床 哈哈哈，我特么好不要脸啊！！！ 实验证明：谷歌的链接可以多次访问 缺点就是国内无法直接访问 3. 花瓣采集做图床 突然想到...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"Test","slug":"Test","count":1,"path":"api/categories/Test.json"}],"tags":[{"name":"Test","slug":"Test","count":1,"path":"api/tags/Test.json"}],"author":{"name":"FangH","slug":"blog-author","avatar":"/img/fh.png","link":"/","description":"我曾惊鸿一瞥未来","socials":{"github":"https://github.com/FHangH","twitter":"https://twitter.com/nUCFA2659We0pmu","stackoverflow":"https://stackoverflow.com/users/20173508/user20173508","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/zi-heng-18-99-47","csdn":"https://blog.csdn.net/weixin_44519692?spm=1000.2115.3001.5343","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"Java基础","uid":"3316961ecf1671c6065b043220187c47","slug":"10.Java基础","date":"2022-10-06T07:28:25.975Z","updated":"2022-01-04T05:08:15.124Z","comments":true,"path":"api/articles/10.Java基础.json","keywords":null,"cover":"https://cdn.jsdelivr.net/gh/FHangH/FHangBlogCDN/Post_Img_mini/postImg_19.jpg","text":"Java基础1. Java环境配置1.1 手动配置Java环境1.1.1 Oracle官网获得JDK Java-JDK 获得JDK，默认安装C盘即可 1.1.2 配置环境变量 在系统变量，设置三项属性： JAVA_HOME PATH CLASSPATH（JDK1.5版本以上，无需...","link":"","photos":[],"count_time":{"symbolsCount":"50k","symbolsTime":"45 mins."},"categories":[{"name":"编程","slug":"编程","count":16,"path":"api/categories/编程.json"}],"tags":[{"name":"Java","slug":"Java","count":1,"path":"api/tags/Java.json"}],"author":{"name":"FangH","slug":"blog-author","avatar":"/img/fh.png","link":"/","description":"我曾惊鸿一瞥未来","socials":{"github":"https://github.com/FHangH","twitter":"https://twitter.com/nUCFA2659We0pmu","stackoverflow":"https://stackoverflow.com/users/20173508/user20173508","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/zi-heng-18-99-47","csdn":"https://blog.csdn.net/weixin_44519692?spm=1000.2115.3001.5343","juejin":"","customs":{}}},"feature":true}}