{"title":"UE5 GAS","uid":"2712d7eb5e7bbab0f6547fbfd705a898","slug":"7_14_UE5_GAS","date":"2024-02-22T08:26:40.574Z","updated":"2024-02-22T08:31:39.750Z","comments":true,"path":"api/articles/7_14_UE5_GAS.json","keywords":null,"cover":"https://cdn.jsdelivr.net/gh/FHangH/FHangBlogCDN_03@master/Aurora_ (36).webp","content":"<h1 id=\"UE5-GAS\"><a href=\"#UE5-GAS\" class=\"headerlink\" title=\"UE5 GAS\"></a>UE5 GAS</h1><p>[toc]</p>\n<h3 id=\"0-整体概念\"><a href=\"#0-整体概念\" class=\"headerlink\" title=\"0. 整体概念\"></a>0. 整体概念</h3><div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">提示</p>\n<p><p>一切都来自<code>AbilitySystemComponent</code>，简称：<code>ASC</code></p>\n</p>\n</div>\n<div class=\"custom-quote warning\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 8V13\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 15.99V16.01\"></path>\n</svg>\n</span>\n<p class=\"custom-quote-title\">相关简称</p>\n<p><code>AbilitySystemComponent</code> -&gt; <code>ASC</code></p>\n<p><code>GameplayAbility</code> -&gt; <code>GA</code></p>\n<p><code>GameplayAbilitySpec</code> -&gt; <code>GASpec</code></p>\n<p><code>GameplayEffect</code> -&gt; <code>GE</code></p>\n<p><code>GameplayEffectSpec</code> -&gt; <code>GESpec</code></p>\n<p><code>GameplayEffectContext</code> -&gt; <code>GEContext</code></p>\n<p><code>GameplayEffectExecutionCalculation</code> -&gt; <code>GEEC</code>，<code>GE_ExeCalc</code></p>\n<p><code>GameplayEffectCooldown</code> -&gt; <code>GE_CD</code></p>\n<p><code>GameplayEffectCost</code> -&gt; <code>GE_Cost</code></p>\n<p><code>ActiveGameplayEffect</code> -&gt; <code>ActiveGE</code></p>\n<p><code>AttributeSet</code> -&gt; <code>AS</code></p>\n<p><code>GameplayCue</code> -&gt; <code>GC</code></p>\n<p><code>GameplayTask</code> -&gt; <code>GT</code></p>\n<p><code>GameplayModMagnitudeCalculation</code> -&gt; <code>GMMC</code>，<code>GameplayModMagniCalc</code></p>\n<p><code>GameplayEffectCustomApplicationRequirement</code> -&gt; <code>GE_CAR</code></p>\n\n</div>\n<div class=\"custom-quote danger\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M19.76 5.23C15.84 5.23 12 2 12 2C12 2 8.15996 5.23 4.23996 5.23C4.23996 5.23 1.86996 16.99 12 22C22.13 16.99 19.76 5.23 19.76 5.23Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 8V13\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 16H12\"></path>\n</svg>\n</span>\n<p class=\"custom-quote-title\">通信原理</p>\n<p><ol>\n<li>凡是使用<code>GAS</code>或受到<code>GAS</code>影响的<code>Actor</code>都应该添加<code>ASC</code></li>\n<li>拥有<code>ASC</code>的两个<code>Actor</code>之间所有的通信，都使用<code>ASC</code>发起和接受</li>\n<li><code>ASC</code>会将接受的响应回调给自身拥有的<code>GA</code>或<code>GE</code></li>\n<li>发起信息前，需要初始化<code>ASC</code></li>\n<li>拥有<code>ASC</code>的<code>Actor</code>也可确认需要使用的属性，抽象到<code>AS</code>中</li>\n<li><code>ASC</code>初始化完毕后，需要将<code>GA</code>赋予它</li>\n<li><code>GA</code>中可以添加相关<code>GE</code></li>\n<li><code>GE</code>产生时，可以预先创建<code>GE</code>的<code>Context</code>和<code>Spec</code>，也可以指定相关<code>GameplayTag</code>筛选作用对象</li>\n<li><code>GameplayTag</code>独立于<code>GAS</code>，但<code>GAS</code>会有大量的逻辑通信使用到<code>GameplayTag</code></li>\n</ol>\n</p>\n</div>\n<h3 id=\"1-使用GAS\"><a href=\"#1-使用GAS\" class=\"headerlink\" title=\"1. 使用GAS\"></a>1. 使用GAS</h3><ol>\n<li><p>在编辑器中启用<code>GameplayAbilitySystem</code>插件</p>\n</li>\n<li><p>编辑<code>YourProjectName.Build.cs</code>, 添加<code>&quot;GameplayAbilities&quot;</code>, <code>&quot;GameplayTags&quot;</code>, <code>&quot;GameplayTasks&quot;</code>到你的<code>PrivateDependencyModuleNames</code></p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> UnrealBuildTool;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">GAS_02</span> : <span class=\"title\">ModuleRules</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">GAS_02</span>(<span class=\"params\">ReadOnlyTargetRules Target</span>) : <span class=\"title\">base</span>(<span class=\"params\">Target</span>)</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tPCHUsage = PCHUsageMode.UseExplicitOrSharedPCHs;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tPublicDependencyModuleNames.AddRange(<span class=\"keyword\">new</span> <span class=\"built_in\">string</span>[] &#123; <span class=\"string\">&quot;Core&quot;</span>, <span class=\"string\">&quot;CoreUObject&quot;</span>, <span class=\"string\">&quot;Engine&quot;</span>, <span class=\"string\">&quot;InputCore&quot;</span>, </span><br><span class=\"line\">                                                           <span class=\"string\">&quot;HeadMountedDisplay&quot;</span>, <span class=\"string\">&quot;EnhancedInput&quot;</span> &#125;);</span><br><span class=\"line\">\t\tPrivateDependencyModuleNames.AddRange(<span class=\"keyword\">new</span> <span class=\"built_in\">string</span>[] &#123; <span class=\"string\">&quot;GameplayAbilities&quot;</span>, <span class=\"string\">&quot;GameplayTags&quot;</span>, <span class=\"string\">&quot;GameplayTasks&quot;</span> </span><br><span class=\"line\">                                                           &#125;);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"2-添加和初始化\"><a href=\"#2-添加和初始化\" class=\"headerlink\" title=\"2. 添加和初始化\"></a>2. 添加和初始化</h3><h4 id=\"2-1-添加ASC\"><a href=\"#2-1-添加ASC\" class=\"headerlink\" title=\"2.1 添加ASC\"></a>2.1 添加ASC</h4><ul>\n<li>无论是单机还是多人，考虑到玩家重生，并继续使用重生前的GE，AS的持久化内容，ASC应该添加到PlayerState</li>\n<li>如果不考虑GE，AS持久化，单机中ASC可以直接挂在Character或PlayerController</li>\n<li>否则ASC最好挂载到PlayerState上</li>\n</ul>\n<div class=\"custom-quote warning\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 8V13\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 15.99V16.01\"></path>\n</svg>\n</span>\n<p class=\"custom-quote-title\">挂载PlayerState的注意事项</p>\n<ol>\n<li>提高PlayerState的<code>NetUpdateFrequency</code>, 其默认是一个很低的值, 因此在客户端上发生<code>Attribute</code>和<code>GameplayTag</code>改变时会造成延迟或卡顿. 确保启用<a href=\"https://docs.unrealengine.com/en-US/Gameplay/Networking/Actors/Properties/index.html#adaptivenetworkupdatefrequency\">Adaptive Network Update Frequency</a></li>\n</ol>\n\n</div>\n<h4 id=\"2-2-初始化ASC\"><a href=\"#2-2-初始化ASC\" class=\"headerlink\" title=\"2.2 初始化ASC\"></a>2.2 初始化ASC</h4><div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">提示</p>\n<p><p>这里演示普通多人的初始化方式</p>\n</p>\n</div>\n<p>在OwnerActor的构造函数中使用：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">AGAS_02Character::<span class=\"built_in\">AGAS_02Character</span>()</span><br><span class=\"line\">&#123;        </span><br><span class=\"line\">\t<span class=\"comment\">// Init Ability System Component</span></span><br><span class=\"line\">\tASComponent = <span class=\"built_in\">CreateDefaultSubobject</span>&lt;UAbilitySystemComponent&gt;(<span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;AbilitySystemComponent&quot;</span>));</span><br><span class=\"line\">\tASComponent-&gt;<span class=\"built_in\">SetIsReplicated</span>(<span class=\"literal\">true</span>);</span><br><span class=\"line\">\tASComponent-&gt;<span class=\"built_in\">SetReplicationMode</span>(EGameplayEffectReplicationMode::Minimal);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p>ASC设置同步模式：</p>\n<table>\n<thead>\n<tr>\n<th>同步模式</th>\n<th>何时使用</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>Full</code></td>\n<td>单人</td>\n<td>所有<code>GameplayEffect</code>都同步到客户端.</td>\n</tr>\n<tr>\n<td><code>Mixed</code></td>\n<td>多人, 玩家控制的Actor</td>\n<td><code>GameplayEffect</code>只同步到其所属客户端, 只有<code>GameplayTag</code>和<code>GameplayCue</code>同步到所有客户端.</td>\n</tr>\n<tr>\n<td><code>Minimal</code></td>\n<td>多人, AI控制的Actor</td>\n<td><code>GameplayEffect</code>从不同步到任何客户端, 只有<code>GameplayTag</code>和<code>GameplayCue</code>同步到所有客户端.</td>\n</tr>\n</tbody></table>\n<div class=\"custom-quote warning\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 8V13\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 15.99V16.01\"></path>\n</svg>\n</span>\n<p class=\"custom-quote-title\">初始化细节</p>\n<ol>\n<li><code>Mixed</code>同步模式需要<code>OwnerActor</code>的<code>Owner</code>是<code>Controller</code>. </li>\n<li><code>PlayerState</code>的<code>Owner</code>默认是<code>Controller</code>但是<code>Character</code>不是. </li>\n<li>如果<code>OwnerActor</code>不是<code>PlayerState</code>时使用<code>Mixed</code>同步模式, 那么需要在<code>OwnerActor</code>中调用<code>SetOwner()</code>设置<code>Controller</code>.</li>\n<li>需要使用<code>PossessedBy()</code>设置新的<code>Controller</code>为<code>Pawn</code>的Owner.</li>\n<li><code>ASC</code>在<code>FActiveGameplayEffectContainer ActiveGameplayEffect</code>中保存其当前活跃的<code>GameplayEffect</code>.</li>\n<li><code>ASC</code>在<code>FGameplayAbilitySpecContainer ActivatableAbility</code>中保存其授予的<code>GameplayAbility</code>. </li>\n<li>遍历<code>ActivatableAbility.Items</code>时, 确保在循环体之上添加<code>ABILITYLIST_SCOPE_LOCK();</code>来锁定列表以防其改变(比如移除一个Ability). </li>\n<li>每个域中的<code>ABILITYLIST_SCOPE_LOCK();</code>会增加<code>AbilityScopeLockCount</code>, 之后出域时会减量. </li>\n<li>不要尝试在<code>ABILITYLIST_SCOPE_LOCK();</code>域中移除某个Ability(Ability删除函数会在内部检查<code>AbilityScopeLockCount</code>以防在列表锁定时移除Ability).</li>\n</ol>\n\n</div>\n<p>初始化ASC的位置：</p>\n<ul>\n<li><p><code>OwnerActor</code>和<code>AvatarActor</code>的<code>ASC</code>在服务端和客户端上均需初始化, 你应该在<code>Pawn</code>的<code>Controller</code>设置之后初始化(Possess之后), 单人游戏只需参考服务端的做法.</p>\n</li>\n<li><p>对于玩家控制的Character且<code>ASC</code>位于<code>Pawn</code>, 一般在服务端<code>Pawn</code>的<code>PossessedBy()</code>函数中初始化, 在客户端<code>PlayerController</code>的<code>AcknowledgePossession()</code>函数中初始化.</p>\n</li>\n<li><p>对于玩家控制的Character且<code>ASC</code>位于<code>PlayerState</code>, 一般在服务端<code>Pawn</code>的<code>PossessedBy()</code>函数中初始化, 在客户端PlayerController的<code>OnRep_PlayerState()</code>函数中初始化, 这确保了<code>PlayerState</code>存在于客户端上</p>\n</li>\n<li><p><code>OwnerActor</code>是<code>Character</code>，客户端也可以在<code>OnRep_PlayerState()</code>中初始化</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">AGAS_02Character::PossessedBy</span><span class=\"params\">(AController* NewController)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tSuper::<span class=\"built_in\">PossessedBy</span>(NewController);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (ASComponent)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tASComponent-&gt;<span class=\"built_in\">InitAbilityActorInfo</span>(<span class=\"keyword\">this</span>, <span class=\"keyword\">this</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 此处可以在服务端，分别赋予OwnerActor的GA和初始GE</span></span><br><span class=\"line\">\t\t<span class=\"built_in\">InitGameplayAbilities</span>();</span><br><span class=\"line\">\t\t<span class=\"built_in\">InitGameplayEffects</span>();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">    <span class=\"comment\">// ASC MixedMode replication requires that the ASC Owner&#x27;s Owner be the Controller.</span></span><br><span class=\"line\">\t<span class=\"comment\">// SetOwner(NewController);</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">AGAS_02Character::OnRep_PlayerState</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tSuper::<span class=\"built_in\">OnRep_PlayerState</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (ASComponent)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tASComponent-&gt;<span class=\"built_in\">InitAbilityActorInfo</span>(<span class=\"keyword\">this</span>, <span class=\"keyword\">this</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 客户端绑定按键输入和ASC的链接关系</span></span><br><span class=\"line\">\t\t<span class=\"built_in\">BindAbilityInput</span>();</span><br><span class=\"line\">\t\t<span class=\"built_in\">InitGameplayEffects</span>();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p>一下是<code>InitGameplayAbilities()</code>和<code>InitGameplayEffects()</code>，<code>BindAbilityInput()</code></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">UPROPERTY</span>(BlueprintReadOnly, EditDefaultsOnly, Category=<span class=\"string\">&quot;AFH|GAS|Ability&quot;</span>, meta=(AllowPrivateAccess=<span class=\"string\">&quot;true&quot;</span>))</span><br><span class=\"line\">TArray&lt;TSubclassOf&lt;<span class=\"keyword\">class</span> <span class=\"title class_\">UGGAbility</span>&gt;&gt; DefaultAbilities;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">UPROPERTY</span>(BlueprintReadOnly, EditDefaultsOnly, Category=<span class=\"string\">&quot;AFH|GAS|Effect&quot;</span>, meta=(AllowPrivateAccess=<span class=\"string\">&quot;true&quot;</span>))</span><br><span class=\"line\">TArray&lt;TSubclassOf&lt;<span class=\"keyword\">class</span> <span class=\"title class_\">UGameplayEffect</span>&gt;&gt; DefaultEffects;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">AGAS_02Character::InitGameplayAbilities</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (<span class=\"built_in\">HasAuthority</span>() &amp;&amp; ASComponent)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">const</span> <span class=\"keyword\">auto</span>&amp; Ability : DefaultAbilities)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tASComponent-&gt;<span class=\"built_in\">GiveAbility</span>(</span><br><span class=\"line\">\t\t\t\t<span class=\"built_in\">FGameplayAbilitySpec</span>(</span><br><span class=\"line\">\t\t\t\t\tAbility, <span class=\"number\">1</span>, <span class=\"built_in\">static_cast</span>&lt;int32&gt;(Ability.<span class=\"built_in\">GetDefaultObject</span>()-&gt;AbilityInputID), <span class=\"keyword\">this</span>));</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">AGAS_02Character::InitGameplayEffects</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!ASComponent) <span class=\"keyword\">return</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">auto</span> EffectContext = ASComponent-&gt;<span class=\"built_in\">MakeEffectContext</span>();</span><br><span class=\"line\">\tEffectContext.<span class=\"built_in\">AddSourceObject</span>(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">const</span> <span class=\"keyword\">auto</span>&amp; Effect : DefaultEffects)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">const</span> <span class=\"keyword\">auto</span> SpecHandle = ASComponent-&gt;<span class=\"built_in\">MakeOutgoingSpec</span>(Effect, <span class=\"number\">1</span>, EffectContext);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (SpecHandle.<span class=\"built_in\">IsValid</span>())</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tASComponent-&gt;<span class=\"built_in\">ApplyGameplayEffectSpecToSelf</span>(*SpecHandle.Data.<span class=\"built_in\">Get</span>());</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">AGAS_02Character::BindAbilityInput</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!IsAbilityBindOver &amp;&amp; ASComponent &amp;&amp; InputComponent)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">const</span> <span class=\"keyword\">auto</span> EnumAssetPath = <span class=\"built_in\">FTopLevelAssetPath</span>(</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">FName</span>(<span class=\"string\">&quot;/Script/GAS_02&quot;</span>), <span class=\"built_in\">FName</span>(<span class=\"string\">&quot;EAbilityInputID&quot;</span>));</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tASComponent-&gt;<span class=\"built_in\">BindAbilityActivationToInputComponent</span>(InputComponent, <span class=\"built_in\">FGameplayAbilityInputBinds</span>(</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">FString</span>(<span class=\"string\">&quot;Confirm&quot;</span>),</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">FString</span>(<span class=\"string\">&quot;Cancel&quot;</span>),</span><br><span class=\"line\">\t\t\tEnumAssetPath,</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">static_cast</span>&lt;int32&gt;(EAbilityInputID::Confirm),</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">static_cast</span>&lt;int32&gt;(EAbilityInputID::Cancel)));</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tIsAbilityBindOver = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<div class=\"custom-quote danger\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M19.76 5.23C15.84 5.23 12 2 12 2C12 2 8.15996 5.23 4.23996 5.23C4.23996 5.23 1.86996 16.99 12 22C22.13 16.99 19.76 5.23 19.76 5.23Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 8V13\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 16H12\"></path>\n</svg>\n</span>\n<p class=\"custom-quote-title\">绑定Enum的路径问题</p>\n<p><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">const</span> <span class=\"keyword\">auto</span> EnumAssetPath = <span class=\"built_in\">FTopLevelAssetPath</span>(</span><br><span class=\"line\">\t\t<span class=\"built_in\">FName</span>(<span class=\"string\">&quot;/Script/GAS_02&quot;</span>), <span class=\"built_in\">FName</span>(<span class=\"string\">&quot;EAbilityInputID&quot;</span>));</span><br></pre></td></tr></table></figure>\n\n\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;/Script/GAS_02&quot; 中的 GAS_02 更换为自己的项目名称</span><br><span class=\"line\">&quot;EAbilityInputID&quot; 更换为需要于ASC建立绑定的Enum名称</span><br></pre></td></tr></table></figure>\n\n\n\n<p><code>GameplayAbilityInput.h</code></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">pragma</span> once</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;CoreMinimal.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">UENUM</span>(BlueprintType)</span><br><span class=\"line\"><span class=\"keyword\">enum class</span> <span class=\"title class_\">EAbilityInputID</span> : uint8</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\">None            \t<span class=\"title\">UMETA</span><span class=\"params\">(Displayname=<span class=\"string\">&quot;None&quot;</span>)</span>,</span></span><br><span class=\"line\"><span class=\"function\">    Confirm             <span class=\"title\">UMETA</span><span class=\"params\">(Displayname=<span class=\"string\">&quot;Confirm&quot;</span>)</span>,</span></span><br><span class=\"line\"><span class=\"function\">    Cancel          \t<span class=\"title\">UMETA</span><span class=\"params\">(Displayname=<span class=\"string\">&quot;Cancel&quot;</span>)</span>,</span></span><br><span class=\"line\"><span class=\"function\">    FireAbility         <span class=\"title\">UMETA</span><span class=\"params\">(Displayname=<span class=\"string\">&quot;FireAbility&quot;</span>)</span>,</span></span><br><span class=\"line\"><span class=\"function\">    ActionBar01Ability \t<span class=\"title\">UMETA</span><span class=\"params\">(Displayname=<span class=\"string\">&quot;Ability01&quot;</span>)</span>,</span></span><br><span class=\"line\"><span class=\"function\">    ActionBar02Ability \t<span class=\"title\">UMETA</span><span class=\"params\">(Displayname=<span class=\"string\">&quot;Ability02&quot;</span>)</span>,</span></span><br><span class=\"line\"><span class=\"function\">    ThrowGrenade      \t<span class=\"title\">UMETA</span><span class=\"params\">(Displayname=<span class=\"string\">&quot;ThrowGrenade&quot;</span>)</span></span></span><br><span class=\"line\"><span class=\"function\">&#125;</span>;</span><br></pre></td></tr></table></figure>\n\n</p>\n</div>\n<h4 id=\"2-3-添加访问接口\"><a href=\"#2-3-添加访问接口\" class=\"headerlink\" title=\"2.3 添加访问接口\"></a>2.3 添加访问接口</h4><p>ASC添加到OwnerActor后，需要在OwnerActor继承<code>IAbilitySystemInterface</code>，并重载一个外部访问的接口<code>GetAbilitySystemComponent()</code></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">virtual</span> UAbilitySystemComponent* <span class=\"title\">GetAbilitySystemComponent</span><span class=\"params\">()</span> <span class=\"type\">const</span> <span class=\"keyword\">override</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">UAbilitySystemComponent* <span class=\"title\">AGAS_02Character::GetAbilitySystemComponent</span><span class=\"params\">()</span> <span class=\"type\">const</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ASComponent;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"2-4-增强输入绑定\"><a href=\"#2-4-增强输入绑定\" class=\"headerlink\" title=\"2.4 增强输入绑定\"></a>2.4 增强输入绑定</h4><p>当增强输入是bool类型，即存在<code>Pressed</code>和<code>Released</code>状态</p>\n<ol>\n<li><p>在客户端的<code>SetupPlayerInputComponent()</code>中绑定<code>InputAction</code></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// .h</span></span><br><span class=\"line\"><span class=\"built_in\">UPROPERTY</span>(EditAnywhere, BlueprintReadOnly, Category = Input, meta = (AllowPrivateAccess = <span class=\"string\">&quot;true&quot;</span>))</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">UInputAction</span>* FireAction;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">UPROPERTY</span>(EditAnywhere, BlueprintReadOnly, Category = Input, meta = (AllowPrivateAccess = <span class=\"string\">&quot;true&quot;</span>))</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">UInputAction</span>* ThrowAction;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Fire</span><span class=\"params\">(<span class=\"type\">const</span> FInputActionValue&amp; Value)</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Throw</span><span class=\"params\">(<span class=\"type\">const</span> FInputActionValue&amp; Value)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">UFUNCTION</span>()</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">BindAbilityInput</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// .cpp</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">AGAS_02Character::BindAbilityInput</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!IsAbilityBindOver &amp;&amp; ASComponent &amp;&amp; InputComponent)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">const</span> <span class=\"keyword\">auto</span> EnumAssetPath = <span class=\"built_in\">FTopLevelAssetPath</span>(</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">FName</span>(<span class=\"string\">&quot;/Script/GAS_02&quot;</span>), <span class=\"built_in\">FName</span>(<span class=\"string\">&quot;EAbilityInputID&quot;</span>));</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tASComponent-&gt;<span class=\"built_in\">BindAbilityActivationToInputComponent</span>(InputComponent, <span class=\"built_in\">FGameplayAbilityInputBinds</span>(</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">FString</span>(<span class=\"string\">&quot;Confirm&quot;</span>),</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">FString</span>(<span class=\"string\">&quot;Cancel&quot;</span>),</span><br><span class=\"line\">\t\t\tEnumAssetPath,</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">static_cast</span>&lt;int32&gt;(EAbilityInputID::Confirm),</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">static_cast</span>&lt;int32&gt;(EAbilityInputID::Cancel)));</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tIsAbilityBindOver = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">AGAS_02Character::SetupPlayerInputComponent</span><span class=\"params\">(<span class=\"keyword\">class</span> UInputComponent* PlayerInputComponent)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (UEnhancedInputComponent* EnhancedInputComponent = <span class=\"built_in\">CastChecked</span>&lt;UEnhancedInputComponent&gt;</span><br><span class=\"line\">        (PlayerInputComponent))</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t.....</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">        <span class=\"comment\">// 额外绑定，用于发起GA</span></span><br><span class=\"line\">        EnhancedInputComponent-&gt;<span class=\"built_in\">BindAction</span>(FireAction, ETriggerEvent::Triggered, <span class=\"keyword\">this</span>, &amp;AGAS_02Character::Fire);</span><br><span class=\"line\">\t\tEnhancedInputComponent-&gt;<span class=\"built_in\">BindAction</span>(ThrowAction, ETriggerEvent::Triggered, <span class=\"keyword\">this</span>, &amp;AGAS_02Character::Throw);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 此次再次绑定，防止客端 OnRep_PlayerState() 中绑定失败</span></span><br><span class=\"line\">\t<span class=\"built_in\">BindAbilityInput</span>();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>实现增强输入绑定的回调事件和在<code>SendAbilityLocalInput()</code>中处理按键和ASC的绑定</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">AGAS_02Character::Fire</span><span class=\"params\">(<span class=\"type\">const</span> FInputActionValue&amp; Value)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">SendAbilityLocalInput</span>(Value, <span class=\"built_in\">static_cast</span>&lt;int32&gt;(EAbilityInputID::FireAbility));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">AGAS_02Character::Throw</span><span class=\"params\">(<span class=\"type\">const</span> FInputActionValue&amp; Value)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">SendAbilityLocalInput</span>(Value, <span class=\"built_in\">static_cast</span>&lt;int32&gt;(EAbilityInputID::ThrowGrenade));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">AGAS_02Character::SendAbilityLocalInput</span><span class=\"params\">(<span class=\"type\">const</span> FInputActionValue&amp; Value, int32 InputID)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!ASComponent) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (Value.<span class=\"built_in\">Get</span>&lt;<span class=\"type\">bool</span>&gt;())</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tASComponent-&gt;<span class=\"built_in\">AbilityLocalInputPressed</span>(InputID);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tASComponent-&gt;<span class=\"built_in\">AbilityLocalInputReleased</span>(InputID);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"3-Attribute和AS\"><a href=\"#3-Attribute和AS\" class=\"headerlink\" title=\"3. Attribute和AS\"></a>3. Attribute和AS</h3><h4 id=\"3-1-Attribute定义\"><a href=\"#3-1-Attribute定义\" class=\"headerlink\" title=\"3.1 Attribute定义\"></a>3.1 Attribute定义</h4><ol>\n<li><code>Attribute</code>是由<a href=\"https://docs.unrealengine.com/en-US/API/Plugins/GameplayAbilities/FGameplayAttributeData/index.html\">FGameplayAttributeData</a>结构体定义的浮点值, 其可以表示从角色生命值到角色等级再到一瓶药水的剂量的任何事物</li>\n<li>如果某项数值是属于某个Actor且游戏相关的, 应该考虑使用<code>Attribute</code>. </li>\n<li><code>Attribute</code>一般应该只能由<a href=\"https://github.com/FHangH/GASDocumentation_Chinese#concepts-ge\">GameplayEffect</a>修改, 这样<code>ASC</code>才能<a href=\"https://github.com/FHangH/GASDocumentation_Chinese#concepts-p\">预测(Predict)</a>其改变.</li>\n<li><code>Attribute</code>也可以由<code>AttributeSet</code>定义并存于其中. <a href=\"https://github.com/FHangH/GASDocumentation_Chinese#concepts-as\">AttributeSet</a>用于同步那些标记为replication的<code>Attribute</code>.</li>\n</ol>\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">提示</p>\n<p>如果你不想某个<code>Attribute</code>显示在编辑器的<code>Attribute</code>列表, 可以使用<code>Meta = (HideInDetailsView)</code>属性宏.</p>\n\n</div>\n<h4 id=\"3-2-Attribute概念\"><a href=\"#3-2-Attribute概念\" class=\"headerlink\" title=\"3.2 Attribute概念\"></a>3.2 Attribute概念</h4><h5 id=\"3-2-1-Base和Current\"><a href=\"#3-2-1-Base和Current\" class=\"headerlink\" title=\"3.2.1 Base和Current\"></a>3.2.1 Base和Current</h5><ul>\n<li><code>Attribute</code>是由两个值：<code>BaseValue</code>和<code>CurrentValue</code>组成<ul>\n<li><code>BaseValue</code>是<code>Attribute</code>的永久值</li>\n<li><code>CurrentValue</code>是<code>BaseValue</code>加上<code>GameplayEffect</code>给的临时修改值后得到的</li>\n</ul>\n</li>\n</ul>\n<div class=\"custom-quote warning\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 8V13\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 15.99V16.01\"></path>\n</svg>\n</span>\n<p class=\"custom-quote-title\">修改<code>CurrentValue</code> 和 <code>BaseValue</code></p>\n<p><ol>\n<li><p>关于限制(Clamp)<code>Attribute</code>值的问题在<a href=\"https://github.com/FHangH/GASDocumentation_Chinese#concepts-as-preattributechange\">PreAttributeChange()</a>中讨论了CurrentValue的修改,</p>\n</li>\n<li><p>在<a href=\"https://github.com/FHangH/GASDocumentation_Chinese#concepts-as-postgameplayeffectexecute\">PostGameplayEffectExecute()</a>中讨论了<code>GameplayEffect</code>对<code>BaseValue</code>的修改.</p>\n</li>\n<li><p><code>即刻(Instant)GameplayEffect</code>可以永久性的修改<code>BaseValue</code></p>\n</li>\n<li><p><code>持续(Duration)</code>和<code>无限(Infinite)GameplayEffect</code>可以修改CurrentValue. </p>\n</li>\n<li><p>周期性(Periodic)<code>GameplayEffect</code>被视为<code>即刻(Instant)GameplayEffect</code>并且可以修改<code>BaseValue</code>.</p>\n</li>\n</ol>\n</p>\n</div>\n<h5 id=\"3-2-2-MetaAttribute\"><a href=\"#3-2-2-MetaAttribute\" class=\"headerlink\" title=\"3.2.2 MetaAttribute\"></a>3.2.2 MetaAttribute</h5><p>一些<code>Attribute</code>被视为占位符, 其是用于预计和<code>Attribute</code>交互的临时值, 这些<code>Attribute</code>被叫做<code>Meta Attribute</code>.</p>\n<p>例：</p>\n<ul>\n<li>我们通常定义伤害值为<code>Meta Attribute</code>, 使用伤害值<code>Meta Attribute</code>作为占位符, 而不是使用<code>GameplayEffect</code>直接修改生命值<code>Attribute</code></li>\n<li>使用这种方法, 伤害值就可以在<a href=\"https://github.com/FHangH/GASDocumentation_Chinese#concepts-ge-ec\">GameplayEffectExecutionCalculation</a>中由buff和debuff修改</li>\n<li>并且可以在<code>AttributeSet</code>中进一步操作</li>\n<li>在最终将生命值减去伤害值之前, 要将伤害值减去当前的护盾值</li>\n<li>伤害值<code>Meta Attribute</code>在<code>GameplayEffect</code>之间不是持久化的, 并且可以被任何一方重写</li>\n<li><code>Meta Attribute</code>一般是不可同步的.</li>\n</ul>\n<h4 id=\"3-3-AttributeSet\"><a href=\"#3-3-AttributeSet\" class=\"headerlink\" title=\"3.3 AttributeSet\"></a>3.3 AttributeSet</h4><ul>\n<li>简单来说，<code>AttributeSet</code>是<code>Attribute</code>的集合</li>\n<li>一个<code>AS</code>可以含有多个<code>Attribute</code></li>\n<li>一个<code>Character</code>可以包含多个<code>AS</code></li>\n</ul>\n<h5 id=\"3-3-1-AS定义\"><a href=\"#3-3-1-AS定义\" class=\"headerlink\" title=\"3.3.1 AS定义\"></a>3.3.1 AS定义</h5><div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">AS中使用Attribute的方式</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\"> *  这是一个帮助程序宏，可在 RepNotify 函数中用于处理客户端将预测性修改的属性。</span><br><span class=\"line\"> *  </span><br><span class=\"line\"> *  void UMyHealthSet::OnRep_Health(const FGameplayAttributeData&amp; OldValue)</span><br><span class=\"line\"> *  &#123;</span><br><span class=\"line\"> *     GAMEPLAYATTRIBUTE_REPNOTIFY(UMyHealthSet, Health, OldValue);</span><br><span class=\"line\"> *  &#125;</span><br><span class=\"line\"> */</span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\"> * 这定义了一组用于访问和初始化属性的辅助函数，以避免手动编写这些函数。</span><br><span class=\"line\"> * 它将为属性 Health 创建以下函数</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *  static FGameplayAttribute UMyHealthSet::GetHealthAttribute();</span><br><span class=\"line\"> *  FORCEINLINE float UMyHealthSet::GetHealth() const;</span><br><span class=\"line\"> *  FORCEINLINE void UMyHealthSet::SetHealth(float NewVal);</span><br><span class=\"line\"> *  FORCEINLINE void UMyHealthSet::InitHealth(float NewVal);</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * 要在游戏中使用它，您可以定义如下内容，然后根据需要添加特定于游戏的函数：</span><br><span class=\"line\"> * </span><br><span class=\"line\"> *  #define ATTRIBUTE_ACCESSORS(ClassName, PropertyName) \\</span><br><span class=\"line\"> *  GAMEPLAYATTRIBUTE_PROPERTY_GETTER(ClassName, PropertyName) \\</span><br><span class=\"line\"> *  GAMEPLAYATTRIBUTE_VALUE_GETTER(PropertyName) \\</span><br><span class=\"line\"> *  GAMEPLAYATTRIBUTE_VALUE_SETTER(PropertyName) \\</span><br><span class=\"line\"> *  GAMEPLAYATTRIBUTE_VALUE_INITTER(PropertyName)</span><br><span class=\"line\"> * </span><br><span class=\"line\"> *  ATTRIBUTE_ACCESSORS(UMyHealthSet, Health)</span><br><span class=\"line\"> */</span><br></pre></td></tr></table></figure>\n\n</p>\n</div>\n<p>假设定义一个Player和Enemy通用的属性集合（AS），定义：<code>GGAttributeSet.h</code></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">pragma</span> once</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;CoreMinimal.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;AbilitySystemComponent.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;AttributeSet.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;GGAttributeSet.generated.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> ATTRIBUTE_ACCESSORS(ClassName, PropertyName) \\</span></span><br><span class=\"line\"><span class=\"meta\">GAMEPLAYATTRIBUTE_PROPERTY_GETTER(ClassName, PropertyName) \\</span></span><br><span class=\"line\"><span class=\"meta\">GAMEPLAYATTRIBUTE_VALUE_GETTER(PropertyName) \\</span></span><br><span class=\"line\"><span class=\"meta\">GAMEPLAYATTRIBUTE_VALUE_SETTER(PropertyName) \\</span></span><br><span class=\"line\"><span class=\"meta\">GAMEPLAYATTRIBUTE_VALUE_INITTER(PropertyName)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 自定义的委托，用于拥有AS的OwnerActor响应这些委托</span></span><br><span class=\"line\"><span class=\"built_in\">DECLARE_MULTICAST_DELEGATE_FourParams</span>(</span><br><span class=\"line\">\tFGGAttributeEvent, AActor* <span class=\"comment\">/*Instigator*/</span>, AActor* <span class=\"comment\">/*Causer*/</span>, <span class=\"type\">const</span> FGameplayEffectSpec&amp;, <span class=\"type\">float</span> <span class=\"comment\">/*Effect_Magnitude*/</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">UCLASS</span>()</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">GAS_02_API</span> UGGAttributeSet : <span class=\"keyword\">public</span> UAttributeSet</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">GENERATED_BODY</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">UGGAttributeSet</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(BlueprintReadOnly, ReplicatedUsing=<span class=\"string\">&quot;OnRep_Health&quot;</span>, Category=<span class=\"string\">&quot;AFH|GAS|AttributeSet&quot;</span>, meta=(AllowPrivateAccess=<span class=\"string\">&quot;true&quot;</span>))</span><br><span class=\"line\">\tFGameplayAttributeData Health &#123;<span class=\"number\">100.f</span>&#125;;</span><br><span class=\"line\">\t<span class=\"built_in\">ATTRIBUTE_ACCESSORS</span>(UGGAttributeSet, Health)</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(BlueprintReadOnly, ReplicatedUsing=<span class=\"string\">&quot;OnRep_MaxHealth&quot;</span>, Category=<span class=\"string\">&quot;AFH|GAS|AttributeSet&quot;</span>, meta=(AllowPrivateAccess=<span class=\"string\">&quot;true&quot;</span>))</span><br><span class=\"line\">\tFGameplayAttributeData MaxHealth &#123;<span class=\"number\">100.f</span>&#125;;</span><br><span class=\"line\">\t<span class=\"built_in\">ATTRIBUTE_ACCESSORS</span>(UGGAttributeSet, MaxHealth)</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(BlueprintReadOnly, ReplicatedUsing=<span class=\"string\">&quot;OnRep_Armor&quot;</span>, Category=<span class=\"string\">&quot;AFH|GAS|AttributeSet&quot;</span>, meta=(AllowPrivateAccess=<span class=\"string\">&quot;true&quot;</span>))</span><br><span class=\"line\">\tFGameplayAttributeData Armor &#123;<span class=\"number\">100.f</span>&#125;;</span><br><span class=\"line\">\t<span class=\"built_in\">ATTRIBUTE_ACCESSORS</span>(UGGAttributeSet, Armor)</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(BlueprintReadOnly, ReplicatedUsing=<span class=\"string\">&quot;OnRep_MaxArmor&quot;</span>, Category=<span class=\"string\">&quot;AFH|GAS|AttributeSet&quot;</span>, meta=(AllowPrivateAccess=<span class=\"string\">&quot;true&quot;</span>))</span><br><span class=\"line\">\tFGameplayAttributeData MaxArmor &#123;<span class=\"number\">100.f</span>&#125;;</span><br><span class=\"line\">\t<span class=\"built_in\">ATTRIBUTE_ACCESSORS</span>(UGGAttributeSet, MaxArmor)</span><br><span class=\"line\">        </span><br><span class=\"line\">    <span class=\"comment\">// InDamage在服务端处理，无需复制到客户端</span></span><br><span class=\"line\">    <span class=\"built_in\">UPROPERTY</span>(BlueprintReadOnly, Category=<span class=\"string\">&quot;AFH|GAS|AttributeSet&quot;</span>, meta=(AllowPrivateAccess=<span class=\"string\">&quot;true&quot;</span>))</span><br><span class=\"line\">\tFGameplayAttributeData InDamage &#123;&#125;;</span><br><span class=\"line\">\t<span class=\"built_in\">ATTRIBUTE_ACCESSORS</span>(UGGAttributeSet, InDamage)</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">mutable</span> FGGAttributeEvent OnOutOfHealth;</span><br><span class=\"line\">\t<span class=\"keyword\">mutable</span> FGGAttributeEvent OnOutOfArmor;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">protected</span>:\t</span><br><span class=\"line\">\t<span class=\"comment\">// Function</span></span><br><span class=\"line\">\t<span class=\"comment\">// Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">virtual</span> <span class=\"type\">void</span> <span class=\"title\">GetLifetimeReplicatedProps</span><span class=\"params\">(TArray&lt;FLifetimeProperty&gt;&amp; OutLifetimeProps)</span> <span class=\"type\">const</span> <span class=\"keyword\">override</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">virtual</span> <span class=\"type\">void</span> <span class=\"title\">PreAttributeBaseChange</span><span class=\"params\">(<span class=\"type\">const</span> FGameplayAttribute&amp; Attribute, <span class=\"type\">float</span>&amp; NewValue)</span> <span class=\"type\">const</span> <span class=\"keyword\">override</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">virtual</span> <span class=\"type\">void</span> <span class=\"title\">PreAttributeChange</span><span class=\"params\">(<span class=\"type\">const</span> FGameplayAttribute&amp; Attribute, <span class=\"type\">float</span>&amp; NewValue)</span> <span class=\"keyword\">override</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">virtual</span> <span class=\"type\">void</span> <span class=\"title\">PostGameplayEffectExecute</span><span class=\"params\">(<span class=\"type\">const</span> FGameplayEffectModCallbackData&amp; Data)</span> <span class=\"keyword\">override</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// New Define</span></span><br><span class=\"line\">\t<span class=\"built_in\">UFUNCTION</span>()</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">virtual</span> <span class=\"type\">void</span> <span class=\"title\">ClampAttributeOnChange</span><span class=\"params\">(<span class=\"type\">const</span> FGameplayAttribute&amp; Attribute, <span class=\"type\">float</span>&amp; NewValue)</span> <span class=\"type\">const</span></span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"built_in\">UFUNCTION</span>()</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">virtual</span> <span class=\"type\">void</span> <span class=\"title\">OnRep_Health</span><span class=\"params\">(<span class=\"type\">const</span> FGameplayAttributeData&amp; OldHealth)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">UFUNCTION</span>()</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">virtual</span> <span class=\"type\">void</span> <span class=\"title\">OnRep_MaxHealth</span><span class=\"params\">(<span class=\"type\">const</span> FGameplayAttributeData&amp; OldMaxHealth)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">UFUNCTION</span>()</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">virtual</span> <span class=\"type\">void</span> <span class=\"title\">OnRep_Armor</span><span class=\"params\">(<span class=\"type\">const</span> FGameplayAttributeData&amp; OldArmor)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">UFUNCTION</span>()</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">virtual</span> <span class=\"type\">void</span> <span class=\"title\">OnRep_MaxArmor</span><span class=\"params\">(<span class=\"type\">const</span> FGameplayAttributeData&amp; OldMaxArmor)</span></span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<p>实现：<code>GGAttributeSet.cpp</code></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;GGAttributeSet.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;GameplayEffectExtension.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;Net/UnrealNetwork.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">UGGAttributeSet::<span class=\"built_in\">UGGAttributeSet</span>()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Override</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">UGGAttributeSet::GetLifetimeReplicatedProps</span><span class=\"params\">(TArray&lt;FLifetimeProperty&gt;&amp; OutLifetimeProps)</span> <span class=\"type\">const</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tSuper::<span class=\"built_in\">GetLifetimeReplicatedProps</span>(OutLifetimeProps);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">DOREPLIFETIME_CONDITION_NOTIFY</span>(UGGAttributeSet, Health, COND_None, REPNOTIFY_Always);</span><br><span class=\"line\">\t<span class=\"built_in\">DOREPLIFETIME_CONDITION_NOTIFY</span>(UGGAttributeSet, MaxHealth, COND_None, REPNOTIFY_Always);</span><br><span class=\"line\">\t<span class=\"built_in\">DOREPLIFETIME_CONDITION_NOTIFY</span>(UGGAttributeSet, Armor, COND_None, REPNOTIFY_Always);</span><br><span class=\"line\">\t<span class=\"built_in\">DOREPLIFETIME_CONDITION_NOTIFY</span>(UGGAttributeSet, MaxArmor, COND_None, REPNOTIFY_Always);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">UGGAttributeSet::PreAttributeBaseChange</span><span class=\"params\">(<span class=\"type\">const</span> FGameplayAttribute&amp; Attribute, <span class=\"type\">float</span>&amp; NewValue)</span> <span class=\"type\">const</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tSuper::<span class=\"built_in\">PreAttributeBaseChange</span>(Attribute, NewValue);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">ClampAttributeOnChange</span>(Attribute, NewValue);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">UGGAttributeSet::PreAttributeChange</span><span class=\"params\">(<span class=\"type\">const</span> FGameplayAttribute&amp; Attribute, <span class=\"type\">float</span>&amp; NewValue)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tSuper::<span class=\"built_in\">PreAttributeChange</span>(Attribute, NewValue);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">ClampAttributeOnChange</span>(Attribute, NewValue);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">UGGAttributeSet::PostGameplayEffectExecute</span><span class=\"params\">(<span class=\"type\">const</span> FGameplayEffectModCallbackData&amp; Data)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tSuper::<span class=\"built_in\">PostGameplayEffectExecute</span>(Data);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (Data.EvaluatedData.Attribute == <span class=\"built_in\">GetInDamageAttribute</span>())</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 此处进行些 Attribute的修改</span></span><br><span class=\"line\">        <span class=\"comment\">// 也可以回调一些方法，使得拥有的OwnerActor可以响应</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (OnOutOfArmor.<span class=\"built_in\">IsBound</span>())</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            OnOutofArmor.<span class=\"built_in\">Broadcast</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// New Define</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">UGGAttributeSet::ClampAttributeOnChange</span><span class=\"params\">(<span class=\"type\">const</span> FGameplayAttribute&amp; Attribute, <span class=\"type\">float</span>&amp; NewValue)</span> <span class=\"type\">const</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (Attribute == <span class=\"built_in\">GetHealthAttribute</span>())</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tNewValue =  FMath::<span class=\"built_in\">Clamp</span>(NewValue, <span class=\"number\">0.f</span>, <span class=\"built_in\">GetMaxHealth</span>());</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (Attribute == <span class=\"built_in\">GetArmorAttribute</span>())</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tNewValue =  FMath::<span class=\"built_in\">Clamp</span>(NewValue, <span class=\"number\">0.f</span>, <span class=\"built_in\">GetMaxArmor</span>());</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">UGGAttributeSet::OnRep_Health</span><span class=\"params\">(<span class=\"type\">const</span> FGameplayAttributeData&amp; OldHealth)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">GAMEPLAYATTRIBUTE_REPNOTIFY</span>(UGGAttributeSet, Health, OldHealth);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">UGGAttributeSet::OnRep_MaxHealth</span><span class=\"params\">(<span class=\"type\">const</span> FGameplayAttributeData&amp; OldMaxHealth)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">GAMEPLAYATTRIBUTE_REPNOTIFY</span>(UGGAttributeSet, MaxHealth, OldMaxHealth);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">UGGAttributeSet::OnRep_Armor</span><span class=\"params\">(<span class=\"type\">const</span> FGameplayAttributeData&amp; OldArmor)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">GAMEPLAYATTRIBUTE_REPNOTIFY</span>(UGGAttributeSet, Armor, OldArmor);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">UGGAttributeSet::OnRep_MaxArmor</span><span class=\"params\">(<span class=\"type\">const</span> FGameplayAttributeData&amp; OldMaxArmor)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">GAMEPLAYATTRIBUTE_REPNOTIFY</span>(UGGAttributeSet, MaxArmor, OldMaxArmor);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h5 id=\"3-3-2-AS初始化\"><a href=\"#3-3-2-AS初始化\" class=\"headerlink\" title=\"3.3.2 AS初始化\"></a>3.3.2 AS初始化</h5><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">UPROPERTY</span>(VisibleAnywhere, BlueprintReadOnly, Category=<span class=\"string\">&quot;AFH|GAS|AttributeSet&quot;</span>, meta=(AllowPrivateAccess=<span class=\"string\">&quot;true&quot;</span>))</span><br><span class=\"line\">UGGAttributeSet* AttributeSet;</span><br><span class=\"line\"></span><br><span class=\"line\">AGAS_02Character::<span class=\"built_in\">AGAS_02Character</span>()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"comment\">// Init AttributeSet</span></span><br><span class=\"line\">\tAttributeSet = <span class=\"built_in\">CreateDefaultSubobject</span>&lt;UGGAttributeSet&gt;(<span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;AttributeSet&quot;</span>));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h5 id=\"3-3-3-Attribute改变回调\"><a href=\"#3-3-3-Attribute改变回调\" class=\"headerlink\" title=\"3.3.3 Attribute改变回调\"></a>3.3.3 Attribute改变回调</h5><ul>\n<li><code>AS</code>内的<code>Attribute</code>发生改变：<code>Set()</code>，<code>Init()</code>；</li>\n<li>都会触发<code>Attribute</code>的变化回调；</li>\n<li>为了监听<code>Attribute</code>何时变化以便更新UI和其他游戏逻辑, 可以使用<code>UAbilitySystemComponent::GetGameplayAttributeValueChangeDelegate(FGameplayAttribute </code>Attribute<code>)</code>,</li>\n<li>该函数返回一个委托(Delegate), 你可以将其绑定一个当<code>Attribute</code>变化时需要自动调用的函数. </li>\n<li>该委托提供一个<code>FOnAttributeChangeData</code>参数, 其中有<code>NewValue</code>, <code>OldValue</code>和<code>FGameplayEffectModCallbackData</code>.</li>\n</ul>\n<div class=\"custom-quote warning\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 8V13\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 15.99V16.01\"></path>\n</svg>\n</span>\n<p class=\"custom-quote-title\">注意</p>\n<p><code>FGameplayEffectModCallbackData</code>只能在服务端上设置</p>\n\n</div>\n<p>在OwnerActor的进行AS初始化后，进行回调绑定：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">virtual</span> <span class=\"type\">void</span> <span class=\"title\">OnHealthAttributeChanged</span><span class=\"params\">(<span class=\"type\">const</span> FOnAttributeChangeData&amp; Data)</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">virtual</span> <span class=\"type\">void</span> <span class=\"title\">OnArmorAttributeChanged</span><span class=\"params\">(<span class=\"type\">const</span> FOnAttributeChangeData&amp; Data)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">UFUNCTION</span>(BlueprintNativeEvent, Category=<span class=\"string\">&quot;GAS&quot;</span>)</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">OnHealthChanged</span><span class=\"params\">(<span class=\"type\">float</span> OldHealth, <span class=\"type\">float</span> NewHealth)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">UFUNCTION</span>(BlueprintNativeEvent, Category=<span class=\"string\">&quot;GAS&quot;</span>)</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">OnArmorChanged</span><span class=\"params\">(<span class=\"type\">float</span> OldArmor, <span class=\"type\">float</span> NewArmor)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">AGAS_02Character::BeginPlay</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tSuper::<span class=\"built_in\">BeginPlay</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (ASComponent)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tASComponent-&gt;<span class=\"built_in\">GetGameplayAttributeValueChangeDelegate</span>(</span><br><span class=\"line\">\t\t\tAttributeSet-&gt;<span class=\"built_in\">GetHealthAttribute</span>()).<span class=\"built_in\">AddUObject</span>(<span class=\"keyword\">this</span>, &amp;AGAS_02Character::OnHealthAttributeChanged);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tASComponent-&gt;<span class=\"built_in\">GetGameplayAttributeValueChangeDelegate</span>(</span><br><span class=\"line\">\t\t\tAttributeSet-&gt;<span class=\"built_in\">GetArmorAttribute</span>()).<span class=\"built_in\">AddUObject</span>(<span class=\"keyword\">this</span>, &amp;AGAS_02Character::OnArmorAttributeChanged);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">AGAS_02Character::OnHealthAttributeChanged</span><span class=\"params\">(<span class=\"type\">const</span> FOnAttributeChangeData&amp; Data)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">OnHealthChanged</span>(Data.OldValue, Data.NewValue);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">AGAS_02Character::OnArmorAttributeChanged</span><span class=\"params\">(<span class=\"type\">const</span> FOnAttributeChangeData&amp; Data)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">OnArmorChanged</span>(Data.OldValue, Data.NewValue);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">AGAS_02Character::OnHealthChanged_Implementation</span><span class=\"params\">(<span class=\"type\">float</span> OldHealth, <span class=\"type\">float</span> NewHealth)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">// TODO Blueprint Override Function</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">AGAS_02Character::OnArmorChanged_Implementation</span><span class=\"params\">(<span class=\"type\">float</span> OldArmor, <span class=\"type\">float</span> NewArmor)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">// TODO Blueprint Override Function</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\"><code>AttributeSet</code>内实现自定义委托绑定</p>\n<p><p>ASC提供的回调不包含更多信息，自定义的委托可以额外回调更详细的内容</p>\n<p>前面<code>AS</code>定义的时候，内部自定义了委托：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">DECLARE_MULTICAST_DELEGATE_FourParams</span>(</span><br><span class=\"line\">\tFGGAttributeEvent, AActor* <span class=\"comment\">/*Instigator*/</span>, AActor* <span class=\"comment\">/*Causer*/</span>, <span class=\"type\">const</span> FGameplayEffectSpec&amp;, <span class=\"type\">float</span> </span><br><span class=\"line\">\t<span class=\"comment\">/*Effect_Magnitude*/</span>);</span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"keyword\">mutable</span> FGGAttributeEvent OnOutOfHealth;</span><br><span class=\"line\"><span class=\"keyword\">mutable</span> FGGAttributeEvent OnOutOfArmor;</span><br></pre></td></tr></table></figure>\n\n\n\n<p>在<code>ASC</code>所在的<code>OwnerActor</code>内，初始化<code>AS</code>后，可以添加：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">virtual</span> <span class=\"type\">void</span> <span class=\"title\">OnOutOfHealthChanged</span><span class=\"params\">(AActor* DamageInstigator, AActor* DamageCauser, <span class=\"type\">const</span> FGameplayEffectSpec&amp; </span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">                                  DamageEffectSpec, <span class=\"type\">float</span> DamageMagnitude)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">virtual</span> <span class=\"type\">void</span> <span class=\"title\">OnOutOfArmorChanged</span><span class=\"params\">(AActor* DamageInstigator, AActor* DamageCauser, <span class=\"type\">const</span> FGameplayEffectSpec&amp; </span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">                                 DamageEffectSpec, <span class=\"type\">float</span> DamageMagnitude)</span></span>;</span><br></pre></td></tr></table></figure>\n\n\n\n<p>完整绑定方式：<code>AGAS_02Character.h</code></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">UPROPERTY</span>(VisibleAnywhere, BlueprintReadOnly, Category=<span class=\"string\">&quot;AFH|GAS|AttributeSet&quot;</span>, meta=(AllowPrivateAccess=<span class=\"string\">&quot;true&quot;</span>))</span><br><span class=\"line\">UGGAttributeSet* AttributeSet;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">UPROPERTY</span>(VisibleAnywhere, BlueprintReadOnly, Category=<span class=\"string\">&quot;AFH|GAS&quot;</span>, meta=(AllowPrivateAccess=<span class=\"string\">&quot;true&quot;</span>))</span><br><span class=\"line\">UAbilitySystemComponent* ASComponent;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">virtual</span> <span class=\"type\">void</span> <span class=\"title\">OnOutOfHealthChanged</span><span class=\"params\">(AActor* DamageInstigator, AActor* DamageCauser, <span class=\"type\">const</span> FGameplayEffectSpec&amp; </span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">                                  DamageEffectSpec, <span class=\"type\">float</span> DamageMagnitude)</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">virtual</span> <span class=\"type\">void</span> <span class=\"title\">OnOutOfArmorChanged</span><span class=\"params\">(AActor* DamageInstigator, AActor* DamageCauser, <span class=\"type\">const</span> FGameplayEffectSpec&amp; </span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">                                 DamageEffectSpec, <span class=\"type\">float</span> DamageMagnitude)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">UFUNCTION</span>(BlueprintNativeEvent, Category=<span class=\"string\">&quot;AFH|GAS&quot;</span>)</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">OnOutOfHealth</span><span class=\"params\">(AActor* DamageInstigator, AActor* DamageCauser, <span class=\"type\">const</span> FGameplayEffectSpec&amp; DamageEffectSpec, <span class=\"type\">float</span> </span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">                   DamageMagnitude)</span></span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"built_in\">UFUNCTION</span>(BlueprintNativeEvent, Category=<span class=\"string\">&quot;AFH|GAS&quot;</span>)</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">OnOutOfArmor</span><span class=\"params\">(AActor* DamageInstigator, AActor* DamageCauser, <span class=\"type\">const</span> FGameplayEffectSpec&amp; DamageEffectSpec, <span class=\"type\">float</span> </span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">                  DamageMagnitude)</span></span>;</span><br></pre></td></tr></table></figure>\n\n\n\n<p><code>AGAS_02Character.cpp</code></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">AGAS_02Character::<span class=\"built_in\">AGAS_02Character</span>()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"comment\">// Init Ability System Component</span></span><br><span class=\"line\">\tASComponent = <span class=\"built_in\">CreateDefaultSubobject</span>&lt;UAbilitySystemComponent&gt;(<span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;AbilitySystemComponent&quot;</span>));</span><br><span class=\"line\">\tASComponent-&gt;<span class=\"built_in\">SetIsReplicated</span>(<span class=\"literal\">true</span>);</span><br><span class=\"line\">\tASComponent-&gt;<span class=\"built_in\">SetReplicationMode</span>(EGameplayEffectReplicationMode::Minimal);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// Init AttributeSet</span></span><br><span class=\"line\">\tAttributeSet = <span class=\"built_in\">CreateDefaultSubobject</span>&lt;UGGAttributeSet&gt;(<span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;AttributeSet&quot;</span>));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">AGAS_02Character::BeginPlay</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tSuper::<span class=\"built_in\">BeginPlay</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (ASComponent)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tASComponent-&gt;<span class=\"built_in\">GetGameplayAttributeValueChangeDelegate</span>(</span><br><span class=\"line\">\t\t\tAttributeSet-&gt;<span class=\"built_in\">GetHealthAttribute</span>()).<span class=\"built_in\">AddUObject</span>(<span class=\"keyword\">this</span>, &amp;AGAS_02Character::OnHealthAttributeChanged);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tASComponent-&gt;<span class=\"built_in\">GetGameplayAttributeValueChangeDelegate</span>(</span><br><span class=\"line\">\t\t\tAttributeSet-&gt;<span class=\"built_in\">GetArmorAttribute</span>()).<span class=\"built_in\">AddUObject</span>(<span class=\"keyword\">this</span>, &amp;AGAS_02Character::OnArmorAttributeChanged);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (AttributeSet)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tAttributeSet-&gt;OnOutOfHealth.<span class=\"built_in\">AddUObject</span>(<span class=\"keyword\">this</span>, &amp;AGAS_02Character::OnOutOfHealthChanged);</span><br><span class=\"line\">\t\tAttributeSet-&gt;OnOutOfArmor.<span class=\"built_in\">AddUObject</span>(<span class=\"keyword\">this</span>, &amp;AGAS_02Character::OnOutOfArmorChanged);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">AGAS_02Character::OnOutOfHealthChanged</span><span class=\"params\">(AActor* DamageInstigator, AActor* DamageCauser,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">                                            <span class=\"type\">const</span> FGameplayEffectSpec&amp; DamageEffectSpec, <span class=\"type\">float</span> DamageMagnitude)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">OnOutOfHealth</span>(DamageInstigator, DamageCauser, DamageEffectSpec, DamageMagnitude);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">AGAS_02Character::OnOutOfArmorChanged</span><span class=\"params\">(AActor* DamageInstigator, AActor* DamageCauser,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">\t<span class=\"type\">const</span> FGameplayEffectSpec&amp; DamageEffectSpec, <span class=\"type\">float</span> DamageMagnitude)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">OnOutOfArmor</span>(DamageInstigator, DamageCauser, DamageEffectSpec, DamageMagnitude);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">AGAS_02Character::OnOutOfHealth_Implementation</span><span class=\"params\">(AActor* DamageInstigator, AActor* DamageCauser,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">\t<span class=\"type\">const</span> FGameplayEffectSpec&amp; DamageEffectSpec, <span class=\"type\">float</span> DamageMagnitude)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">// TODO Blueprint Override Function</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">AGAS_02Character::OnOutOfArmor_Implementation</span><span class=\"params\">(AActor* DamageInstigator, AActor* DamageCauser,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">\t<span class=\"type\">const</span> FGameplayEffectSpec&amp; DamageEffectSpec, <span class=\"type\">float</span> DamageMagnitude)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">// TODO Blueprint Override Function</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n</p>\n</div>\n<h5 id=\"3-3-4-PreAttributeChange\"><a href=\"#3-3-4-PreAttributeChange\" class=\"headerlink\" title=\"3.3.4 PreAttributeChange\"></a>3.3.4 PreAttributeChange</h5><ul>\n<li><code>PreAttributeChange(const FGameplayAttribute&amp; Attribute, float&amp; NewValue)</code>是<code>AttributeSet</code>中的主要函数之一</li>\n<li>其在修改发生前响应<code>Attribute</code>的CurrentValue变化</li>\n<li>其是通过引用参数NewValue限制(Clamp)CurrentValue即将进行的修改的理想位置</li>\n<li><code>PreAttributeChange()</code>可以被<code>Attribute</code>的任何修改触发, 无论是使用<code>Attribute</code>的setter(由<code>AttributeSet.h</code>中的宏块定义(<a href=\"https://github.com/FHangH/GASDocumentation_Chinese#concepts-as-attributes\">定义Attribute</a>))还是使用<a href=\"https://github.com/FHangH/GASDocumentation_Chinese#concepts-ge\">GameplayEffect</a>.</li>\n</ul>\n<div class=\"custom-quote warning\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 8V13\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 15.99V16.01\"></path>\n</svg>\n</span>\n<p class=\"custom-quote-title\">注意</p>\n<ul>\n<li><p>在这里做的任何限制都不会永久性地修改<code>ASC</code>中的<code>Modifier</code>, 只会修改查询<code>Modifier</code>的返回值,</p>\n</li>\n<li><p>这意味着像<a href=\"https://github.com/FHangH/GASDocumentation_Chinese#concepts-ge-ec\">GameplayEffectExecutionCalculations</a>和<a href=\"https://github.com/FHangH/GASDocumentation_Chinese#concepts-ge-mmc\">ModifierMagnitudeCalculations</a>这种自所有<code>Modifier</code>重新计算CurrentValue的函数需要再次执行限制(Clamp)操作.</p>\n</li>\n<li><p>Epic对于<code>PreAttributeChange()</code>的注释说明不要将该函数用于游戏逻辑事件, 而主要在其中做限制操作. </p>\n</li>\n<li><p>对于修改<code>Attribute</code>的游戏逻辑事件的建议位置是<code>UAbilitySystemComponent::GetGameplayAttributeValueChangeDelegate(FGameplayAttribute Attribute)</code>(<a href=\"https://github.com/FHangH/GASDocumentation_Chinese#concepts-a-changes\">响应Attribute变化</a>).</p>\n</li>\n</ul>\n\n</div>\n<h5 id=\"3-3-5-PostGameplayEffectExecute\"><a href=\"#3-3-5-PostGameplayEffectExecute\" class=\"headerlink\" title=\"3.3.5 PostGameplayEffectExecute\"></a>3.3.5 PostGameplayEffectExecute</h5><ul>\n<li><code>PostGameplayEffectExecute(const FGameplayEffectModCallbackData &amp; Data)</code>仅在<code>即刻(Instant)GameplayEffect</code>对<code>Attribute</code>的BaseValue修改之后触发</li>\n<li>当<a href=\"https://github.com/FHangH/GASDocumentation_Chinese#concepts-ge\">GameplayEffect</a>对其修改时, 这就是一个处理更多<code>Attribute</code>操作的有效位置.</li>\n<li>其他只会由<code>即刻(Instant)GameplayEffect</code>修改BaseValue的<code>Attribute</code>, 像魔法值和耐力值, 也可以在这里被限制为其相应的最大值<code>Attribute</code>.</li>\n</ul>\n<div class=\"custom-quote warning\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 8V13\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 15.99V16.01\"></path>\n</svg>\n</span>\n<p class=\"custom-quote-title\">注意</p>\n<p><ul>\n<li>当PostGameplayEffectExecute()被调用时, 对<code>Attribute</code>的修改已经发生, 但是还没有被同步回客户端</li>\n<li>因此在这里限制值不会造成对客户端的二次同步, 客户端只会接收到限制后的值.</li>\n</ul>\n</p>\n</div>\n<h3 id=\"4-GameplayAbility\"><a href=\"#4-GameplayAbility\" class=\"headerlink\" title=\"4. GameplayAbility\"></a>4. GameplayAbility</h3><h4 id=\"4-1-GA概念\"><a href=\"#4-1-GA概念\" class=\"headerlink\" title=\"4.1 GA概念\"></a>4.1 GA概念</h4><p><a href=\"https://docs.unrealengine.com/en-US/API/Plugins/GameplayAbilities/Abilities/UGameplayAbility/index.html\">GameplayAbility(GA)</a>是Actor在游戏中可以触发的一切行为和技能. 多个<code>GameplayAbility</code>可以在同一时刻激活, 例如奔跑和射击. 其可由蓝图或C++完成.</p>\n<p><code>GameplayAbility</code>示例:</p>\n<ul>\n<li>跳跃</li>\n<li>奔跑</li>\n<li>射击</li>\n<li>每X秒被动地阻挡一次攻击</li>\n<li>使用药剂</li>\n<li>开门</li>\n<li>收集资源</li>\n<li>建造</li>\n</ul>\n<p>不应该使用<code>GameplayAbility</code>的场景:</p>\n<ul>\n<li>基础移动输入</li>\n<li>一些与UI的交互 - 不要使用<code>GameplayAbility</code>从商店中购买物品</li>\n</ul>\n<ol>\n<li><code>GameplayAbility</code>运行在所属(Owning)客户端还是服务端取决于<a href=\"https://github.com/FHangH/GASDocumentation_Chinese#concepts-ga-net\">网络执行策略(Net Execution Policy)</a>而不是Simulated Proxy. </li>\n<li><code>网络执行策略(Net Execution Policy)</code>决定某个<code>GameplayAbility</code>是否是客户端可<a href=\"https://github.com/FHangH/GASDocumentation_Chinese#concepts-p\">预测</a>的, 其对于<a href=\"https://github.com/FHangH/GASDocumentation_Chinese#concepts-ga-commit\">可选的Cost和<code>Cooldown GameplayEffect</code></a>包含有默认行为.</li>\n<li><code>GameplayAbility</code>使用<a href=\"https://github.com/FHangH/GASDocumentation_Chinese#concepts-at\">AbilityTask</a>用于随时间推移而发生的行为, 例如等待某个事件, 等待某个Attribute改变, 等待玩家选择一个目标或者使用<code>Root Motion Source</code>移动某个<code>Character</code>. </li>\n<li><strong>Simulated Client不会运行<code>GameplayAbility</code>,</strong> 而是当服务端执行<code>Ability</code>时, 任何需要在Simulated Proxy上展现的视觉效果(像动画蒙太奇)将会被同步(Replicate)或者通过<code>AbilityTask</code>进行RPC或者对于像声音和粒子这样的装饰效果使用<a href=\"https://github.com/FHangH/GASDocumentation_Chinese#concepts-gc\">GameplayCue</a>.</li>\n</ol>\n<div class=\"custom-quote warning\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 8V13\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 15.99V16.01\"></path>\n</svg>\n</span>\n<p class=\"custom-quote-title\">注意</p>\n<p>所有的<code>GameplayAbility</code>都会有它们各自由你的游戏逻辑重写的<code>ActivateAbility()</code>函数, 附加的逻辑可以添加到<code>EndAbility()</code>, 其会在<code>GameplayAbility</code>完成或取消时执行.</p>\n\n</div>\n<p>一个简单的<code>GameplayAbility</code>流程图: </p>\n<p><img src=\"https://raw.githubusercontent.com/BillEliot/GASDocumentation_Chinese/main/Images/abilityflowchartsimple.png\" alt=\"Simple GameplayAbility Flowchart\"></p>\n<p>一个更复杂<code>GameplayAbility</code>流程图: </p>\n<p><img src=\"https://raw.githubusercontent.com/BillEliot/GASDocumentation_Chinese/main/Images/abilityflowchartcomplex.png\" alt=\"Complex GameplayAbility Flowchart\"></p>\n<h4 id=\"4-2-GA创建\"><a href=\"#4-2-GA创建\" class=\"headerlink\" title=\"4.2 GA创建\"></a>4.2 GA创建</h4><ul>\n<li>一般情况下，存在输入通过ASC绑定GA的情况；</li>\n<li>所以除了建立一个输入枚举之外，最好是自定义一个新的GameplayAbility</li>\n</ul>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">pragma</span> once</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;CoreMinimal.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;Abilities/GameplayAbility.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;GAS_02/Utils/GameAbilityInput.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;GGAbility.generated.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//\tThe important functions:</span></span><br><span class=\"line\"><span class=\"comment\">//\t</span></span><br><span class=\"line\"><span class=\"comment\">//\t\tCanActivateAbility()\t- const 函数来查看能力是否可激活。可通过UI等调用</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">//\t\tTryActivateAbility()\t- 尝试激活该技能。调用 CanActivateAbility（）。输入事件可以直接调用它。</span></span><br><span class=\"line\"><span class=\"comment\">//\t\t\t\t\t\t\t\t- 还处理每次执行实例化逻辑和复制/预测调用。</span></span><br><span class=\"line\"><span class=\"comment\">//\t\t</span></span><br><span class=\"line\"><span class=\"comment\">//\t\tCallActivateAbility()\t- 受保护的非虚拟功能。做一些样板“预激活”的东西，然后调用 ActivateAbility（）</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">//\t\tActivateAbility()\t\t- 能力*做什么*。这是子类想要覆盖的内容。</span></span><br><span class=\"line\"><span class=\"comment\">//\t</span></span><br><span class=\"line\"><span class=\"comment\">//\t\tCommitAbility()\t\t\t- 提交资源/冷却时间等。ActivateAbility（） 必须调用这个！</span></span><br><span class=\"line\"><span class=\"comment\">//\t\t</span></span><br><span class=\"line\"><span class=\"comment\">//\t\tCancelAbility()\t\t\t- 中断技能（来自外部来源）。</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">//\t\tEndAbility()\t\t\t- 能力已经结束。这是为了通过结束自身的能力来调用。</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">UCLASS</span>()</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">GAS_02_API</span> UGGAbility : <span class=\"keyword\">public</span> UGameplayAbility</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">GENERATED_BODY</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(BlueprintReadOnly, EditAnywhere, Category=<span class=\"string\">&quot;AFH|GAS|Ability&quot;</span>)</span><br><span class=\"line\">\tEAbilityInputID AbilityInputID &#123; EAbilityInputID::None &#125;;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"4-3-绑定输入\"><a href=\"#4-3-绑定输入\" class=\"headerlink\" title=\"4.3 绑定输入\"></a>4.3 绑定输入</h4><p>绑定流程：(增强输入)</p>\n<ol>\n<li>定义IA</li>\n<li>添加IM</li>\n<li>客户端输入初始化，绑定输入回调函数</li>\n<li>输入回调函数，通过ASC绑定输入ID</li>\n</ol>\n<h4 id=\"4-4-绑定时不激活GA\"><a href=\"#4-4-绑定时不激活GA\" class=\"headerlink\" title=\"4.4 绑定时不激活GA\"></a>4.4 绑定时不激活GA</h4><p>可以在<code>UGameplayAbility</code>子类中添加一个新的布尔变量, <code>bActivateOnInput</code>, 其默认值为<code>true</code>并重写<code>UAbilitySystemComponent::AbilityLocalInputPressed()</code></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">UGSAbilitySystemComponent::AbilityLocalInputPressed</span><span class=\"params\">(int32 InputID)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">// Consume the input if this InputID is overloaded with GenericConfirm/Cancel and the GenericConfim/Cancel callback is bound</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (<span class=\"built_in\">IsGenericConfirmInputBound</span>(InputID))</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">LocalInputConfirm</span>();</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (<span class=\"built_in\">IsGenericCancelInputBound</span>(InputID))</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">LocalInputCancel</span>();</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// ---------------------------------------------------------</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">ABILITYLIST_SCOPE_LOCK</span>();</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (FGameplayAbilitySpec&amp; Spec : ActivatableAbilities.Items)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (Spec.InputID == InputID)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (Spec.Ability)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\tSpec.InputPressed = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (Spec.<span class=\"built_in\">IsActive</span>())</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (Spec.Ability-&gt;bReplicateInputDirectly &amp;&amp; <span class=\"built_in\">IsOwnerActorAuthoritative</span>() == <span class=\"literal\">false</span>)</span><br><span class=\"line\">\t\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"built_in\">ServerSetInputPressed</span>(Spec.Handle);</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\t<span class=\"built_in\">AbilitySpecInputPressed</span>(Spec);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\t<span class=\"comment\">// Invoke the InputPressed event. This is not replicated here. If someone is listening, they may replicate the InputPressed event to the server.</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"built_in\">InvokeReplicatedEvent</span>(EAbilityGenericReplicatedEvent::InputPressed, Spec.Handle, Spec.ActivationInfo.<span class=\"built_in\">GetActivationPredictionKey</span>());</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\tUGSGameplayAbility* GA = <span class=\"built_in\">Cast</span>&lt;UGSGameplayAbility&gt;(Spec.Ability);</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (GA &amp;&amp; GA-&gt;bActivateOnInput)</span><br><span class=\"line\">\t\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"comment\">// Ability is not active, so try to activate it</span></span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"built_in\">TryActivateAbility</span>(Spec.Handle);</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"4-5-授予GA\"><a href=\"#4-5-授予GA\" class=\"headerlink\" title=\"4.5 授予GA\"></a>4.5 授予GA</h4><ul>\n<li>向<code>ASC</code>授予<code>GameplayAbility</code>会将其添加到<code>ASC</code>的<code>ActivatableAbilities</code>列表, 从而允许其在满足<a href=\"https://github.com/FHangH/GASDocumentation_Chinese#concepts-ga-tags\"><code>GameplayTag</code>需求</a>时激活该<code>GameplayAbility</code>.</li>\n<li>我们在服务端授予<code>GameplayAbility</code>, 之后其会自动同步<a href=\"https://github.com/FHangH/GASDocumentation_Chinese#concepts-ga-spec\">GameplayAbilitySpec</a>到所属(Owning)客户端, 其他客户端&#x2F;Simulated proxy不会接受到<code>GameplayAbilitySpec</code>.</li>\n<li>游戏开始时将<code>TArray&lt;TSubclassOf&lt;UGDGameplayAbility&gt;&gt;</code>保存在它读取和授予的<code>Character</code>类中.</li>\n</ul>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">AGDCharacterBase::AddCharacterAbilities</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">// Grant abilities, but only on the server\t</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (Role != ROLE_Authority || !AbilitySystemComponent.<span class=\"built_in\">IsValid</span>() || AbilitySystemComponent-&gt;CharacterAbilitiesGiven)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (TSubclassOf&lt;UGDGameplayAbility&gt;&amp; StartupAbility : CharacterAbilities)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tAbilitySystemComponent-&gt;<span class=\"built_in\">GiveAbility</span>(</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">FGameplayAbilitySpec</span>(</span><br><span class=\"line\">                StartupAbility, </span><br><span class=\"line\">                <span class=\"built_in\">GetAbilityLevel</span>(StartupAbility.<span class=\"built_in\">GetDefaultObject</span>()-&gt;AbilityID), </span><br><span class=\"line\">                <span class=\"built_in\">static_cast</span>&lt;int32&gt;(StartupAbility.<span class=\"built_in\">GetDefaultObject</span>()-&gt;AbilityInputID), </span><br><span class=\"line\">                <span class=\"keyword\">this</span>));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tAbilitySystemComponent-&gt;CharacterAbilitiesGiven = <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"4-6-被动GA\"><a href=\"#4-6-被动GA\" class=\"headerlink\" title=\"4.6 被动GA\"></a>4.6 被动GA</h4><ul>\n<li>实现自动激活和持续运行的被动<code>GameplayAbility</code>, 需要重写<code>UGameplayAbility::OnAvatarSet()</code>, 该函数在授予<code>GameplayAbility</code>并设置<code>AvatarActor</code>且调用<code>TryActivateAbility()</code>时自动调用.</li>\n<li>添加一个<code>布尔值</code>到你的自定义<code>UGameplayAbility</code>类来表明其在授予时是否应该被激活</li>\n<li>被动<code>GameplayAbility</code>一般有一个<code>仅服务器(Server Only)</code>的<a href=\"https://github.com/FHangH/GASDocumentation_Chinese#concepts-ga-net\">网络执行策略(Net Execution Policy)</a>.</li>\n</ul>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">UGDGameplayAbility::OnAvatarSet</span><span class=\"params\">(<span class=\"type\">const</span> FGameplayAbilityActorInfo * ActorInfo, <span class=\"type\">const</span> FGameplayAbilitySpec &amp; Spec)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tSuper::<span class=\"built_in\">OnAvatarSet</span>(ActorInfo, Spec);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (ActivateAbilityOnGranted)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">bool</span> ActivatedAbility = ActorInfo-&gt;AbilitySystemComponent-&gt;<span class=\"built_in\">TryActivateAbility</span>(Spec.Handle, <span class=\"literal\">false</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<div class=\"custom-quote warning\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 8V13\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 15.99V16.01\"></path>\n</svg>\n</span>\n<p class=\"custom-quote-title\">注意</p>\n<p><p>Epic描述该函数为初始化被动Ability的正确位置和应该做一些类似<code>BeginPlay</code>的事情.</p>\n</p>\n</div>\n<h4 id=\"4-7-取消GA\"><a href=\"#4-7-取消GA\" class=\"headerlink\" title=\"4.7 取消GA\"></a>4.7 取消GA</h4><ul>\n<li>从内部取消<code>GameplayAbility</code>, 可以调用<code>CancelAbility()</code>, 其会调用<code>EndAbility()</code>并设置它的<code>WasCancelled</code>参数为<code>true</code>.</li>\n<li>从外部取消<code>GameplayAbility</code>, <code>ASC</code>提供了一些函数:</li>\n</ul>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/** Cancels the specified ability CDO. */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">CancelAbility</span><span class=\"params\">(UGameplayAbility* Ability)</span></span>;\t</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/** Cancels the ability indicated by passed in spec handle. If handle is not found among reactivated abilities nothing happens. */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">CancelAbilityHandle</span><span class=\"params\">(<span class=\"type\">const</span> FGameplayAbilitySpecHandle&amp; AbilityHandle)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/** Cancel all abilities with the specified tags. Will not cancel the Ignore instance */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">CancelAbilities</span><span class=\"params\">(<span class=\"type\">const</span> FGameplayTagContainer* WithTags=<span class=\"literal\">nullptr</span>, <span class=\"type\">const</span> FGameplayTagContainer* WithoutTags=<span class=\"literal\">nullptr</span>, UGameplayAbility* Ignore=<span class=\"literal\">nullptr</span>)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/** Cancels all abilities regardless of tags. Will not cancel the ignore instance */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">CancelAllAbilities</span><span class=\"params\">(UGameplayAbility* Ignore=<span class=\"literal\">nullptr</span>)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/** Cancels all abilities and kills any remaining instanced abilities */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">virtual</span> <span class=\"type\">void</span> <span class=\"title\">DestroyActiveState</span><span class=\"params\">()</span></span>;</span><br></pre></td></tr></table></figure>\n\n\n\n<div class=\"custom-quote warning\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 8V13\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 15.99V16.01\"></path>\n</svg>\n</span>\n<p class=\"custom-quote-title\">注意</p>\n<ul>\n<li>如果存在一个<code>非实例(Non-Instanced)GameplayAbility</code>时, <code>CancelAllAbilities</code>似乎不能正常运行</li>\n<li>它似乎会命中这个<code>非实例(Non-Instanced)GameplayAbility</code>并放弃继续处理. </li>\n<li><code>CancelAbility</code>可以更好地处理<code>非实例(Non-Instanced)GameplayAbility</code></li>\n</ul>\n\n</div>\n<h4 id=\"4-8-获取激活的GA\"><a href=\"#4-8-获取激活的GA\" class=\"headerlink\" title=\"4.8 获取激活的GA\"></a>4.8 获取激活的GA</h4><ol>\n<li><code>GetActivatableAbilities()</code><ul>\n<li>搜索<code>ASC</code>的<code>ActivatableAbility</code>列表(<code>ASC</code>拥有的已授予<code>GameplayAbility</code>)并找到一个与你正在寻找的<a href=\"https://github.com/FHangH/GASDocumentation_Chinese#concepts-ga-tags\">资源或授予的GameplayTag</a>相匹配的Ability.</li>\n<li><code>UAbilitySystemComponent::GetActivatableAbilities()</code>会返回一个用于遍历的<code>TArray&lt;FGameplayAbilitySpec&gt;</code>.</li>\n</ul>\n</li>\n<li><code>GetActivatableGameplayAbilitySpecsByAllMatchingTags()</code><ul>\n<li><code>ASC</code>还有另一个有用的函数, 它将一个<code>GameplayTagContainer</code>作为参数来协助搜索, 而无需手动遍历<code>GameplayAbilitySpec</code>列表</li>\n<li><code>bOnlyAbilitiesThatSatisfyTagRequirements</code>参数只会返回那些<code>GameplayTag</code>满足需求且可以立刻激活的<code>GameplayAbilitySpecs</code></li>\n<li>获取到了寻找的<code>FGameplayAbilitySpec</code>, 那么就可以调用它的<code>IsActive()</code>.</li>\n</ul>\n</li>\n</ol>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 返回所有可以激活的GA</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (ASComponent)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">const</span> <span class=\"keyword\">auto</span>&amp; ActivatedAbilities = ASComponent-&gt;<span class=\"built_in\">GetActivatableAbilities</span>();</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">const</span> <span class=\"keyword\">auto</span>&amp; AbilitySpec : ActivatedAbilities)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">       </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 返回所有依据GameplayTag匹配的，可以任何形式激活的GA</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (ASComponent)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">const</span> FGameplayTagContainer GameplayTagContainer;</span><br><span class=\"line\">    TArray&lt;FGameplayAbilitySpec*&gt; MatchingGameplayAbilities; </span><br><span class=\"line\">    ASComponent-&gt;<span class=\"built_in\">GetActivatableGameplayAbilitySpecsByAllMatchingTags</span>(GameplayTagContainer, MatchingGameplayAbilities);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">const</span> <span class=\"keyword\">auto</span>&amp; AbilitySpec :MatchingGameplayAbilities)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">       <span class=\"keyword\">if</span> (AbilitySpec-&gt;<span class=\"built_in\">IsActive</span>())</span><br><span class=\"line\">       &#123;</span><br><span class=\"line\">          </span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"4-9-实例化策略\"><a href=\"#4-9-实例化策略\" class=\"headerlink\" title=\"4.9 实例化策略\"></a>4.9 实例化策略</h4><p><code>GameplayAbility</code>的实例化策略决定了当<code>GameplayAbility</code>激活时是否和如何实例化.</p>\n<table>\n<thead>\n<tr>\n<th>实例化策略</th>\n<th>描述</th>\n<th>何时使用的例子</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>按Actor实例化(Instanced Per Actor)</td>\n<td>每个<code>ASC</code>只能有一个在激活之间复用的<code>GameplayAbility</code>实例.</td>\n<td>这可能是你使用最频繁的实例化策略. 你可以对任一<code>Ability</code>使用并在激活之间提供持久化. 设计者可以在激活之间手动重设任意变量.</td>\n</tr>\n<tr>\n<td>按操作实例化(Instanced Per Execution)</td>\n<td>每有一个<code>GameplayAbility</code>激活, 就有一个新的<code>GameplayAbility</code>实例创建.</td>\n<td>这些<code>GameplayAbility</code>的好处是每次激活时变量都会重置, 其性能要比<code>Instanced Per Actor</code>差, 因为每次激活时都会生成新的<code>GameplayAbility</code>. 样例项目没有使用该方式.</td>\n</tr>\n<tr>\n<td>非实例化(Non-Instanced)</td>\n<td><code>GameplayAbility</code>操作其<code>ClassDefaultObject</code>, 没有实例创建.</td>\n<td>它是三种方式中性能最好的, 但是使用它是最受限制的. <code>非实例化(Non-Instanced)GameplayAbility</code>不能存储状态, 这意味着没有动态变量和不能绑定到<code>AbilityTask</code>委托. 使用它的最佳场景就是需要频繁使用的简单Ability, 像MOBA或RTS游戏中小兵的基础攻击. 样例项目中的跳跃<code>GameplayAbility</code>就是<code>非实例化(Non-Instanced)</code>的.</td>\n</tr>\n</tbody></table>\n<h4 id=\"4-10-网络执行策略-Net-Execution-Policy\"><a href=\"#4-10-网络执行策略-Net-Execution-Policy\" class=\"headerlink\" title=\"4.10 网络执行策略(Net Execution Policy)\"></a>4.10 网络执行策略(Net Execution Policy)</h4><p><code>GameplayAbility</code>的<code>网络执行策略(Net Execution Policy)</code>决定了谁该以什么顺序运行该<code>GameplayAbility</code>.</p>\n<table>\n<thead>\n<tr>\n<th>网络执行策略(Net Execution Policy)</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Local Only</td>\n<td><code>GameplayAbility</code>只运行在所属(Owning)客户端. 这对那些只需做本地视觉变化的Ability很有用. 单人游戏应该使用<code>Server Only</code>.</td>\n</tr>\n<tr>\n<td>Local Predicted</td>\n<td><code>Local Predicted GameplayAbility</code>首先在所属(Owning)客户端激活, 之后在服务端激活. 服务端版本会纠正客户端预测的所有不正确的地方. 参见Prediction.</td>\n</tr>\n<tr>\n<td>Server Only</td>\n<td><code>GameplayAbility</code>只运行在服务端. 被动<code>GameplayAbility</code>一般是<code>Server Only</code>. 单人游戏应该使用该项.</td>\n</tr>\n<tr>\n<td>Server Initiated</td>\n<td><code>Server Initiated GameplayAbility</code>首先在服务端激活, 之后在所属(Owning)客户端激活. 我个人使用的不多(如果有的话).</td>\n</tr>\n</tbody></table>\n<h4 id=\"4-11-GA标签\"><a href=\"#4-11-GA标签\" class=\"headerlink\" title=\"4.11 GA标签\"></a>4.11 GA标签</h4><p><code>GameplayAbility</code>自带有内建逻辑的<code>GameplayTagContainer</code>. 这些<code>GameplayTag</code>都不进行同步.</p>\n<table>\n<thead>\n<tr>\n<th>GameplayTagContainer</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Ability Tags</td>\n<td><code>GameplayAbility</code>拥有的<code>GameplayTag</code>, 这只是用来描述<code>GameplayAbility</code>的<code>GameplayTag</code>.</td>\n</tr>\n<tr>\n<td>Cancel Abilities with Tag</td>\n<td>当该<code>GameplayAbility</code>激活时, 其他<code>Ability Tags</code>中拥有这些<code>GameplayTag</code>的<code>GameplayAbility</code>将会被取消.</td>\n</tr>\n<tr>\n<td>Block Abilities with Tag</td>\n<td>当该<code>GameplayAbility</code>激活时, 其他<code>Ability Tags</code>中拥有这些<code>GameplayTag</code>的<code>GameplayAbility</code>将会阻塞激活.</td>\n</tr>\n<tr>\n<td>Activation Owned Tags</td>\n<td>当该<code>GameplayAbility</code>激活时, 这些<code>GameplayTag</code>会交给该<code>GameplayAbility</code>的拥有者.</td>\n</tr>\n<tr>\n<td>Activation Required Tags</td>\n<td>该<code>GameplayAbility</code>只有在其拥有者拥有所有这些<code>GameplayTag</code>时才会激活.</td>\n</tr>\n<tr>\n<td>Activation Blocked Tags</td>\n<td>该<code>GameplayAbility</code>在其拥有者拥有任意这些标签时不能被激活.</td>\n</tr>\n<tr>\n<td>Source Required Tags</td>\n<td>该<code>GameplayAbility</code>只有在<code>Source</code>拥有所有这些<code>GameplayTag</code>时才会激活. <code>Source GameplayTag</code>只有在该<code>GameplayAbility</code>由Event触发时设置.</td>\n</tr>\n<tr>\n<td>Source Blocked Tags</td>\n<td>该<code>GameplayAbility</code>在<code>Source</code>拥有任意这些标签时不能被激活. <code>Source GameplayTag</code>只有在该<code>GameplayAbility</code>由Event触发时设置.</td>\n</tr>\n<tr>\n<td>Target Required Tags</td>\n<td>该<code>GameplayAbility</code>只有在<code>Target</code>拥有所有这些<code>GameplayTag</code>时才会激活. <code>Target GameplayTag</code>只有在该<code>GameplayAbility</code>由Event触发时设置.</td>\n</tr>\n<tr>\n<td>Target Blocked Tags</td>\n<td>该<code>GameplayAbility</code>在<code>Target</code>拥有任意这些标签时不能被激活. <code>Target GameplayTag</code>只有在该<code>GameplayAbility</code>由Event触发时设置.</td>\n</tr>\n</tbody></table>\n<h4 id=\"4-12-GASpec\"><a href=\"#4-12-GASpec\" class=\"headerlink\" title=\"4.12 GASpec\"></a>4.12 GASpec</h4><ul>\n<li><code>GameplayAbilitySpec</code>会在<code>GameplayAbility</code>授予后存在于<code>ASC</code>中并定义可激活<code>GameplayAbility</code> - <code>GameplayAbility</code>类, 等级, 输入绑定和必须与<code>GameplayAbility</code>类分开保存的运行时状态.</li>\n<li>当<code>GameplayAbility</code>在服务端授予时, 服务端会同步<code>GameplayAbilitySpec</code>到所属(Owning)客户端, 因此可以激活它.</li>\n<li>激活<code>GameplayAbilitySpec</code>会根据它的<code>实例化策略(Instancing Policy)</code>创建一个<code>GameplayAbility</code>实例(<code>Non-Instanced GameplayAbility</code>除外).</li>\n</ul>\n<h4 id=\"4-13-GA回调\"><a href=\"#4-13-GA回调\" class=\"headerlink\" title=\"4.13 GA回调\"></a>4.13 GA回调</h4><p>在ASC中，绑定GA的相关回调</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/** 每当激活（启动）功能时，通用回调 */</span></span><br><span class=\"line\">FGenericAbilityDelegate AbilityActivatedCallbacks;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/** 每当技能结束时回调 */</span></span><br><span class=\"line\">FAbilityEnded AbilityEndedCallbacks;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/** 每当能力结束时回调，并提供额外信息 */</span></span><br><span class=\"line\">FGameplayAbilityEndedDelegate OnAbilityEnded;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/** 每当提交技能时，都会进行通用回调（应用消耗/冷却） */</span></span><br><span class=\"line\">FGenericAbilityDelegate AbilityCommittedCallbacks;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/** 当功能执行失败时，调用失败原因 */</span></span><br><span class=\"line\">FAbilityFailedDelegate AbilityFailedCallbacks;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/** 当能力规范的内部结构发生更改时调用 */</span></span><br><span class=\"line\">FAbilitySpecDirtied AbilitySpecDirtiedCallbacks;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"5-GameplayEffect\"><a href=\"#5-GameplayEffect\" class=\"headerlink\" title=\"5. GameplayEffect\"></a>5. GameplayEffect</h3><h4 id=\"5-1-GE概念\"><a href=\"#5-1-GE概念\" class=\"headerlink\" title=\"5.1 GE概念\"></a>5.1 GE概念</h4><ul>\n<li><a href=\"https://docs.unrealengine.com/en-US/API/Plugins/GameplayAbilities/UGameplayEffect/index.html\">GameplayEffect(GE)</a>是Ability修改其自身和其他<a href=\"https://github.com/FHangH/GASDocumentation_Chinese?tab=readme-ov-file#concepts-a\">Attribute</a>和<a href=\"https://github.com/FHangH/GASDocumentation_Chinese?tab=readme-ov-file#concepts-gt\">GameplayTag</a>的容器</li>\n<li>其可以立即修改<code>Attribute</code>(像伤害或治疗)或应用长期的状态buff&#x2F;debuff(像移动速度加速或眩晕)</li>\n<li>UGameplayEffect只是一个定义单一游戏效果的数据类, 不应该在其中添加额外的逻辑</li>\n<li><code>GameplayEffect</code>通过<a href=\"https://github.com/FHangH/GASDocumentation_Chinese?tab=readme-ov-file#concepts-ge-mods\">Modifier</a>和<a href=\"https://github.com/FHangH/GASDocumentation_Chinese?tab=readme-ov-file#concepts-ge-ec\">Execution(GameplayEffectExecutionCalculation)</a>修改<code>Attribute</code></li>\n<li><code>GameplayEffect</code>有三种持续类型: <code>即刻(Instant)</code>, <code>持续(Duration)</code>和<code>无限(Infinite)</code>.</li>\n</ul>\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">GE额外功能</p>\n<p><ul>\n<li><code>GameplayEffect</code>可以添加&#x2F;执行<a href=\"https://github.com/FHangH/GASDocumentation_Chinese?tab=readme-ov-file#concepts-gc\">GameplayCue</a></li>\n<li><code>即刻(Instant)GameplayEffect</code>可以调用<code>GameplayCue GameplayTag</code>的Execute</li>\n<li>而<code>持续(Duration)</code>或<code>无限(Infinite)</code>可以调用<code>GameplayCue GameplayTag</code>的Add和Remove</li>\n</ul>\n</p>\n</div>\n<p>GE的修改类型：</p>\n<table>\n<thead>\n<tr>\n<th>类型</th>\n<th>GameplayCue事件</th>\n<th>何时使用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>即刻(Instant)</td>\n<td>Execute</td>\n<td>对<code>Attribute</code>中BaseValue立即进行的永久性修改. 其不会应用<code>GameplayTag</code>, 哪怕是一帧.</td>\n</tr>\n<tr>\n<td>持续(Duration)</td>\n<td>Add &amp; Remove</td>\n<td>对<code>Attribute</code>中CurrentValue的临时修改和当<code>GameplayEffect</code>过期或手动移除时, 应用将要被移除的<code>GameplayTag</code>. 持续时间是在UGameplayEffect类&#x2F;蓝图中明确的.</td>\n</tr>\n<tr>\n<td>无限(Infinite)</td>\n<td>Add &amp; Remove</td>\n<td>对<code>Attribute</code>中CurrentValue的临时修改和当<code>GameplayEffect</code>移除时, 应用将要被移除的<code>GameplayTag</code>. 该类型自身永不过期且必须由某个Ability或<code>ASC</code>手动移除.</td>\n</tr>\n</tbody></table>\n<p>GE的修改方式：</p>\n<ul>\n<li><code>持续(Duration)</code>和<code>无限(Infinite)GameplayEffect</code>可以选择应用周期性的Effect</li>\n<li>其每过X秒(由周期定义)就应用一次<code>Modifier</code>和Execution</li>\n<li>当周期性的Effect修改<code>Attribute</code>的BaseValue和执行<code>GameplayCue</code>时就被视为<code>即刻(Instant)GameplayEffect</code></li>\n<li>这种类型的Effect对于像随时间推移的持续伤害(damage over time, DOT)很有用</li>\n<li>周期性的Effect不能被<a href=\"https://github.com/FHangH/GASDocumentation_Chinese?tab=readme-ov-file#concepts-p\">预测</a></li>\n</ul>\n<p>持续GE的条件：</p>\n<ul>\n<li>如果<code>持续(Duration)</code>和<code>无限(Infinite)GameplayEffect</code>的Ongoing Tag Requirements未满足&#x2F;满足的话(<a href=\"https://github.com/FHangH/GASDocumentation_Chinese?tab=readme-ov-file#concepts-ge-tags\">Gameplay Effect Tags</a>)</li>\n<li>那么它们在应用后就可以被暂时的关闭和打开, 关闭<code>GameplayEffect</code>会移除其<code>Modifier</code>和已应用<code>GameplayTag</code>效果</li>\n<li>但是不会移除该<code>GameplayEffect</code>, 重新打开<code>GameplayEffect</code>会重新应用其<code>Modifier</code>和<code>GameplayTag</code></li>\n</ul>\n<p>重新计算持续GE：</p>\n<ul>\n<li>重新计算某个<code>持续(Duration)</code>或<code>无限(Infinite)GameplayEffect</code>的<code>Modifier</code>(假设有一个使用非<code>Attribute</code>数据的<code>MMC</code>)</li>\n<li>可以使用和<code>UAbilitySystemComponent::ActiveGameplayEffect.GetActiveGameplayEffect(ActiveHandle).Spec.GetLevel()</code>相同的Level</li>\n<li>调用<code>UAbilitySystemComponent::ActiveGameplayEffect.SetActiveGameplayEffectLevel(FActiveGameplayEffectHandle ActiveHandle, int32 NewLevel)</code></li>\n<li>当<code>Backing Attribute</code>更新时, 基于<code>Backing Attribute</code>的<code>Modifier</code>会自动更新</li>\n</ul>\n<div class=\"custom-quote warning\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 8V13\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 15.99V16.01\"></path>\n</svg>\n</span>\n<p class=\"custom-quote-title\">注意</p>\n<p>SetActiveGameplayEffectLevel()更新<code>Modifier</code>的关键函数是:</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">MarkItemDirty</span>(Effect);</span><br><span class=\"line\">Effect.Spec.<span class=\"built_in\">CalculateModifierMagnitudes</span>();</span><br><span class=\"line\"><span class=\"comment\">// Private function otherwise we&#x27;d call these three functions without needing to set the level to what it already is</span></span><br><span class=\"line\"><span class=\"built_in\">UpdateAllAggregatorModMagnitudes</span>(Effect);</span><br></pre></td></tr></table></figure>\n\n\n\n<ul>\n<li><code>GameplayEffect</code>一般是不实例化的</li>\n<li>当Ability或<code>ASC</code>想要应用<code>GameplayEffect</code>时, 其会从<code>GameplayEffect</code>的<code>ClassDefaultObject</code>创建一个<code>GameplayEffectSpec</code></li>\n<li>之后成功应用的<code>GameplayEffectSpec</code>会被添加到一个名为<code>FActiveGameplayEffect</code>的新结构体</li>\n<li>其是<code>ASC</code>在名为<code>ActiveGameplayEffect</code>的特殊结构体容器中追踪的内容</li>\n</ul>\n\n</div>\n<h4 id=\"5-2-应用GE\"><a href=\"#5-2-应用GE\" class=\"headerlink\" title=\"5.2 应用GE\"></a>5.2 应用GE</h4><h5 id=\"5-2-1-GE的使用流程\"><a href=\"#5-2-1-GE的使用流程\" class=\"headerlink\" title=\"5.2.1 GE的使用流程\"></a>5.2.1 GE的使用流程</h5><ol>\n<li><code>OwnerActor</code>的<code>ASC</code>发起<code>GA</code> -&gt; <code>GA</code>获取应用<code>Target</code> -&gt; <code>Target</code>应用<code>GE</code></li>\n<li><code>OwnerActor</code>的<code>ASC</code>发起<code>GA</code> -&gt; <code>GA</code>生成某个<code>Actor</code>，生成<code>GESpec</code> -&gt; <code>Actor</code>携带<code>GESpec</code>，交互<code>Target</code> -&gt; <code>Target</code>应用<code>GE</code></li>\n</ol>\n<h5 id=\"5-2-2-GE的执行\"><a href=\"#5-2-2-GE的执行\" class=\"headerlink\" title=\"5.2.2 GE的执行\"></a>5.2.2 GE的执行</h5><p>GE的执行通常都是ASC调用：</p>\n<ul>\n<li><code>ApplyGameplayEffectSpecToTarget()</code>：将先前创建的游戏效果规范应用于目标</li>\n<li><code>ApplyGameplayEffectSpecToSelf()</code>：将之前创建的游戏效果规范应用于此组件</li>\n</ul>\n<h5 id=\"5-2-3-GE绑定回调\"><a href=\"#5-2-3-GE绑定回调\" class=\"headerlink\" title=\"5.2.3 GE绑定回调\"></a>5.2.3 GE绑定回调</h5><ol>\n<li>添加GE触发回调：<ul>\n<li>一般用于绑定：<code>持续(Duration)</code>或<code>无限(Infinite)GameplayEffect</code>的委托来监听其应用到<code>ASC</code></li>\n<li>当<code>持续(Duration)</code>或<code>无限(Infinite)GameplayEffect</code>（可激活）被添加到<code>ASC</code>触发回调</li>\n</ul>\n</li>\n</ol>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/** 每当添加基于 duraton 的 GE 时，都会在客户端和服务器上调用（例如，即时 GE 不会触发此操作） */</span></span><br><span class=\"line\">FOnGameplayEffectAppliedDelegate OnActiveGameplayEffectAddedDelegateToSelf;</span><br></pre></td></tr></table></figure>\n\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">使用方式</p>\n<p><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">AbilitySystemComponent-&gt;</span><br><span class=\"line\">    OnActiveGameplayEffectAddedDelegateToSelf.<span class=\"built_in\">AddUObject</span>(</span><br><span class=\"line\">    \t<span class=\"keyword\">this</span>, &amp;APACharacterBase::OnActiveGameplayEffectAddedCallback);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">virtual</span> <span class=\"type\">void</span> <span class=\"title\">OnActiveGameplayEffectAddedCallback</span><span class=\"params\">(</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">    UAbilitySystemComponent* Target, <span class=\"type\">const</span> FGameplayEffectSpec&amp; SpecApplied, FActiveGameplayEffectHandle ActiveHandle)</span></span>;</span><br></pre></td></tr></table></figure>\n\n</p>\n</div>\n<ol start=\"2\">\n<li>GE被触发后回调：<ul>\n<li>包含所有类型的GE被应用</li>\n</ul>\n</li>\n</ol>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/** 每当将 GE 应用于自身时，都会在服务器上调用。这包括即时和基于持续时间的 GE。 */</span></span><br><span class=\"line\">FOnGameplayEffectAppliedDelegate OnGameplayEffectAppliedDelegateToSelf;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/** 每当 GE 应用于其他人时，都会在服务器上调用。这包括即时和基于持续时间的 GE。 */</span></span><br><span class=\"line\">FOnGameplayEffectAppliedDelegate OnGameplayEffectAppliedDelegateToTarget;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/** 每当定期 GE 自行执行时，都会在服务器上调用 */</span></span><br><span class=\"line\">FOnGameplayEffectAppliedDelegate OnPeriodicGameplayEffectExecuteDelegateOnSelf;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/** 每当定期 GE 在目标上执行时，都会在服务器上调用 */</span></span><br><span class=\"line\">FOnGameplayEffectAppliedDelegate OnPeriodicGameplayEffectExecuteDelegateOnTarget;</span><br></pre></td></tr></table></figure>\n\n\n\n<ol start=\"3\">\n<li>持续性GE的持续时间发生变化<ul>\n<li>待重载的虚函数方法</li>\n</ul>\n</li>\n</ol>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/** 当游戏效果的持续时间发生变化时调用 */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">virtual</span> <span class=\"type\">void</span> <span class=\"title\">OnGameplayEffectDurationChange</span><span class=\"params\">(<span class=\"keyword\">struct</span> FActiveGameplayEffect&amp; ActiveEffect)</span></span>;</span><br></pre></td></tr></table></figure>\n\n\n\n<div class=\"custom-quote warning\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 8V13\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 15.99V16.01\"></path>\n</svg>\n</span>\n<p class=\"custom-quote-title\">注意</p>\n<ul>\n<li>服务端总是会调用该函数而不管同步模式是什么</li>\n<li><code>Autonomous Proxy</code>只会在<code>Full</code>和<code>Mixed</code>同步模式下对于同步的<code>GameplayEffect</code>调用该函数</li>\n<li><code>Simulated Proxy</code>只会在<code>Full</code>同步模式下调用该函数</li>\n</ul>\n\n</div>\n<h4 id=\"5-3-移除GE\"><a href=\"#5-3-移除GE\" class=\"headerlink\" title=\"5.3 移除GE\"></a>5.3 移除GE</h4><ul>\n<li><code>GameplayEffect</code>可以被<a href=\"https://github.com/FHangH/GASDocumentation_Chinese?tab=readme-ov-file#concepts-ga\">GameplayAbility</a>和<code>ASC</code>中的多个函数移除</li>\n<li>其通常是<code>RemoveActiveGameplayEffect</code>的形式</li>\n<li>不同的函数本质上都是最终在目标上调用<code>FActiveGameplayEffectContainer::RemoveActiveEffects()</code>的方便函数</li>\n</ul>\n<div class=\"custom-quote warning\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 8V13\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 15.99V16.01\"></path>\n</svg>\n</span>\n<p class=\"custom-quote-title\"><code>GameplayAbility</code>之外移除<code>GameplayEffect</code></p>\n<p><p>需要获取到该目标的<code>ASC</code>并使用它的函数之一来<code>RemoveActiveGameplayEffect</code></p>\n</p>\n</div>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/** 在删除任何游戏效果时调用 */</span></span><br><span class=\"line\"><span class=\"function\">FOnGivenActiveGameplayEffectRemoved&amp; <span class=\"title\">OnAnyGameplayEffectRemovedDelegate</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">AbilitySystemComponent-&gt;</span><br><span class=\"line\">    <span class=\"built_in\">OnAnyGameplayEffectRemovedDelegate</span>().<span class=\"built_in\">AddUObject</span>(<span class=\"keyword\">this</span>, &amp;APACharacterBase::OnRemoveGameplayEffectCallback);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">virtual</span> <span class=\"type\">void</span> <span class=\"title\">OnRemoveGameplayEffectCallback</span><span class=\"params\">(<span class=\"type\">const</span> FActiveGameplayEffect&amp; EffectRemoved)</span></span>;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"5-4-Modifier\"><a href=\"#5-4-Modifier\" class=\"headerlink\" title=\"5.4 Modifier\"></a>5.4 Modifier</h4><ul>\n<li><code>Modifier</code>可以修改<code>Attribute</code>并且是唯一可以<a href=\"https://github.com/FHangH/GASDocumentation_Chinese?tab=readme-ov-file#concepts-p\">预测性</a>修改<code>Attribute</code>的方法</li>\n<li>一个<code>GameplayEffect</code>可以有0个或多个<code>Modifier</code>, 每个<code>Modifier</code>通过某个指定的操作只能修改一个<code>Attribute</code></li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>操作</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Add</td>\n<td>将<code>Modifier</code>指定的<code>Attribute</code>加上计算结果. 使用负数以实现减法操作.</td>\n</tr>\n<tr>\n<td>Multiply</td>\n<td>将<code>Modifier</code>指定的<code>Attribute</code>乘以计算结果.</td>\n</tr>\n<tr>\n<td>Divide</td>\n<td>将<code>Modifier</code>指定的<code>Attribute</code>除以计算结果.</td>\n</tr>\n<tr>\n<td>Override</td>\n<td>使用计算结果覆盖<code>Modifier</code>指定的<code>Attribute</code>.</td>\n</tr>\n</tbody></table>\n<ul>\n<li><p><code>Attribute</code>的CurrentValue是其所有<code>Modifier</code>与其BaseValue计算并总合后的结果</p>\n</li>\n<li><p>像下面这样的<code>Modifier</code>总合公式被定义在<code>GameplayEffectAggregator.cpp</code>中的<code>FAggregatorModChannel::EvaluateWithBase</code>:</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">((InlineBaseValue + Additive) * Multiplicitive) / Division</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Override<code>Modifier</code>会优先覆盖最后应用的<code>Modifier</code>得出的最终值</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">float</span> <span class=\"title\">FAggregatorModChannel::EvaluateWithBase</span><span class=\"params\">(<span class=\"type\">float</span> InlineBaseValue, <span class=\"type\">const</span> FAggregatorEvaluateParameters&amp; </span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">                                              Parameters)</span> <span class=\"type\">const</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">const</span> FAggregatorMod&amp; Mod : Mods[EGameplayModOp::Override])</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (Mod.<span class=\"built_in\">Qualifies</span>())</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> Mod.EvaluatedMagnitude;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"type\">float</span> Additive = </span><br><span class=\"line\">        <span class=\"built_in\">SumMods</span>(</span><br><span class=\"line\">        \tMods[EGameplayModOp::Additive], \t</span><br><span class=\"line\">        \tGameplayEffectUtilities::<span class=\"built_in\">GetModifierBiasByModifierOp</span>(EGameplayModOp::Additive), Parameters);</span><br><span class=\"line\">    </span><br><span class=\"line\">\t<span class=\"type\">float</span> Multiplicitive = </span><br><span class=\"line\">        <span class=\"built_in\">SumMods</span>(</span><br><span class=\"line\">        \tMods[EGameplayModOp::Multiplicitive], </span><br><span class=\"line\">        \tGameplayEffectUtilities::<span class=\"built_in\">GetModifierBiasByModifierOp</span>(EGameplayModOp::Multiplicitive), Parameters);</span><br><span class=\"line\">\t</span><br><span class=\"line\">    <span class=\"type\">float</span> Division = </span><br><span class=\"line\">        <span class=\"built_in\">SumMods</span>(</span><br><span class=\"line\">        \tMods[EGameplayModOp::Division], </span><br><span class=\"line\">        \tGameplayEffectUtilities::<span class=\"built_in\">GetModifierBiasByModifierOp</span>(EGameplayModOp::Division), Parameters);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (FMath::<span class=\"built_in\">IsNearlyZero</span>(Division))</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">ABILITY_LOG</span>(Warning, <span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;Division summation was 0.0f in FAggregatorModChannel.&quot;</span>));</span><br><span class=\"line\">\t\tDivision = <span class=\"number\">1.f</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ((InlineBaseValue + Additive) * Multiplicitive) / Division;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<div class=\"custom-quote warning\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 8V13\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 15.99V16.01\"></path>\n</svg>\n</span>\n<p class=\"custom-quote-title\">注意</p>\n<ul>\n<li>对于基于百分比的修改, 确保使用<code>Multiply</code>操作以使其在加法操作之后</li>\n<li><a href=\"https://github.com/FHangH/GASDocumentation_Chinese?tab=readme-ov-file#concepts-p\">预测(Prediction)</a>对于百分比修改有些问题</li>\n</ul>\n\n</div>\n<h5 id=\"5-4-1-Modifier种类\"><a href=\"#5-4-1-Modifier种类\" class=\"headerlink\" title=\"5.4.1 Modifier种类\"></a>5.4.1 Modifier种类</h5><ul>\n<li>有四种类型的<code>Modifier</code>: <ul>\n<li><code>ScalableFloat</code></li>\n<li><code>AttributeBased</code></li>\n<li><code>CustomCalculationClass</code></li>\n<li><code>SetByCaller</code></li>\n</ul>\n</li>\n<li>它们全都生成一些浮点数, 用于之后基于各自的操作修改指定<code>Modifier</code>的<code>Attribute</code></li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>Modifier类型</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Scalable Float</td>\n<td>FScalableFloat结构体可以指向某个横向为变量, 纵向为等级的Data Table, <code>Scalable Float</code>会以Ability的当前等级自动读取指定Data Table的某行值(或者在<a href=\"https://github.com/FHangH/GASDocumentation_Chinese?tab=readme-ov-file#concepts-ge-spec\">GameplayEffectSpec</a>中重写的不同等级), 该值还可以进一步被系数处理, 如果没有指定Data Table&#x2F;Row, 那么就会将其视为1, 因此该系数就可以在所有等级都硬编码为一个值.<a href=\"https://raw.githubusercontent.com/BillEliot/GASDocumentation_Chinese/main/Images/scalablefloats.png\"><img src=\"https://raw.githubusercontent.com/BillEliot/GASDocumentation_Chinese/main/Images/scalablefloats.png\" alt=\"ScalableFloat\"></a></td>\n</tr>\n<tr>\n<td>Attribute Based</td>\n<td><code>Attribute Based Modifier</code>将Source(<code>GameplayEffectSpec</code>的创建者)或Target(<code>GameplayEffectSpec</code>的接收者)上的CurrentValue或BaseValue视为<code>Backing Attribute</code>, 可以使用系数和Pre与Post系数和来修改它. <code>Snapshotting</code>意味着当<code>GameplayEffectSpec</code>创建时捕获该<code>Attribute</code>, 而<code>No Snapshotting</code>意味着当<code>GameplayEffectSpec</code>应用时捕获该<code>Attribute</code>.</td>\n</tr>\n<tr>\n<td>Custom Calculation Class</td>\n<td><code>Custom Calculation Class</code>为复杂的<code>Modifier</code>提供了最大的灵活性, 该<code>Modifier</code>使用了<a href=\"https://github.com/FHangH/GASDocumentation_Chinese?tab=readme-ov-file#concepts-ge-mmc\">ModifierMagnitudeCalculation</a>类, 且可以使用系数和Pre与Post系数和来处理浮点值结果.</td>\n</tr>\n<tr>\n<td>Set By Caller</td>\n<td><code>SetByCaller</code>Modifier是运行时由Ability或<code>GameplayEffectSpec</code>的创建者于<code>GameplayEffect</code>之外设置的值, 例如, 如果你想让伤害值随玩家蓄力技能的长短而变化, 那么就需要使用<code>SetByCaller</code>. <code>SetByCaller</code>本质上是存于<code>GameplayEffectSpec</code>中的<code>TMap&lt;FGameplayTag, float&gt;</code>, <code>Modifier</code>只是告知<code>Aggregator</code>去寻找与提供的<code>GameplayTag</code>相关联的<code>SetByCaller</code>值. <code>Modifier</code>使用的<code>SetByCaller</code>只能使用该概念的<code>GameplayTag</code>形式, <code>FName</code>形式在此处不适用. 如果<code>Modifier</code>被设置为<code>SetByCaller</code>, 但是带有正确<code>GameplayTag</code>的<code>SetByCaller</code>在<code>GameplayEffectSpec</code>中不存在, 那么游戏会抛出一个运行时错误并返回0, 这可能在<code>Divide</code>操作中造成问题. 参阅<a href=\"https://github.com/FHangH/GASDocumentation_Chinese?tab=readme-ov-file#concepts-ge-spec-setbycaller\">SetByCallers</a>获取更多关于如何使用<code>SetByCaller</code>的信息.</td>\n</tr>\n</tbody></table>\n<h5 id=\"5-4-2-Multiply和Divide-Modifier\"><a href=\"#5-4-2-Multiply和Divide-Modifier\" class=\"headerlink\" title=\"5.4.2 Multiply和Divide Modifier\"></a>5.4.2 Multiply和Divide Modifier</h5><ul>\n<li>默认情况下, 所有的<code>Multiply</code>和<code>Divide</code>Modifier在对<code>Attribute</code>的BaseValue乘除前都会先加到一起</li>\n</ul>\n<p>引擎默认计算细节：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">float</span> <span class=\"title\">FAggregatorModChannel::SumMods</span><span class=\"params\">(<span class=\"type\">const</span> TArray&lt;FAggregatorMod&gt;&amp; InMods, <span class=\"type\">float</span> Bias, <span class=\"type\">const</span> </span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">                                     FAggregatorEvaluateParameters&amp; Parameters)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">float</span> Sum = Bias;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">const</span> FAggregatorMod&amp; Mod : InMods)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (Mod.<span class=\"built_in\">Qualifies</span>())</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tSum += (Mod.EvaluatedMagnitude - Bias);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> Sum;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">float</span> <span class=\"title\">FAggregatorModChannel::EvaluateWithBase</span><span class=\"params\">(<span class=\"type\">float</span> InlineBaseValue, <span class=\"type\">const</span> FAggregatorEvaluateParameters&amp; Parameters)</span> </span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"type\">const</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t...</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"type\">float</span> Additive = </span><br><span class=\"line\">        <span class=\"built_in\">SumMods</span>(</span><br><span class=\"line\">        \tMods[EGameplayModOp::Additive], \t</span><br><span class=\"line\">        \tGameplayEffectUtilities::<span class=\"built_in\">GetModifierBiasByModifierOp</span>(EGameplayModOp::Additive), Parameters);</span><br><span class=\"line\">    </span><br><span class=\"line\">\t<span class=\"type\">float</span> Multiplicitive = </span><br><span class=\"line\">        <span class=\"built_in\">SumMods</span>(</span><br><span class=\"line\">        \tMods[EGameplayModOp::Multiplicitive], </span><br><span class=\"line\">        \tGameplayEffectUtilities::<span class=\"built_in\">GetModifierBiasByModifierOp</span>(EGameplayModOp::Multiplicitive), Parameters);</span><br><span class=\"line\">\t</span><br><span class=\"line\">    <span class=\"type\">float</span> Division = </span><br><span class=\"line\">        <span class=\"built_in\">SumMods</span>(</span><br><span class=\"line\">        \tMods[EGameplayModOp::Division], </span><br><span class=\"line\">        \tGameplayEffectUtilities::<span class=\"built_in\">GetModifierBiasByModifierOp</span>(EGameplayModOp::Division), Parameters);</span><br><span class=\"line\"></span><br><span class=\"line\">\t...</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ((InlineBaseValue + Additive) * Multiplicitive) / Division;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p>修改计算细节：</p>\n<ul>\n<li>很多游戏会想要它们的<code>Modify</code>和<code>Divide</code>Modifier在应用到BaseValue之前先乘或除到一起</li>\n<li>为了实现这种需求, 你需要修改<code>FAggregatorModChannel::EvaluateWithBase()</code>的引擎代码</li>\n</ul>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">float</span> <span class=\"title\">FAggregatorModChannel::EvaluateWithBase</span><span class=\"params\">(<span class=\"type\">float</span> InlineBaseValue, <span class=\"type\">const</span> FAggregatorEvaluateParameters&amp; Parameters)</span> </span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"type\">const</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t...</span><br><span class=\"line\">\t<span class=\"type\">float</span> Multiplicitive = <span class=\"built_in\">MultiplyMods</span>(Mods[EGameplayModOp::Multiplicitive], Parameters);</span><br><span class=\"line\">\t...</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ((InlineBaseValue + Additive) * Multiplicitive) / Division;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 需要添加到引擎源码中的 GameplayEffectAggregator.cpp 中</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">float</span> <span class=\"title\">FAggregatorModChannel::MultiplyMods</span><span class=\"params\">(<span class=\"type\">const</span> TArray&lt;FAggregatorMod&gt;&amp; InMods, <span class=\"type\">const</span> FAggregatorEvaluateParameters&amp; </span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">                                          Parameters)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">float</span> Multiplier = <span class=\"number\">1.0f</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">const</span> FAggregatorMod&amp; Mod : InMods)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (Mod.<span class=\"built_in\">Qualifies</span>())</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tMultiplier *= Mod.EvaluatedMagnitude;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> Multiplier;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h5 id=\"5-4-3-Modifier-GameplayTag\"><a href=\"#5-4-3-Modifier-GameplayTag\" class=\"headerlink\" title=\"5.4.3 Modifier_GameplayTag\"></a>5.4.3 Modifier_GameplayTag</h5><ul>\n<li><p>每个<a href=\"https://github.com/FHangH/GASDocumentation_Chinese?tab=readme-ov-file#concepts-ge-mods\">Modifier</a>都可以设置<code>SourceTag</code>和<code>TargetTag</code></p>\n</li>\n<li><p>它们的作用就像<code>GameplayEffect</code>的<a href=\"https://github.com/FHangH/GASDocumentation_Chinese?tab=readme-ov-file#concepts-ge-tags\">Application Tag requirements</a></p>\n</li>\n<li><p>因此只有当Effect应用后才会考虑标签, 对于周期性(Periodic)的<code>无限(Infinite)</code>Effect, 这些标签只会在第一次应用Effect时才会被考虑, 而不是在每次周期执行时.</p>\n</li>\n<li><p><code>Attribute Based Modifier</code>也可以设置<code>SourceTagFilter</code>和<code>TargetTagFilter</code></p>\n</li>\n<li><p>当确定<code>Attribute Based Modifier</code>的源(Source)<code>Attribute</code>的Magnitude时</p>\n</li>\n<li><p>这些过滤器就会用来将某些<code>Modifier</code>排除在该Attribute之外</p>\n</li>\n<li><p>源(Source)或目标(Target)中没有过滤器所有标签的<code>Modifier</code>也会被排除在外</p>\n</li>\n</ul>\n<p>这更详尽的意思是: </p>\n<ul>\n<li>源(Source)<code>ASC</code>和目标(Target)<code>ASC</code>的标签都被<code>GameplayEffect</code>所捕获</li>\n<li>当<code>GameplayEffectSpec</code>创建时, 源(Source)<code>ASC</code>的标签被捕获</li>\n<li>当执行Effect时, 目标(Target)<code>ASC</code>的标签被捕获</li>\n<li>当确定<code>无限(Infinite)</code>或<code>持续(Duration)</code>Effect的<code>Modifier</code>是否满足条件可以被应用(也就是聚合器条件(Aggregator Qualify))并且过滤器已经设置时</li>\n<li>被捕获的标签就会和过滤器进行比对</li>\n</ul>\n<h4 id=\"5-5-GE堆栈\"><a href=\"#5-5-GE堆栈\" class=\"headerlink\" title=\"5.5 GE堆栈\"></a>5.5 GE堆栈</h4><ul>\n<li><code>GameplayEffect</code>默认会应用新的<code>GameplayEffectSpec</code>实例</li>\n<li>而不明确或不关心之前已经应用过的尚且存在的<code>GameplayEffectSpec</code>实例</li>\n<li><code>GameplayEffect</code>可以设置到堆栈中, 新的<code>GameplayEffectSpec</code>实例不会添加到堆栈中</li>\n<li>而是修改当前已经存在的<code>GameplayEffectSpec</code>堆栈数</li>\n<li>堆栈只适用于<code>持续(Duration)</code>和<code>无限(Infinite)GameplayEffect</code></li>\n</ul>\n<p>有两种类型的堆栈: <code>Aggregate by Source</code>和<code>Aggregate by Target</code>：</p>\n<table>\n<thead>\n<tr>\n<th>堆栈类型</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Aggregate by Source</td>\n<td>目标(Target)上的每个源(Source)<code>ASC</code>都有一个单独的堆栈实例, 每个源(Source)可以应用堆栈中的X个<code>GameplayEffect</code>.</td>\n</tr>\n<tr>\n<td>Aggregate by Target</td>\n<td>目标(Target)上只有一个堆栈实例而不管源(Source)如何, 每个源(Source)都可以在共享堆栈限制(Shared Stack Limit)内应用堆栈.</td>\n</tr>\n</tbody></table>\n<p>样例项目：</p>\n<ul>\n<li>包含一个用于监听<code>GameplayEffect</code>堆栈变化的自定义蓝图节点</li>\n<li>HUD UMG Widget使用它来更新玩家拥有的被动护盾堆栈(层数)</li>\n<li>该<code>AsyncTask</code>将会一直响应直到手动调用<code>EndTask()</code></li>\n<li>就像在UMG Widget的<code>Destruct</code>事件中调用那样. 参阅<code>AsyncTaskAttributeChanged.h/cpp</code></li>\n</ul>\n<p><a href=\"https://raw.githubusercontent.com/BillEliot/GASDocumentation_Chinese/main/Images/gestackchange.png\"><img src=\"https://raw.githubusercontent.com/BillEliot/GASDocumentation_Chinese/main/Images/gestackchange.png\" alt=\"Listen for GameplayEffect Stack Change BP Node\"></a></p>\n<h4 id=\"5-6-GE授予ASC新的GA\"><a href=\"#5-6-GE授予ASC新的GA\" class=\"headerlink\" title=\"5.6 GE授予ASC新的GA\"></a>5.6 GE授予ASC新的GA</h4><ul>\n<li>只有<code>持续(Duration)</code>和<code>无限(Infinite)GameplayEffect</code>可以授予Ability</li>\n<li>一个普遍用法是当想要强制另一个玩家做某些事的时候, 像击退或拉取时移动他们</li>\n<li>就会对它们应用一个<code>GameplayEffect</code>来授予其一个自动激活的Ability(查看<a href=\"https://github.com/FHangH/GASDocumentation_Chinese?tab=readme-ov-file#concepts-ga-activating-passive\">被动Ability</a>来了解如何在Ability被授予时自动激活它)</li>\n<li>从而使其做出相应的动作</li>\n</ul>\n<p>设计师可以决定一个<code>GameplayEffect</code>能够授予哪些Ability, 授予的Ability等级, 将其<a href=\"https://github.com/FHangH/GASDocumentation_Chinese?tab=readme-ov-file#concepts-ga-input\">绑定</a>在什么输入键上以及该Ability的移除策略</p>\n<table>\n<thead>\n<tr>\n<th>移除策略</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>立即取消Ability</td>\n<td>当授予Ability的<code>GameplayEffect</code>从目标移除时, 授予的Ability就会立即取消并移除.</td>\n</tr>\n<tr>\n<td>结束时移除Ability</td>\n<td>允许授予的Ability完成, 之后将其从目标移除.</td>\n</tr>\n<tr>\n<td>无</td>\n<td>授予的Ability不受从目标移除的授予<code>GameplayEffect</code>的影响, 目标将会一直拥有该Ability直到之后被手动移除.</td>\n</tr>\n</tbody></table>\n<h4 id=\"5-7-GE标签\"><a href=\"#5-7-GE标签\" class=\"headerlink\" title=\"5.7 GE标签\"></a>5.7 GE标签</h4><ul>\n<li><code>GameplayEffect</code>可以带有多个<a href=\"https://github.com/FHangH/GASDocumentation_Chinese?tab=readme-ov-file#concepts-gt\">GameplayTagContainer</a></li>\n<li>设计师可以编辑每个类别的<code>Added</code>和<code>Removed</code>GameplayTagContainer</li>\n<li>结果会在编译后显示在<code>Combined GameplayTagContainer</code>中</li>\n<li><code>Added</code>标签是该<code>GameplayEffect</code>新增的之前其父类没有的标签</li>\n<li><code>Removed</code>标签是其父类拥有但该类没有的标签</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>Gameplay Effect Asset Tags</th>\n<th><code>GameplayEffect</code>拥有的标签, 它们自身没有任何功能且只用于描述<code>GameplayEffect</code>.</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Granted Tags</td>\n<td>存于<code>GameplayEffect</code>中且又用于<code>GameplayEffect</code>所应用<code>ASC</code>的标签. 当<code>GameplayEffect</code>移除时它们也会从<code>ASC</code>中移除. 该标签只作用于<code>持续(Duration)</code>和<code>无限(Infinite)GameplayEffect</code>.</td>\n</tr>\n<tr>\n<td>Ongoing Tag Requirements</td>\n<td>一旦<code>GameplayEffect</code>应用后, 这些标签将决定<code>GameplayEffect</code>是开启还是关闭. <code>GameplayEffect</code>可以是关闭但仍然是应用的. 如果某个<code>GameplayEffect</code>由于不符合<code>Ongoing Tag Requirements</code>而关闭, 但是之后又满足需求了, 那么该<code>GameplayEffect</code>会重新打开并重新应用它的<code>Modifier</code>. 该标签只作用于<code>持续(Duration)</code>和<code>无限(Infinite)GameplayEffect</code>.</td>\n</tr>\n<tr>\n<td>Application Tag Requirements</td>\n<td>位于目标上决定某个<code>GameplayEffect</code>是否可以应用到该目标的标签, 如果不满足这些需求, 那么<code>GameplayEffect</code>就不可应用.</td>\n</tr>\n<tr>\n<td>Remove Gameplay Effects with Tags</td>\n<td>当<code>GameplayEffect</code>成功应用后, 如果位于目标上的该<code>GameplayEffect</code>在其<code>Asset Tags</code>或<code>Granted Tags</code>中有任意一个本标签的话, 其就会自目标上移除.</td>\n</tr>\n</tbody></table>\n<h4 id=\"5-8-GE免疫\"><a href=\"#5-8-GE免疫\" class=\"headerlink\" title=\"5.8 GE免疫\"></a>5.8 GE免疫</h4><ul>\n<li><code>GameplayEffect</code>可以基于<a href=\"https://github.com/FHangH/GASDocumentation_Chinese?tab=readme-ov-file#concepts-gt\">GameplayTag</a>实现免疫, 有效阻止其他<code>GameplayEffect</code>应用</li>\n<li>尽管免疫可以由<code>Application Tag Requirements</code>等方式有效地实现</li>\n<li>但是使用该系统可以在<code>GameplayEffect</code>被免疫阻止时提供<code>UAbilitySystemComponent::OnImmunityBlockGameplayEffectDelegate</code>委托(Delegate)</li>\n<li><code>GrantedApplicationImmunityTags</code>会检查源(Source)<code>ASC</code>(包括源Ability的AbilityTag如果有的话)是否包含特定的标签</li>\n<li>这是一种基于确定Character或源(Source)的标签对其所有<code>GameplayEffect</code>提供免疫的方法</li>\n<li><code>Granted Application Immunity Query</code>会检查传入的<code>GameplayEffectSpec</code>是否与其查询条件相匹配, 从而阻止或允许其应用</li>\n</ul>\n<p><code>AbilitySystemComponent.h</code></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/** 当 GameplayEffectSpec 因免疫而被 ActiveGameplayEffect 阻止时发出通知  */</span></span><br><span class=\"line\"><span class=\"built_in\">DECLARE_MULTICAST_DELEGATE_TwoParams</span>(FImmunityBlockGE, <span class=\"type\">const</span> FGameplayEffectSpec&amp; <span class=\"comment\">/*BlockedSpec*/</span>, <span class=\"type\">const</span> FActiveGameplayEffect* <span class=\"comment\">/*ImmunityGameplayEffect*/</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/** Immunity notification support */</span></span><br><span class=\"line\">FImmunityBlockGE OnImmunityBlockGameplayEffectDelegate;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"5-9-GESpec\"><a href=\"#5-9-GESpec\" class=\"headerlink\" title=\"5.9 GESpec\"></a>5.9 GESpec</h4><h5 id=\"5-9-1-GESpec概念\"><a href=\"#5-9-1-GESpec概念\" class=\"headerlink\" title=\"5.9.1 GESpec概念\"></a>5.9.1 GESpec概念</h5><ol>\n<li>作用：<ul>\n<li><a href=\"https://docs.unrealengine.com/en-US/API/Plugins/GameplayAbilities/FGameplayEffectSpec/index.html\">GameplayEffectSpec(GESpec)</a>可以看作是<code>GameplayEffect</code>的实例</li>\n<li>它保存了一个其所代表的<code>GameplayEffect</code>类引用, 创建时的等级和创建者, 它在应用之前可以在运行时(Runtime)自由的创建和修改</li>\n<li>不像<code>GameplayEffect</code>应该由设计师在运行前创建</li>\n<li>当应用<code>GameplayEffect</code>时, <code>GameplayEffectSpec</code>会自<code>GameplayEffect</code>创建并且会实际应用到目标(Target)</li>\n</ul>\n</li>\n<li>创建和使用：<ul>\n<li><code>GameplayEffectSpec</code>是由<code>UAbilitySystemComponent::MakeOutgoingSpec()(BlueprintCallable)</code>自<code>GameplayEffect</code>创建的</li>\n<li><code>GameplayEffectSpec</code>不必立即应用</li>\n<li>通常是将<code>GameplayEffectSpec</code>传递给创建自Ability的投掷物, 该投掷物可以应用到它之后击中的目标</li>\n<li>当<code>GameplayEffectSpec</code>成功应用后, 就会返回一个名为<code>FActiveGameplayEffect</code>的新结构体</li>\n</ul>\n</li>\n<li><code>GameplayEffectSpec</code>的重要内容:<ul>\n<li>创建该<code>GameplayEffectSpec</code>的<code>GameplayEffect</code>类.</li>\n<li>该<code>GameplayEffectSpec</code>的等级. 通常和创建<code>GameplayEffectSpec</code>的Ability的等级一样, 但是可以是不同的.</li>\n<li><code>GameplayEffectSpec</code>的持续时间. 默认是<code>GameplayEffect</code>的持续时间, 但是可以是不同的.</li>\n<li>对于周期性Effect中<code>GameplayEffectSpec</code>的周期, 默认是<code>GameplayEffect</code>的周期, 但是可以是不同的.</li>\n<li>该<code>GameplayEffectSpec</code>的当前堆栈数. 堆栈限制取决于<code>GameplayEffect</code>.</li>\n<li><a href=\"https://github.com/FHangH/GASDocumentation_Chinese?tab=readme-ov-file#concepts-ge-context\">GameplayEffectContextHandle</a>表明该<code>GameplayEffectSpec</code>由谁创建.</li>\n<li><code>Attribute</code>在<code>GameplayEffectSpec</code>创建时由<code>Snapshot</code>捕获.</li>\n<li>除了<code>GameplayEffect</code>授予的<code>GameplayTags</code>, <code>GameplayEffectSpec</code>还会授予目标(Target)<code>DynamicGrantedTags</code>.</li>\n<li>除了<code>GameplayEffect</code>拥有的<code>AssetTags</code>, <code>GameplayEffectSpec</code>还会拥有<code>DynamicAssetTags</code>.</li>\n<li><code>SetByCaller TMaps</code>.</li>\n</ul>\n</li>\n</ol>\n<h5 id=\"5-9-2-SetByCaller\"><a href=\"#5-9-2-SetByCaller\" class=\"headerlink\" title=\"5.9.2 SetByCaller\"></a>5.9.2 SetByCaller</h5><ul>\n<li><code>SetByCaller</code>允许<code>GameplayEffectSpec</code>拥有和<code>GameplayTag</code>或<code>FName</code>相关联的浮点值</li>\n<li>它们存储在<code>GameplayEffectSpec</code>上其各自的<code>TMaps: TMap&lt;FGameplayTag, float&gt;</code>和<code>TMap&lt;FName, float&gt;</code>中</li>\n<li>可以作为<code>GameplayEffect</code>的<code>Modifier</code>或者传递浮点值的通用方法使用</li>\n<li>其普遍用法是经由<code>SetByCaller</code>传递某个Ability内部生成的数值数据到<a href=\"https://github.com/FHangH/GASDocumentation_Chinese?tab=readme-ov-file#concepts-ge-ec\">GameplayEffectExecutionCalculations</a>或<a href=\"https://github.com/FHangH/GASDocumentation_Chinese?tab=readme-ov-file#concepts-ge-mmc\">ModifierMagnitudeCalculations</a>.</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>SetByCaller使用</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>Modifier</code></td>\n<td>必须提前在<code>GameplayEffect</code>类中定义. 只能使用<code>GameplayTag</code>形式. 如果在<code>GameplayEffect</code>类中定义而<code>GameplayEffectSpec</code>中没有相应的标签&#x2F;浮点值对, 那么游戏在<code>GameplayEffectSpec</code>应用时会抛出运行时错误并返回0, 这对于<code>Divide</code>操作是个潜在问题, 参阅<a href=\"https://github.com/FHangH/GASDocumentation_Chinese?tab=readme-ov-file#concepts-ge-mods\">Modifier</a>.</td>\n</tr>\n<tr>\n<td>其他</td>\n<td>无需提前定义. 读取<code>GameplayEffectSpec</code>中不存在的<code>SetByCaller</code>会返回一个由开发者定义的可带有警告信息的默认值.</td>\n</tr>\n</tbody></table>\n<p>蓝图中指定SetByCaller：</p>\n<p><img src=\"https://raw.githubusercontent.com/BillEliot/GASDocumentation_Chinese/main/Images/setbycaller.png\" alt=\"Assigning SetByCaller\"></p>\n<p>C++中指定SetByCaller：<code>GameplayEffect.h</code> -&gt; <code>FGameplayEffectSpec</code></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/** 设置 SetByCaller 修饰符的幅度 */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">SetSetByCallerMagnitude</span><span class=\"params\">(FName DataName, <span class=\"type\">float</span> Magnitude)</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">SetSetByCallerMagnitude</span><span class=\"params\">(FGameplayTag DataTag, <span class=\"type\">float</span> Magnitude)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/** 返回 SetByCaller 修饰符的大小。如果尚未设置量级，将返回 0.f 并发出警告。 */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">float</span> <span class=\"title\">GetSetByCallerMagnitude</span><span class=\"params\">(FName DataName, <span class=\"type\">bool</span> WarnIfNotFound = <span class=\"literal\">true</span>, <span class=\"type\">float</span> DefaultIfNotFound = <span class=\"number\">0.f</span>)</span> <span class=\"type\">const</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">float</span> <span class=\"title\">GetSetByCallerMagnitude</span><span class=\"params\">(FGameplayTag DataTag, <span class=\"type\">bool</span> WarnIfNotFound = <span class=\"literal\">true</span>, <span class=\"type\">float</span> DefaultIfNotFound = <span class=\"number\">0.f</span>)</span> <span class=\"type\">const</span></span>;</span><br></pre></td></tr></table></figure>\n\n\n\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">使用建议</p>\n<p><ul>\n<li>建议使用<code>GameplayTag</code>形式而不是<code>FName</code>形式</li>\n<li>这可以避免蓝图中的拼写错误</li>\n<li>并且当<code>GameplayEffectSpec</code>同步时, <code>GameplayTag</code>比<code>FName</code>在网络传输中更有效率, 因为<code>TMap</code>也会同步</li>\n</ul>\n</p>\n</div>\n<h4 id=\"5-10-GEContext\"><a href=\"#5-10-GEContext\" class=\"headerlink\" title=\"5.10 GEContext\"></a>5.10 GEContext</h4><ul>\n<li><a href=\"https://docs.unrealengine.com/en-US/API/Plugins/GameplayAbilities/FGameplayEffectContext/index.html\">GameplayEffectContext</a>结构体存有关于<code>GameplayEffectSpec</code>创建者(Instigator)和<a href=\"https://github.com/FHangH/GASDocumentation_Chinese?tab=readme-ov-file#concepts-targeting-data\">TargetData</a>的信息</li>\n<li>这也是一个很好的可继承结构体以在<a href=\"https://github.com/FHangH/GASDocumentation_Chinese?tab=readme-ov-file#concepts-ge-mmc\">ModifierMagnitudeCalculation</a>&#x2F;<a href=\"https://github.com/FHangH/GASDocumentation_Chinese?tab=readme-ov-file#concepts-ge-ec\">GameplayEffectExecutionCalculation</a>, <a href=\"https://github.com/FHangH/GASDocumentation_Chinese?tab=readme-ov-file#concepts-as\">AttributeSet</a>和<a href=\"https://github.com/FHangH/GASDocumentation_Chinese?tab=readme-ov-file#concepts-gc\">GameplayCue</a>之间传递任意数据</li>\n</ul>\n<p>继承<code>GameplayEffectContext</code>:</p>\n<ol>\n<li>继承<code>FGameplayEffectContext</code>.</li>\n<li>重写<code>FGameplayEffectContext::GetScriptStruct()</code>.</li>\n<li>重写<code>FGameplayEffectContext::Duplicate()</code>.</li>\n<li>如果新数据需要同步的话, 重写<code>FGameplayEffectContext::NetSerialize()</code>.</li>\n<li>对子结构体实现<code>TStructOpsTypeTraits</code>, 就像父结构体<code>FGameplayEffectContext</code>有的那样.</li>\n<li>在<a href=\"https://github.com/FHangH/GASDocumentation_Chinese?tab=readme-ov-file#concepts-asg\">AbilitySystemGlobals</a>类中重写<code>AllocGameplayEffectContext()</code>以返回一个新的子结构体对象.</li>\n</ol>\n<h4 id=\"5-11-MMC\"><a href=\"#5-11-MMC\" class=\"headerlink\" title=\"5.11 MMC\"></a>5.11 MMC</h4><p><code>GameplayModMagnitudeCalculation</code></p>\n<ul>\n<li><a href=\"https://docs.unrealengine.com/en-US/API/Plugins/GameplayAbilities/UGameplayModMagnitudeCalculation/index.html\">ModifierMagnitudeCalculations</a>(<code>ModMagniCalc</code>或<code>MMC</code>)是在<code>GameplayEffect</code>中作为<a href=\"https://github.com/FHangH/GASDocumentation_Chinese?tab=readme-ov-file#concepts-ge-mods\">Modifier</a>使用的强有力的类</li>\n<li>它的功能类似<a href=\"https://github.com/FHangH/GASDocumentation_Chinese?tab=readme-ov-file#concepts-ge-ec\">GameplayEffectExecutionCalculation</a>但是要逊色一些</li>\n<li><code>MMC</code>可以用于各种持续时间的<code>GameplayEffect</code> - <code>即刻(Instant)</code>, <code>持续(Duration)</code>, <code>无限(Infinite)</code>和<code>周期性(Periodic)</code>.</li>\n</ul>\n<div class=\"custom-quote warning\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 8V13\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 15.99V16.01\"></path>\n</svg>\n</span>\n<p class=\"custom-quote-title\">注意</p>\n<ol>\n<li>最重要的是它是可预测的</li>\n<li>唯一要做的就是自<code>CalculateBaseMagnitude_Implementation()</code>返回浮点值</li>\n<li>可以在C++和蓝图中继承并重写该函数</li>\n</ol>\n\n</div>\n<ul>\n<li><code>MMC</code>的优势在于能够完全访问<code>GameplayEffectSpec</code>来读取<code>GameplayTag</code>和<code>SetByCaller</code></li>\n<li>从而能够捕获<code>GameplayEffect</code>的<code>源(Source)</code>或<code>目标(Target)</code>上任意数量的<code>Attribute</code>值</li>\n<li><code>Attribute</code>可以被Snapshot也可以不被Snapshot</li>\n<li><code>Snapshotted Attribute</code>在<code>GameplayEffectSpec</code>创建时被捕获而非<code>Snapshotted Attribute</code>在<code>GameplayEffectSpec</code>应用时被捕获</li>\n<li>并且该<code>Attribute</code>被<code>无限(Infinite)</code>或<code>持续(Duration)</code>GameplayEffect修改时会自动更新</li>\n<li>捕获<code>Attribute</code>会自<code>ASC</code>现有的<code>Modifier</code>重新计算它们的<code>CurrentValue</code></li>\n</ul>\n<div class=\"custom-quote warning\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 8V13\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 15.99V16.01\"></path>\n</svg>\n</span>\n<p class=\"custom-quote-title\">最终的结果</p>\n<p><ol>\n<li>该重新计算<strong>不会</strong>执行<code>AbilitySet</code>中的<a href=\"https://github.com/FHangH/GASDocumentation_Chinese?tab=readme-ov-file#concepts-as-preattributechange\">PreAttributeChange()</a>, 因此所有的限制操作(Clamp)必须在这里重新处理</li>\n<li><code>MMC</code>的结果浮点值可以进一步由系数和前后系数之和在<code>GameplayEffect</code>的<code>Modifier</code>中修改</li>\n</ol>\n</p>\n</div>\n<table>\n<thead>\n<tr>\n<th>Snapshot</th>\n<th>源(Source)或目标(Target)</th>\n<th>在GameplayEffectSpec中捕获</th>\n<th>Attribute被无限(Infinite)或持续(Duration)GameplayEffect修改时自动更新</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>是</td>\n<td>Source</td>\n<td>创建</td>\n<td>否</td>\n</tr>\n<tr>\n<td>是</td>\n<td>Target</td>\n<td>应用</td>\n<td>否</td>\n</tr>\n<tr>\n<td>否</td>\n<td>Source</td>\n<td>应用</td>\n<td>是</td>\n</tr>\n<tr>\n<td>否</td>\n<td>Target</td>\n<td>应用</td>\n<td>是</td>\n</tr>\n</tbody></table>\n<p>示例：</p>\n<ul>\n<li>该<code>MMC</code>会捕获目标的魔法值<code>Attribute</code>并因为毒药Effect而将其减少, 其减少量的变化取决于目标所拥有的魔法值和可能拥有的某个标签</li>\n</ul>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">UPAMMC_PoisonMana::<span class=\"built_in\">UPAMMC_PoisonMana</span>()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//ManaDef defined in header FGameplayEffectAttributeCaptureDefinition ManaDef;</span></span><br><span class=\"line\">\tManaDef.AttributeToCapture = UPAAttributeSetBase::<span class=\"built_in\">GetManaAttribute</span>();</span><br><span class=\"line\">\tManaDef.AttributeSource = EGameplayEffectAttributeCaptureSource::Target;</span><br><span class=\"line\">\tManaDef.bSnapshot = <span class=\"literal\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//MaxManaDef defined in header FGameplayEffectAttributeCaptureDefinition MaxManaDef;</span></span><br><span class=\"line\">\tMaxManaDef.AttributeToCapture = UPAAttributeSetBase::<span class=\"built_in\">GetMaxManaAttribute</span>();</span><br><span class=\"line\">\tMaxManaDef.AttributeSource = EGameplayEffectAttributeCaptureSource::Target;</span><br><span class=\"line\">\tMaxManaDef.bSnapshot = <span class=\"literal\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\tRelevantAttributesToCapture.<span class=\"built_in\">Add</span>(ManaDef);</span><br><span class=\"line\">\tRelevantAttributesToCapture.<span class=\"built_in\">Add</span>(MaxManaDef);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">float</span> <span class=\"title\">UPAMMC_PoisonMana::CalculateBaseMagnitude_Implementation</span><span class=\"params\">(<span class=\"type\">const</span> FGameplayEffectSpec &amp; Spec)</span> <span class=\"type\">const</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">// Gather the tags from the source and target as that can affect which buffs should be used</span></span><br><span class=\"line\">\t<span class=\"type\">const</span> FGameplayTagContainer* SourceTags = Spec.CapturedSourceTags.<span class=\"built_in\">GetAggregatedTags</span>();</span><br><span class=\"line\">\t<span class=\"type\">const</span> FGameplayTagContainer* TargetTags = Spec.CapturedTargetTags.<span class=\"built_in\">GetAggregatedTags</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\tFAggregatorEvaluateParameters EvaluationParameters;</span><br><span class=\"line\">\tEvaluationParameters.SourceTags = SourceTags;</span><br><span class=\"line\">\tEvaluationParameters.TargetTags = TargetTags;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"type\">float</span> Mana = <span class=\"number\">0.f</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">GetCapturedAttributeMagnitude</span>(ManaDef, Spec, EvaluationParameters, Mana);</span><br><span class=\"line\">\tMana = FMath::<span class=\"built_in\">Max</span>&lt;<span class=\"type\">float</span>&gt;(Mana, <span class=\"number\">0.0f</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"type\">float</span> MaxMana = <span class=\"number\">0.f</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">GetCapturedAttributeMagnitude</span>(MaxManaDef, Spec, EvaluationParameters, MaxMana);</span><br><span class=\"line\">\tMaxMana = FMath::<span class=\"built_in\">Max</span>&lt;<span class=\"type\">float</span>&gt;(MaxMana, <span class=\"number\">1.0f</span>); <span class=\"comment\">// Avoid divide by zero</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"type\">float</span> Reduction = <span class=\"number\">-20.0f</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (Mana / MaxMana &gt; <span class=\"number\">0.5f</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// Double the effect if the target has more than half their mana</span></span><br><span class=\"line\">\t\tReduction *= <span class=\"number\">2</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (TargetTags-&gt;<span class=\"built_in\">HasTagExact</span>(FGameplayTag::<span class=\"built_in\">RequestGameplayTag</span>(<span class=\"built_in\">FName</span>(<span class=\"string\">&quot;Status.WeakToPoisonMana&quot;</span>))))</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// Double the effect if the target is weak to PoisonMana</span></span><br><span class=\"line\">\t\tReduction *= <span class=\"number\">2</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> Reduction;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<div class=\"custom-quote warning\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 8V13\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 15.99V16.01\"></path>\n</svg>\n</span>\n<p class=\"custom-quote-title\">注意</p>\n<ul>\n<li>如果你没有在<code>MMC</code>的构造函数中将<code>FGameplayEffectAttributeCaptureDefinition</code>添加到<code>RelevantAttributesToCapture</code>中</li>\n<li>并且尝试捕获<code>Attribute</code>, 那么将会得到一个关于捕获时缺失Spec的错误</li>\n<li>如果不需要捕获<code>Attribute</code>, 那么就不必添加什么到<code>RelevantAttributesToCapture</code></li>\n</ul>\n\n</div>\n<h4 id=\"5-12-GE-ExeCalc\"><a href=\"#5-12-GE-ExeCalc\" class=\"headerlink\" title=\"5.12 GE_ExeCalc\"></a>5.12 GE_ExeCalc</h4><h5 id=\"5-12-1-概念定义\"><a href=\"#5-12-1-概念定义\" class=\"headerlink\" title=\"5.12.1 概念定义\"></a>5.12.1 概念定义</h5><ul>\n<li>像<a href=\"https://github.com/FHangH/GASDocumentation_Chinese?tab=readme-ov-file#concepts-ge-mmc\">ModifierMagnitudeCalculation</a>一样, 它也可以捕获<code>Attribute</code>并选择性地为其创建Snapshot</li>\n<li>和<code>MMC</code>不同的是, 它可以修改多个<code>Attribute</code>并且基本上可以处理程序员想要做的任何事</li>\n<li><code>ExecutionCalculation</code>只能由<code>即刻(Instant)</code>和<code>周期性(Periodic)</code>GameplayEffect使用, 插件中所有和”Execute”相关的一般都引用到这两种类型的<code>GameplayEffect</code></li>\n</ul>\n<div class=\"custom-quote warning\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 8V13\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 15.99V16.01\"></path>\n</svg>\n</span>\n<p class=\"custom-quote-title\">注意</p>\n<p><p>它是不可<a href=\"https://github.com/FHangH/GASDocumentation_Chinese?tab=readme-ov-file#concepts-p\">预测</a>的且必须在C++中实现</p>\n</p>\n</div>\n<ul>\n<li>当<code>GameplayEffectSpec</code>创建时, Snapshot会捕获<code>Attribute</code></li>\n<li>而当<code>GameplayEffectSpec</code>应用时, 非Snapshot会捕获<code>Attribute</code></li>\n<li>捕获<code>Attribute</code>会自<code>ASC</code>现有的<code>Modifier</code>重新计算它们的<code>CurrentValue</code></li>\n</ul>\n<div class=\"custom-quote warning\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 8V13\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 15.99V16.01\"></path>\n</svg>\n</span>\n<p class=\"custom-quote-title\">注意</p>\n<ul>\n<li>该重新计算<strong>不会</strong>执行<code>AbilitySet</code>中的<a href=\"https://github.com/FHangH/GASDocumentation_Chinese?tab=readme-ov-file#concepts-as-preattributechange\">PreAttributeChange()</a></li>\n<li>因此所有的限制操作(Clamp)必须在这里重新处理</li>\n</ul>\n\n</div>\n<table>\n<thead>\n<tr>\n<th>快照</th>\n<th>Source或Target</th>\n<th>在GameplayEffectSpec中捕获</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>是</td>\n<td>Source</td>\n<td>创建</td>\n</tr>\n<tr>\n<td>是</td>\n<td>Target</td>\n<td>应用</td>\n</tr>\n<tr>\n<td>否</td>\n<td>Source</td>\n<td>应用</td>\n</tr>\n<tr>\n<td>否</td>\n<td>Target</td>\n<td>应用</td>\n</tr>\n</tbody></table>\n<h5 id=\"5-12-2-创建使用\"><a href=\"#5-12-2-创建使用\" class=\"headerlink\" title=\"5.12.2 创建使用\"></a>5.12.2 创建使用</h5><ul>\n<li>为了设置<code>Attribute</code>捕获, 我们采用Epic的ActionRPG样例项目使用的方式</li>\n<li>定义一个保存和声明如何捕获<code>Attribute</code>的结构体, 并在该结构体的构造函数中创建一个它的副本(Copy)</li>\n<li>每个<code>ExecCalc</code>都需要有一个这样的结构体</li>\n</ul>\n<div class=\"custom-quote warning\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 8V13\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 15.99V16.01\"></path>\n</svg>\n</span>\n<p class=\"custom-quote-title\">注意</p>\n<p><ul>\n<li>每个结构体需要一个独一无二的名字, 因为它们共享同一个命名空间</li>\n<li>多个结构体使用相同名字在捕获<code>Attribute</code>时会造成错误(大多是捕获到错误的<code>Attribute</code>值)</li>\n</ul>\n</p>\n</div>\n<p>代码示例：</p>\n<p><code>GGE_ExeCalc.h</code></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">pragma</span> once</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;CoreMinimal.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;GameplayEffectExecutionCalculation.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;GGE_ExeCalc.generated.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">UCLASS</span>()</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">GAS_02_API</span> UGGE_ExeCalc : <span class=\"keyword\">public</span> UGameplayEffectExecutionCalculation</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">GENERATED_BODY</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">UGGE_ExeCalc</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">virtual</span> <span class=\"type\">void</span> <span class=\"title\">Execute_Implementation</span><span class=\"params\">(<span class=\"type\">const</span> FGameplayEffectCustomExecutionParameters&amp; ExecutionParams, </span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">                                        FGameplayEffectCustomExecutionOutput&amp; OutExecutionOutput)</span> <span class=\"type\">const</span> <span class=\"keyword\">override</span></span>;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n\n\n<p><code>GGE_ExeCalc.cpp</code></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;GGE_ExeCalc.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;GAS_02/GAS/AS/GGAttributeSet.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;GAS_02/GAS/GEContext/GG_GEContext.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">FDamageStatics</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">DECLARE_ATTRIBUTE_CAPTUREDEF</span>(InDamage);</span><br><span class=\"line\">\t<span class=\"built_in\">DECLARE_ATTRIBUTE_CAPTUREDEF</span>(CritChance);</span><br><span class=\"line\">\t<span class=\"built_in\">DECLARE_ATTRIBUTE_CAPTUREDEF</span>(CritMulti);</span><br><span class=\"line\">\t<span class=\"built_in\">DECLARE_ATTRIBUTE_CAPTUREDEF</span>(LuckyChance);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">FDamageStatics</span>(): <span class=\"built_in\">CritChanceProperty</span>(<span class=\"literal\">nullptr</span>), <span class=\"built_in\">CritMultiProperty</span>(<span class=\"literal\">nullptr</span>), <span class=\"built_in\">LuckyChanceProperty</span>(<span class=\"literal\">nullptr</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">DEFINE_ATTRIBUTE_CAPTUREDEF</span>(UGGAttributeSet, InDamage, Source, <span class=\"literal\">false</span>);</span><br><span class=\"line\">\t\t<span class=\"built_in\">DEFINE_ATTRIBUTE_CAPTUREDEF</span>(UGGAttributeSet, CritChance, Source, <span class=\"literal\">false</span>);</span><br><span class=\"line\">\t\t<span class=\"built_in\">DEFINE_ATTRIBUTE_CAPTUREDEF</span>(UGGAttributeSet, CritMulti, Source, <span class=\"literal\">false</span>);</span><br><span class=\"line\">\t\t<span class=\"built_in\">DEFINE_ATTRIBUTE_CAPTUREDEF</span>(UGGAttributeSet, LuckyChance, Source, <span class=\"literal\">false</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">static</span> FDamageStatics <span class=\"title\">DamageStatics</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">static</span> FDamageStatics DmgStatics;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> DmgStatics;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">UGGE_ExeCalc::<span class=\"built_in\">UGGE_ExeCalc</span>()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tRelevantAttributesToCapture.<span class=\"built_in\">Add</span>(<span class=\"built_in\">DamageStatics</span>().InDamageDef);</span><br><span class=\"line\">\tRelevantAttributesToCapture.<span class=\"built_in\">Add</span>(<span class=\"built_in\">DamageStatics</span>().CritChanceDef);</span><br><span class=\"line\">\tRelevantAttributesToCapture.<span class=\"built_in\">Add</span>(<span class=\"built_in\">DamageStatics</span>().CritMultiDef);</span><br><span class=\"line\">\tRelevantAttributesToCapture.<span class=\"built_in\">Add</span>(<span class=\"built_in\">DamageStatics</span>().LuckyChanceDef);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">UGGE_ExeCalc::Execute_Implementation</span><span class=\"params\">(<span class=\"type\">const</span> FGameplayEffectCustomExecutionParameters&amp; ExecutionParams,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">\tFGameplayEffectCustomExecutionOutput&amp; OutExecutionOutput)</span> <span class=\"type\">const</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">auto</span> SourceASC = ExecutionParams.<span class=\"built_in\">GetSourceAbilitySystemComponent</span>();</span><br><span class=\"line\">\t<span class=\"keyword\">auto</span> TargetASC = ExecutionParams.<span class=\"built_in\">GetTargetAbilitySystemComponent</span>();</span><br><span class=\"line\">\t<span class=\"keyword\">auto</span> TargetActor = TargetASC ? TargetASC-&gt;<span class=\"built_in\">GetAvatarActor</span>() : <span class=\"literal\">nullptr</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"type\">const</span> <span class=\"keyword\">auto</span> Spec = ExecutionParams.<span class=\"built_in\">GetOwningSpec</span>();</span><br><span class=\"line\">\t<span class=\"type\">const</span> <span class=\"keyword\">auto</span> SourceTags = Spec.CapturedSourceTags.<span class=\"built_in\">GetAggregatedTags</span>();</span><br><span class=\"line\">\t<span class=\"type\">const</span> <span class=\"keyword\">auto</span> TargetTags = Spec.CapturedTargetTags.<span class=\"built_in\">GetAggregatedTags</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\tFAggregatorEvaluateParameters EvaluateParameters;</span><br><span class=\"line\">\tEvaluateParameters.SourceTags = SourceTags;</span><br><span class=\"line\">\tEvaluateParameters.TargetTags = TargetTags;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">auto</span> InDamage = <span class=\"number\">0.f</span>;</span><br><span class=\"line\">\t\t<span class=\"comment\">/*FMath::Max(</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\tSpec.GetSetByCallerMagnitude(</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\tFGameplayTag::RequestGameplayTag(</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t\tFName(&quot;Damage.SetByCaller&quot;)), false, -1.f), 0.f);*/</span></span><br><span class=\"line\">\tExecutionParams.<span class=\"built_in\">AttemptCalculateCapturedAttributeMagnitude</span></span><br><span class=\"line\">        (<span class=\"built_in\">DamageStatics</span>().InDamageDef, EvaluateParameters, InDamage);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">auto</span> IsCrit = <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">auto</span> IsLucky = <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">auto</span> CritChance = <span class=\"number\">0.f</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">auto</span> CritMulti = <span class=\"number\">0.f</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">auto</span> LuckyChance = <span class=\"number\">0.f</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\tExecutionParams.<span class=\"built_in\">AttemptCalculateCapturedAttributeMagnitude</span></span><br><span class=\"line\">        (<span class=\"built_in\">DamageStatics</span>().CritChanceDef, EvaluateParameters, CritChance);</span><br><span class=\"line\">    </span><br><span class=\"line\">\t<span class=\"type\">const</span> <span class=\"keyword\">auto</span> Hit = Spec.<span class=\"built_in\">GetContext</span>().<span class=\"built_in\">GetHitResult</span>();</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (Hit &amp;&amp; Hit-&gt;BoneName == <span class=\"string\">&quot;head&quot;</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tCritChance += <span class=\"number\">100.f</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tExecutionParams.<span class=\"built_in\">AttemptCalculateCapturedAttributeMagnitude</span></span><br><span class=\"line\">        (<span class=\"built_in\">DamageStatics</span>().CritMultiDef, EvaluateParameters, CritMulti);</span><br><span class=\"line\">    </span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (CritMulti &gt; <span class=\"number\">1.f</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tIsCrit = FMath::<span class=\"built_in\">RandRange</span>(<span class=\"number\">0.01f</span>, <span class=\"number\">100.f</span>) &lt;= CritChance;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (IsCrit)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tInDamage *= CritMulti;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tExecutionParams.<span class=\"built_in\">AttemptCalculateCapturedAttributeMagnitude</span></span><br><span class=\"line\">        (<span class=\"built_in\">DamageStatics</span>().LuckyChanceDef, EvaluateParameters, LuckyChance);</span><br><span class=\"line\">    </span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (LuckyChance &gt; <span class=\"number\">0.f</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">auto</span> LuckyMulti = <span class=\"number\">1.f</span>;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span> (FMath::<span class=\"built_in\">RandRange</span>(<span class=\"number\">0.01f</span>, <span class=\"number\">100.f</span>) &lt;= LuckyChance)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tLuckyChance -= <span class=\"number\">100.f</span>;</span><br><span class=\"line\">\t\t\tLuckyMulti += <span class=\"number\">1.f</span>;</span><br><span class=\"line\">\t\t\tIsLucky = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (IsLucky)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tInDamage *= LuckyMulti;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tOutExecutionOutput.<span class=\"built_in\">AddOutputModifier</span></span><br><span class=\"line\">        (<span class=\"built_in\">FGameplayModifierEvaluatedData</span>(<span class=\"built_in\">DamageStatics</span>().InDamageProperty, EGameplayModOp::Additive, InDamage));</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"type\">const</span> <span class=\"keyword\">auto</span> MutableSpec = ExecutionParams.<span class=\"built_in\">GetOwningSpecForPreExecuteMod</span>();</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (<span class=\"type\">const</span> <span class=\"keyword\">auto</span> Context = <span class=\"built_in\">static_cast</span>&lt;FGG_GEContext*&gt;(MutableSpec-&gt;<span class=\"built_in\">GetContext</span>().<span class=\"built_in\">Get</span>()))</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tContext-&gt;<span class=\"built_in\">SetIsCriticalHit</span>(IsCrit);</span><br><span class=\"line\">\t\tContext-&gt;<span class=\"built_in\">SetIsLuckyHit</span>(IsLucky);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">// TODO Debug Last Damage</span></span><br><span class=\"line\">\tGEngine-&gt;<span class=\"built_in\">AddOnScreenDebugMessage</span>(<span class=\"number\">-1</span>, <span class=\"number\">3.f</span>, FColor::Blue, FString::<span class=\"built_in\">Printf</span>(<span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;Damage: %f&quot;</span>), InDamage));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<ul>\n<li>对于<code>Local Predicted</code>, <code>Server Only</code>和<code>Server Initiated</code>的<a href=\"https://github.com/FHangH/GASDocumentation_Chinese?tab=readme-ov-file#concepts-ga\">GameplayAbility</a>, <code>ExecCalc</code>只在服务端调用</li>\n<li><code>ExecCalc</code>最普遍的应用场景是计算一个来自很多<code>源(Source)</code>和<code>目标(Target)</code>中<code>Attribute</code>伤害值的复杂公式</li>\n<li>样例项目中有一个简单的<code>ExecCalc</code>用于计算伤害值, 其从<code>GameplayEffectSpec</code>的<a href=\"https://github.com/FHangH/GASDocumentation_Chinese?tab=readme-ov-file#concepts-ge-spec-setbycaller\">SetByCaller</a>中读取伤害值, 之后基于从<code>目标(Target)</code>捕获的护盾<code>Attribute</code>来减少该伤害值</li>\n</ul>\n<h5 id=\"5-12-3-发送数据到GE-ExeCalc\"><a href=\"#5-12-3-发送数据到GE-ExeCalc\" class=\"headerlink\" title=\"5.12.3 发送数据到GE_ExeCalc\"></a>5.12.3 发送数据到GE_ExeCalc</h5><ul>\n<li>除了捕获<code>Attribute</code>, 还有几种方法可以发送数据到<code>ExecutionCalculation</code></li>\n</ul>\n<ol>\n<li>SetByCaller：<ul>\n<li>任何<a href=\"https://github.com/FHangH/GASDocumentation_Chinese?tab=readme-ov-file#concepts-ge-spec-setbycaller\">设置在<code>GameplayEffectSpec</code>中的<code>SetByCaller</code></a>都可以直接在<code>ExecutionCalculation</code>中读取</li>\n</ul>\n</li>\n</ol>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">const</span> FGameplayEffectSpec&amp; Spec = ExecutionParams.<span class=\"built_in\">GetOwningSpec</span>();</span><br><span class=\"line\"><span class=\"type\">float</span> Damage = </span><br><span class=\"line\">    FMath::<span class=\"built_in\">Max</span>&lt;<span class=\"type\">float</span>&gt;(</span><br><span class=\"line\">    \tSpec.<span class=\"built_in\">GetSetByCallerMagnitude</span>(</span><br><span class=\"line\">        \tFGameplayTag::<span class=\"built_in\">RequestGameplayTag</span>(<span class=\"built_in\">FName</span>(<span class=\"string\">&quot;Data.Damage&quot;</span>)), <span class=\"literal\">false</span>, <span class=\"number\">-1.0f</span>), <span class=\"number\">0.0f</span>);</span><br></pre></td></tr></table></figure>\n\n\n\n<ol start=\"2\">\n<li>Backing数据Attribute计算Modifier<ul>\n<li>硬编码值到<code>GameplayEffect</code>, 可以使用<code>CalculationModifier</code>传递</li>\n<li>其使用捕获的<code>Attribute</code>之一作为Backing数据</li>\n</ul>\n</li>\n</ol>\n<p>示例：</p>\n<ul>\n<li>给捕获的伤害值<code>Attribute</code>增加了50, 也可以将其设为<code>Override</code>来直接传入硬编码值</li>\n</ul>\n<p><a href=\"https://raw.githubusercontent.com/BillEliot/GASDocumentation_Chinese/main/Images/calculationmodifierbackingdataattribute.png\"><img src=\"https://raw.githubusercontent.com/BillEliot/GASDocumentation_Chinese/main/Images/calculationmodifierbackingdataattribute.png\" alt=\"Backing Data Attribute Calculation Modifier\"></a></p>\n<p>当<code>ExecutionCalculation</code>捕获该<code>Attribute</code>时会读取这个值</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">float</span> Damage = <span class=\"number\">0.0f</span>;</span><br><span class=\"line\"><span class=\"comment\">// Capture optional damage value set on the damage GE as a CalculationModifier under the ExecutionCalculation</span></span><br><span class=\"line\">ExecutionParams.<span class=\"built_in\">AttemptCalculateCapturedAttributeMagnitude</span>(<span class=\"built_in\">DamageStatics</span>().DamageDef, EvaluationParameters, Damage);</span><br></pre></td></tr></table></figure>\n\n\n\n<ol start=\"3\">\n<li>Backing数据临时变量计算Modifier<ul>\n<li>硬编码值到<code>GameplayEffect</code>, 可以在C++中使用<code>CalculationModifier</code>传递</li>\n<li>其使用一个<code>临时变量</code>或<code>暂时聚合器(Transient Aggregator)</code>, 该<code>临时变量</code>与<code>GameplayTag</code>相关联</li>\n</ul>\n</li>\n</ol>\n<p>示例：</p>\n<ul>\n<li>使用<code>Data.Damage GameplayTag</code>增加50到一个临时变量</li>\n</ul>\n<p><a href=\"https://raw.githubusercontent.com/BillEliot/GASDocumentation_Chinese/main/Images/calculationmodifierbackingdatatempvariable.png\"><img src=\"https://raw.githubusercontent.com/BillEliot/GASDocumentation_Chinese/main/Images/calculationmodifierbackingdatatempvariable.png\" alt=\"Backing Data Temporary Variable Calculation Modifier\"></a></p>\n<p>添加Backing临时变量到你的<code>ExecutionCalculation</code>构造函数：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ValidTransientAggregatorIdentifiers.<span class=\"built_in\">AddTag</span>(FGameplayTag::<span class=\"built_in\">RequestGameplayTag</span>(<span class=\"string\">&quot;Data.Damage&quot;</span>));</span><br></pre></td></tr></table></figure>\n\n<p><code>ExecutionCalculation</code>会使用和<code>Attribute</code>捕获函数相似的特殊捕获函数来读取这个值</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">float</span> Damage = <span class=\"number\">0.0f</span>;</span><br><span class=\"line\">ExecutionParams.<span class=\"built_in\">AttemptCalculateTransientAggregatorMagnitude</span></span><br><span class=\"line\">    (FGameplayTag::<span class=\"built_in\">RequestGameplayTag</span>(<span class=\"string\">&quot;Data.Damage&quot;</span>), EvaluationParameters, Damage);</span><br></pre></td></tr></table></figure>\n\n\n\n<ol start=\"4\">\n<li>GameplayEffectContext<ul>\n<li>通过<a href=\"https://github.com/FHangH/GASDocumentation_Chinese?tab=readme-ov-file#concepts-ge-context\"><code>GameplayEffectSpec</code>中的自定义<code>GameplayEffectContext</code></a>发送数据到<code>ExecutionCalculation</code></li>\n</ul>\n</li>\n</ol>\n<p>示例：</p>\n<p>在<code>ExecutionCalculation</code>中, 你可以自<code>FGameplayEffectCustomExecutionParameters</code>访问<code>EffectContext</code></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">const</span> FGameplayEffectSpec&amp; Spec = ExecutionParams.<span class=\"built_in\">GetOwningSpec</span>();</span><br><span class=\"line\">FGSGameplayEffectContext* ContextHandle = <span class=\"built_in\">static_cast</span>&lt;FGSGameplayEffectContext*&gt;(Spec.<span class=\"built_in\">GetContext</span>().<span class=\"built_in\">Get</span>());</span><br></pre></td></tr></table></figure>\n\n\n\n<p>如果需要修改<code>GameplayEffectSpec</code>中的什么或者<code>EffectContext</code>:</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FGameplayEffectSpec* MutableSpec = ExecutionParams.<span class=\"built_in\">GetOwningSpecForPreExecuteMod</span>();</span><br><span class=\"line\">FGSGameplayEffectContext* ContextHandle = <span class=\"built_in\">static_cast</span>&lt;FGSGameplayEffectContext*&gt;(MutableSpec-&gt;<span class=\"built_in\">GetContext</span>().<span class=\"built_in\">Get</span>());</span><br></pre></td></tr></table></figure>\n\n\n\n<p>在<code>ExecutionCalculation</code>中修改<code>GameplayEffectSpec</code>时要小心. 参看<code>GetOwningSpecForPreExecuteMod()</code>的注释.</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/** Non const access. Be careful with this, especially when modifying a spec after attribute capture. */</span></span><br><span class=\"line\"><span class=\"function\">FGameplayEffectSpec* <span class=\"title\">GetOwningSpecForPreExecuteMod</span><span class=\"params\">()</span> <span class=\"type\">const</span></span>;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"5-13-GE-CAR\"><a href=\"#5-13-GE-CAR\" class=\"headerlink\" title=\"5.13 GE_CAR\"></a>5.13 GE_CAR</h4><ul>\n<li><code>GameplayEffectCustomApplicationRequirement</code>类为设计师提供对于<code>GameplayEffect</code>是否可以应用的高阶控制</li>\n<li>而不是对<code>GameplayEffect</code>进行简单的<code>GameplayTag</code>检查</li>\n<li>这可以通过在蓝图中重写<code>CanApplyGameplayEffect()</code>和在C++中重写<code>CanApplyGameplayEffect_Implementation()</code>实现</li>\n</ul>\n<p><code>UGameplayEffectCustomApplicationRequirement.h</code></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/** 用于通过蓝图或本机代码执行自定义游戏效果修改器计算的类 */</span> </span><br><span class=\"line\"><span class=\"built_in\">UCLASS</span>(BlueprintType, Blueprintable, Abstract)</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">GAMEPLAYABILITIES_API</span> UGameplayEffectCustomApplicationRequirement : <span class=\"keyword\">public</span> UObject</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">GENERATED_UCLASS_BODY</span>()</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">/** 返回是否应用游戏效果 */</span></span><br><span class=\"line\">\t<span class=\"built_in\">UFUNCTION</span>(BlueprintNativeEvent, Category=<span class=\"string\">&quot;Calculation&quot;</span>)</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">CanApplyGameplayEffect</span><span class=\"params\">(<span class=\"type\">const</span> UGameplayEffect* GameplayEffect, <span class=\"type\">const</span> FGameplayEffectSpec&amp; Spec, </span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">                                UAbilitySystemComponent* ASC)</span> <span class=\"type\">const</span></span>;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n\n\n<p>应用条件和场景：</p>\n<ul>\n<li>目标需要有一定数量的<code>Attribute</code></li>\n<li>目标需要有一定数量的<code>GameplayEffect</code>堆栈</li>\n</ul>\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">补充说明</p>\n<ul>\n<li><code>GE_CAR</code>还有很多高阶功能, 像检查<code>GameplayEffect</code>实例是否已经位于目标上</li>\n<li>修改当前实例的<a href=\"https://github.com/FHangH/GASDocumentation_Chinese?tab=readme-ov-file#concepts-ge-duration\">持续时间</a>而不是应用一个新实例(对于<code>CanApplyGameplayEffect()</code>返回false)</li>\n</ul>\n\n</div>\n<h4 id=\"5-14-GE-Cost\"><a href=\"#5-14-GE-Cost\" class=\"headerlink\" title=\"5.14 GE_Cost\"></a>5.14 GE_Cost</h4><h5 id=\"5-14-1-Cost概念\"><a href=\"#5-14-1-Cost概念\" class=\"headerlink\" title=\"5.14.1 Cost概念\"></a>5.14.1 Cost概念</h5><ul>\n<li><a href=\"https://github.com/FHangH/GASDocumentation_Chinese?tab=readme-ov-file#concepts-ga\">GameplayAbility</a>有一个特别设计用来作为Ability花费(Cost)的可选<code>GameplayEffect</code></li>\n<li>花费(Cost)是指<code>ASC</code>激活<code>GameplayAbility</code>所必需的<code>Attribute</code>量</li>\n<li>如果某个<code>GA</code>不能提供<code>Cost GE</code>, 那么它就不能被激活</li>\n<li>该<code>Cost GE</code>应该是某个带有一个或多个自<code>Attribute</code>中减值Modifier的<code>即刻(Instant)GameplayEffect</code></li>\n<li>默认情况下, <code>Cost GE</code>是可以被预测的, 建议保留该功能, 也就是不要使用<code>ExecutionCalculations</code></li>\n<li><code>MMC</code>对于复杂的花费计算是完美适配并且鼓励使用的</li>\n</ul>\n<h5 id=\"5-14-2-Cost复用\"><a href=\"#5-14-2-Cost复用\" class=\"headerlink\" title=\"5.14.2 Cost复用\"></a>5.14.2 Cost复用</h5><ul>\n<li>一个更高阶的技巧是对多个<code>GA</code>复用一个<code>Cost GE</code></li>\n<li>只需修改自<code>GA</code>的<code>Cost GE</code>创建的<code>GameplayEffectSpec</code>中指定的数据(花费值是在<code>GA</code>上定义的)</li>\n</ul>\n<div class=\"custom-quote warning\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 8V13\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 15.99V16.01\"></path>\n</svg>\n</span>\n<p class=\"custom-quote-title\">注意</p>\n<p><p>这只作用于<code>实例化(Instanced)</code>的Ability</p>\n</p>\n</div>\n<p>复用技巧：</p>\n<ol>\n<li>使用<code>MMC</code>. 这是最简单的方式. 创建一个从<code>GameplayAbility</code>实例读取花费值的<a href=\"https://github.com/FHangH/GASDocumentation_Chinese?tab=readme-ov-file#concepts-ge-mmc\">MMC</a>, 你可以从<code>GameplayEffectSpec</code>中获取到该实例</li>\n</ol>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">float</span> <span class=\"title\">UPGMMC_HeroAbilityCost::CalculateBaseMagnitude_Implementation</span><span class=\"params\">(<span class=\"type\">const</span> FGameplayEffectSpec &amp; Spec)</span> <span class=\"type\">const</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">const</span> UPGGameplayAbility* Ability = <span class=\"built_in\">Cast</span>&lt;UPGGameplayAbility&gt;(Spec.<span class=\"built_in\">GetContext</span>().<span class=\"built_in\">GetAbilityInstance_NotReplicated</span>());</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!Ability)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"number\">0.0f</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> Ability-&gt;Cost.<span class=\"built_in\">GetValueAtLevel</span>(Ability-&gt;<span class=\"built_in\">GetAbilityLevel</span>());</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>在这个例子中, 花费值是一个添加到<code>GameplayAbility</code>子类上的<code>FScalableFloat</code>.</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">UPROPERTY</span>(BlueprintReadOnly, EditAnywhere, Category = <span class=\"string\">&quot;Cost&quot;</span>)</span><br><span class=\"line\">FScalableFloat Cost;</span><br></pre></td></tr></table></figure>\n\n<p><a href=\"https://raw.githubusercontent.com/BillEliot/GASDocumentation_Chinese/main/Images/costmmc.png\"><img src=\"https://raw.githubusercontent.com/BillEliot/GASDocumentation_Chinese/main/Images/costmmc.png\" alt=\"Cost GE With MMC\"></a></p>\n<ol start=\"2\">\n<li><strong>重写<code>UGameplayAbility::GetCostGameplayEffect()</code>.</strong> 重写该函数并在<a href=\"https://github.com/FHangH/GASDocumentation_Chinese?tab=readme-ov-file#concepts-ge-dynamic\">运行时</a>创建一个用来读取<code>GameplayAbility</code>中花费值的<code>GameplayEffect</code>.</li>\n</ol>\n<h4 id=\"5-15-GE-CD\"><a href=\"#5-15-GE-CD\" class=\"headerlink\" title=\"5.15 GE_CD\"></a>5.15 GE_CD</h4><h5 id=\"5-15-1-Cooldown概念\"><a href=\"#5-15-1-Cooldown概念\" class=\"headerlink\" title=\"5.15.1 Cooldown概念\"></a>5.15.1 Cooldown概念</h5><ul>\n<li><a href=\"https://github.com/FHangH/GASDocumentation_Chinese?tab=readme-ov-file#concepts-ga\">GameplayAbility</a>有一个特别设计用来作为Ability冷却(Cooldown)的可选<code>GameplayEffect</code></li>\n<li>冷却时间决定了激活Ability之后多久可以再次激活</li>\n<li>如果某个<code>GA</code>在冷却中, 那么它就不能被激活</li>\n<li>该<code>Cooldown GE</code>应该是一个不带有<code>Modifier</code>的<code>持续(Duration)GameplayEffect</code></li>\n<li>并且在<code>GameplayEffect</code>的<code>GrantedTags</code>中每个<code>GameplayAbility</code>或Ability插槽(Slot)(如果你的游戏有分配到插槽的可交换Ability且共享同一个冷却)都有一个独一无二的<code>GameplayTag</code>(<code>Cooldown Tag</code>)</li>\n<li><code>GA</code>实际上会检查<code>Cooldown Tag</code>的存在而不是<code>Cooldown GE</code>的存在</li>\n<li>默认情况下, <code>Cooldown GE</code>是可以被预测的, 建议保留该功能, 也就是不要使用<code>ExecutionCalculations</code>, <code>MMC</code>对于复杂的冷却计算是完美适配并且鼓励使用的</li>\n</ul>\n<h5 id=\"5-15-2-Cooldown复用\"><a href=\"#5-15-2-Cooldown复用\" class=\"headerlink\" title=\"5.15.2 Cooldown复用\"></a>5.15.2 Cooldown复用</h5><ul>\n<li>一个更高阶的技巧是对多个<code>GA</code>复用一个<code>Cooldown GE</code></li>\n<li>只需修改自<code>GA</code>的<code>Cooldown GE</code>创建的<code>GameplayEffectSpec</code>中指定的数据(冷却时间和<code>Cooldown Tag</code>是在<code>GA</code>上定义的)</li>\n</ul>\n<div class=\"custom-quote warning\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 8V13\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 15.99V16.01\"></path>\n</svg>\n</span>\n<p class=\"custom-quote-title\">注意</p>\n<p>这只作用于<code>实例化(Instanced)</code>的Ability</p>\n\n</div>\n<p>复用技巧：</p>\n<ol>\n<li>使用<a href=\"https://github.com/FHangH/GASDocumentation_Chinese?tab=readme-ov-file#concepts-ge-spec-setbycaller\">SetByCaller</a>：<ul>\n<li>这是最简单的方式</li>\n<li>使用<code>GameplayTag</code>设置<code>SetByCaller</code>为共享<code>Cooldown GE</code>的持续时间</li>\n<li>在<code>GameplayAbility</code>子类中, 为持续时间定义一个浮点&#x2F;<code>FScalableFloat</code>变量</li>\n<li>为独一无二的<code>Cooldown Tag</code>定义一个<code>FGameplayTagContainer</code></li>\n<li>除此之外还要定义一个临时<code>FGameplayTagContainer</code></li>\n<li>其用来作为<code>Cooldown Tag</code>与<code>Cooldown GE</code>标签并集的返回指针</li>\n</ul>\n</li>\n</ol>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">UPROPERTY</span>(BlueprintReadOnly, EditAnywhere, Category = <span class=\"string\">&quot;Cooldown&quot;</span>)</span><br><span class=\"line\">FScalableFloat CooldownDuration;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">UPROPERTY</span>(BlueprintReadOnly, EditAnywhere, Category = <span class=\"string\">&quot;Cooldown&quot;</span>)</span><br><span class=\"line\">FGameplayTagContainer CooldownTags;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Temp container that we will return the pointer to in GetCooldownTags().</span></span><br><span class=\"line\"><span class=\"comment\">// This will be a union of our CooldownTags and the Cooldown GE&#x27;s cooldown tags.</span></span><br><span class=\"line\"><span class=\"built_in\">UPROPERTY</span>()</span><br><span class=\"line\">FGameplayTagContainer TempCooldownTags;</span><br></pre></td></tr></table></figure>\n\n<p>之后重写<code>UGameplayAbility::GetCooldownTags()</code>以返回<code>Cooldown Tag</code>和所有现有<code>Cooldown GE</code>标签的并集</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">const</span> FGameplayTagContainer * <span class=\"title\">UPGGameplayAbility::GetCooldownTags</span><span class=\"params\">()</span> <span class=\"type\">const</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tFGameplayTagContainer* MutableTags = <span class=\"built_in\">const_cast</span>&lt;FGameplayTagContainer*&gt;(&amp;TempCooldownTags);</span><br><span class=\"line\">\t<span class=\"type\">const</span> FGameplayTagContainer* ParentTags = Super::<span class=\"built_in\">GetCooldownTags</span>();</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (ParentTags)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tMutableTags-&gt;<span class=\"built_in\">AppendTags</span>(*ParentTags);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tMutableTags-&gt;<span class=\"built_in\">AppendTags</span>(CooldownTags);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> MutableTags;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>最后, 重写<code>UGameplayAbility::ApplyCooldown()</code>以注入我们自己的<code>Cooldown Tag</code>, 并将<code>SetByCaller</code>添加到<code>Cooldown GameplayEffectSpec</code></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">UPGGameplayAbility::ApplyCooldown</span><span class=\"params\">(<span class=\"type\">const</span> FGameplayAbilitySpecHandle Handle, <span class=\"type\">const</span> FGameplayAbilityActorInfo * </span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">                                       ActorInfo, <span class=\"type\">const</span> FGameplayAbilityActivationInfo ActivationInfo)</span> <span class=\"type\">const</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tUGameplayEffect* CooldownGE = <span class=\"built_in\">GetCooldownGameplayEffect</span>();</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (CooldownGE)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tFGameplayEffectSpecHandle SpecHandle = </span><br><span class=\"line\">            <span class=\"built_in\">MakeOutgoingGameplayEffectSpec</span>(CooldownGE-&gt;<span class=\"built_in\">GetClass</span>(), <span class=\"built_in\">GetAbilityLevel</span>());</span><br><span class=\"line\">        </span><br><span class=\"line\">\t\tSpecHandle.Data.<span class=\"built_in\">Get</span>()-&gt;DynamicGrantedTags.<span class=\"built_in\">AppendTags</span>(CooldownTags);</span><br><span class=\"line\">        </span><br><span class=\"line\">\t\tSpecHandle.Data.<span class=\"built_in\">Get</span>()-&gt;<span class=\"built_in\">SetSetByCallerMagnitude</span>(</span><br><span class=\"line\">            FGameplayTag::<span class=\"built_in\">RequestGameplayTag</span>(<span class=\"built_in\">FName</span>(OurSetByCallerTag)), </span><br><span class=\"line\">            CooldownDuration.<span class=\"built_in\">GetValueAtLevel</span>(<span class=\"built_in\">GetAbilityLevel</span>()));</span><br><span class=\"line\">        </span><br><span class=\"line\">\t\t<span class=\"built_in\">ApplyGameplayEffectSpecToOwner</span>(Handle, ActorInfo, ActivationInfo, SpecHandle);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>下面图片中, 冷却时间<code>Modifier</code>被设置为<code>SetByCaller</code>, 其<code>Data Tag</code>为<code>Data.Cooldown</code>. <code>Data.Cooldown</code>就是上面代码中的<code>OurSetByCallerTag</code></p>\n<p><a href=\"https://raw.githubusercontent.com/BillEliot/GASDocumentation_Chinese/main/Images/cooldownsbc.png\"><img src=\"https://raw.githubusercontent.com/BillEliot/GASDocumentation_Chinese/main/Images/cooldownsbc.png\" alt=\"Cooldown GE with SetByCaller\"></a></p>\n<ol start=\"2\">\n<li>使用<a href=\"https://github.com/FHangH/GASDocumentation_Chinese?tab=readme-ov-file#concepts-ge-mmc\">MMC</a><ul>\n<li>它的设置与上文所提的一致, 除了不需要在<code>Cooldown GE</code>和<code>ApplyCost</code>中设置<code>SetByCaller</code>作为持续时间</li>\n<li>相反, 我们需要将持续时间设置为<code>Custom Calculation类</code>并将其指向新创建的<code>MMC</code></li>\n</ul>\n</li>\n</ol>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">UPROPERTY</span>(BlueprintReadOnly, EditAnywhere, Category = <span class=\"string\">&quot;Cooldown&quot;</span>)</span><br><span class=\"line\">FScalableFloat CooldownDuration;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">UPROPERTY</span>(BlueprintReadOnly, EditAnywhere, Category = <span class=\"string\">&quot;Cooldown&quot;</span>)</span><br><span class=\"line\">FGameplayTagContainer CooldownTags;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Temp container that we will return the pointer to in GetCooldownTags().</span></span><br><span class=\"line\"><span class=\"comment\">// This will be a union of our CooldownTags and the Cooldown GE&#x27;s cooldown tags.</span></span><br><span class=\"line\"><span class=\"built_in\">UPROPERTY</span>()</span><br><span class=\"line\">FGameplayTagContainer TempCooldownTags;</span><br></pre></td></tr></table></figure>\n\n<p>之后重写<code>UGameplayAbility::GetCooldownTags()</code>以返回<code>Cooldown Tag</code>和所有现有<code>Cooldown GE</code>标签的并集.</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">const</span> FGameplayTagContainer * <span class=\"title\">UPGGameplayAbility::GetCooldownTags</span><span class=\"params\">()</span> <span class=\"type\">const</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tFGameplayTagContainer* MutableTags = <span class=\"built_in\">const_cast</span>&lt;FGameplayTagContainer*&gt;(&amp;TempCooldownTags);</span><br><span class=\"line\">\t<span class=\"type\">const</span> FGameplayTagContainer* ParentTags = Super::<span class=\"built_in\">GetCooldownTags</span>();</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (ParentTags)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tMutableTags-&gt;<span class=\"built_in\">AppendTags</span>(*ParentTags);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tMutableTags-&gt;<span class=\"built_in\">AppendTags</span>(CooldownTags);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> MutableTags;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>最后, 重写<code>UGameplayAbility::ApplyCooldown()</code>以将我们的<code>Cooldown Tag</code>注入<code>Cooldown GameplayEffectSpec</code>.</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">UPGGameplayAbility::ApplyCooldown</span><span class=\"params\">(<span class=\"type\">const</span> FGameplayAbilitySpecHandle Handle, <span class=\"type\">const</span> FGameplayAbilityActorInfo *</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">                                       ActorInfo, <span class=\"type\">const</span> FGameplayAbilityActivationInfo ActivationInfo)</span> <span class=\"type\">const</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tUGameplayEffect* CooldownGE = <span class=\"built_in\">GetCooldownGameplayEffect</span>();</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (CooldownGE)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tFGameplayEffectSpecHandle SpecHandle = </span><br><span class=\"line\">            <span class=\"built_in\">MakeOutgoingGameplayEffectSpec</span>(CooldownGE-&gt;<span class=\"built_in\">GetClass</span>(), <span class=\"built_in\">GetAbilityLevel</span>());</span><br><span class=\"line\">        </span><br><span class=\"line\">\t\tSpecHandle.Data.<span class=\"built_in\">Get</span>()-&gt;DynamicGrantedTags.<span class=\"built_in\">AppendTags</span>(CooldownTags);</span><br><span class=\"line\">\t\t<span class=\"built_in\">ApplyGameplayEffectSpecToOwner</span>(Handle, ActorInfo, ActivationInfo, SpecHandle);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">float</span> <span class=\"title\">UPGMMC_HeroAbilityCooldown::CalculateBaseMagnitude_Implementation</span><span class=\"params\">(<span class=\"type\">const</span> FGameplayEffectSpec &amp; Spec)</span> <span class=\"type\">const</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">const</span> UPGGameplayAbility* Ability = <span class=\"built_in\">Cast</span>&lt;UPGGameplayAbility&gt;(Spec.<span class=\"built_in\">GetContext</span>().<span class=\"built_in\">GetAbilityInstance_NotReplicated</span>());</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!Ability)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"number\">0.0f</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> Ability-&gt;CooldownDuration.<span class=\"built_in\">GetValueAtLevel</span>(Ability-&gt;<span class=\"built_in\">GetAbilityLevel</span>());</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><a href=\"https://raw.githubusercontent.com/BillEliot/GASDocumentation_Chinese/main/Images/cooldownmmc.png\"><img src=\"https://raw.githubusercontent.com/BillEliot/GASDocumentation_Chinese/main/Images/cooldownmmc.png\" alt=\"Cooldown GE with MMC\"></a></p>\n<h5 id=\"5-15-3-Cooldown剩余时间\"><a href=\"#5-15-3-Cooldown剩余时间\" class=\"headerlink\" title=\"5.15.3 Cooldown剩余时间\"></a>5.15.3 Cooldown剩余时间</h5><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">APGPlayerState::GetCooldownRemainingForTag</span><span class=\"params\">(FGameplayTagContainer CooldownTags, <span class=\"type\">float</span> &amp; TimeRemaining, <span class=\"type\">float</span> &amp; </span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">                                                CooldownDuration)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (AbilitySystemComponent &amp;&amp; CooldownTags.<span class=\"built_in\">Num</span>() &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tTimeRemaining = <span class=\"number\">0.f</span>;</span><br><span class=\"line\">\t\tCooldownDuration = <span class=\"number\">0.f</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tFGameplayEffectQuery <span class=\"type\">const</span> Query = FGameplayEffectQuery::<span class=\"built_in\">MakeQuery_MatchAnyOwningTags</span>(CooldownTags);</span><br><span class=\"line\">        </span><br><span class=\"line\">\t\tTArray&lt; TPair&lt;<span class=\"type\">float</span>, <span class=\"type\">float</span>&gt; &gt; DurationAndTimeRemaining = </span><br><span class=\"line\">            AbilitySystemComponent-&gt;<span class=\"built_in\">GetActiveEffectsTimeRemainingAndDuration</span>(Query);</span><br><span class=\"line\">        </span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (DurationAndTimeRemaining.<span class=\"built_in\">Num</span>() &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tint32 BestIdx = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t\t<span class=\"type\">float</span> LongestTime = DurationAndTimeRemaining[<span class=\"number\">0</span>].Key;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (int32 Idx = <span class=\"number\">1</span>; Idx &lt; DurationAndTimeRemaining.<span class=\"built_in\">Num</span>(); ++Idx)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (DurationAndTimeRemaining[Idx].Key &gt; LongestTime)</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\tLongestTime = DurationAndTimeRemaining[Idx].Key;</span><br><span class=\"line\">\t\t\t\t\tBestIdx = Idx;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tTimeRemaining = DurationAndTimeRemaining[BestIdx].Key;</span><br><span class=\"line\">\t\t\tCooldownDuration = DurationAndTimeRemaining[BestIdx].Value;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<div class=\"custom-quote warning\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 8V13\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 15.99V16.01\"></path>\n</svg>\n</span>\n<p class=\"custom-quote-title\">注意</p>\n<p><p>在客户端上查询剩余冷却时间要求其可以接收同步的<code>GameplayEffect</code>, 这依赖于它们<code>ASC</code>的<a href=\"https://github.com/FHangH/GASDocumentation_Chinese?tab=readme-ov-file#concepts-asc-rm\">同步模式</a></p>\n</p>\n</div>\n<h5 id=\"5-15-4-Cooldown回调\"><a href=\"#5-15-4-Cooldown回调\" class=\"headerlink\" title=\"5.15.4 Cooldown回调\"></a>5.15.4 Cooldown回调</h5><p>监听某个冷却何时开始：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">AbilitySystemComponent-&gt;<span class=\"built_in\">OnActiveGameplayEffectAddedDelegateToSelf</span>()</span><br><span class=\"line\"></span><br><span class=\"line\">AbilitySystemComponent-&gt;<span class=\"built_in\">RegisterGameplayTagEvent</span>(CooldownTag, EGameplayTagEventType::NewOrRemoved)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>分别在<code>Cooldown GE</code>应用和<code>Cooldown Tag</code>添加时作出响应</li>\n<li>建议监听<code>Cooldown GE</code>何时应用, 因为这时还可以访问应用它的<code>GameplayEffectSpec</code></li>\n<li>可以确定当前<code>Cooldown GE</code>是客户端预测的还是由服务端校正的</li>\n</ul>\n<p>监听某个冷却何时结束：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">AbilitySystemComponent-&gt;<span class=\"built_in\">OnAnyGameplayEffectRemovedDelegate</span>()</span><br><span class=\"line\">    </span><br><span class=\"line\">AbilitySystemComponent-&gt;<span class=\"built_in\">RegisterGameplayTagEvent</span>(CooldownTag, EGameplayTagEventType::NewOrRemoved)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>分别在<code>Cooldown GE</code>移除和<code>Cooldown Tag</code>移除时作出响应</li>\n<li>建议监听<code>Cooldown Tag</code>何时移除, 因为当服务端校正的<code>Cooldown GE</code>到来时, 会移除客户端预测的<code>Cooldown GE</code></li>\n<li>这会响应<code>OnAnyGameplayEffectRemovedDelegate()</code>, 即使仍处于冷却过程中</li>\n<li>预测的<code>Cooldown GE</code>在移除时和服务端校正的<code>Cooldown GE</code>在应用时<code>Cooldown Tag</code>都不会改变</li>\n</ul>\n<div class=\"custom-quote warning\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 8V13\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 15.99V16.01\"></path>\n</svg>\n</span>\n<p class=\"custom-quote-title\">注意</p>\n<p>在客户端上监听某个<code>GameplayEffect</code>添加或移除要求其可以接收同步的<code>GameplayEffect</code>, 这依赖于它们<code>ASC</code>的<a href=\"https://github.com/FHangH/GASDocumentation_Chinese?tab=readme-ov-file#concepts-asc-rm\">同步模式</a></p>\n\n</div>\n<ul>\n<li>样例项目包含一个用于监听冷却开始和结束的自定义蓝图节点</li>\n<li>HUD UMG Widget使用它来更新陨石技能的剩余冷却时间</li>\n<li>该<code>AsyncTask</code>会一直响应直到手动调用<code>EndTask()</code>, 就像在UMG Widget的<code>Destruct</code>事件中调用那样</li>\n<li>参阅<code>AsyncTaskAttributeChanged.h/cpp</code>.</li>\n</ul>\n<p><a href=\"https://raw.githubusercontent.com/BillEliot/GASDocumentation_Chinese/main/Images/cooldownchange.png\"><img src=\"https://raw.githubusercontent.com/BillEliot/GASDocumentation_Chinese/main/Images/cooldownchange.png\" alt=\"Listen for Cooldown Change BP Node\"></a></p>\n<h4 id=\"5-16-修改已激活GE持续时间\"><a href=\"#5-16-修改已激活GE持续时间\" class=\"headerlink\" title=\"5.16 修改已激活GE持续时间\"></a>5.16 修改已激活GE持续时间</h4><ul>\n<li>为了修改<code>Cooldown GE</code>或其他任何<code>持续(Duration)</code>GameplayEffect的剩余时间</li>\n<li>需要修改<code>GameplayEffectSpec</code>的持续时间</li>\n<li>更新它的<code>StartServerWorldTime</code>, <code>CachedStartServerWorldTime</code>, <code>StartWorldTime</code></li>\n<li>并且使用<code>CheckDuration()</code>重新检查持续时间</li>\n<li>在服务端上完成这些操作并将<code>FActiveGameplayEffect</code>标记为dirty, 其会将这些修改同步到客户端</li>\n</ul>\n<div class=\"custom-quote warning\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 8V13\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 15.99V16.01\"></path>\n</svg>\n</span>\n<p class=\"custom-quote-title\">注意</p>\n<p><p>该操作包含一个<code>const_cast</code>, 这可能不是<code>Epic</code>希望的修改持续时间的方法, 但是迄今为止它看起来运行得很好</p>\n</p>\n</div>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">UPAAbilitySystemComponent::SetGameplayEffectDurationHandle</span><span class=\"params\">(FActiveGameplayEffectHandle Handle, <span class=\"type\">float</span> NewDuration)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!Handle.<span class=\"built_in\">IsValid</span>())</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"type\">const</span> FActiveGameplayEffect* ActiveGameplayEffect = <span class=\"built_in\">GetActiveGameplayEffect</span>(Handle);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!ActiveGameplayEffect)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tFActiveGameplayEffect* AGE = <span class=\"built_in\">const_cast</span>&lt;FActiveGameplayEffect*&gt;(ActiveGameplayEffect);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (NewDuration &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tAGE-&gt;Spec.Duration = NewDuration;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tAGE-&gt;Spec.Duration = <span class=\"number\">0.01f</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tAGE-&gt;StartServerWorldTime = ActiveGameplayEffects.<span class=\"built_in\">GetServerWorldTime</span>();</span><br><span class=\"line\">\tAGE-&gt;CachedStartServerWorldTime = AGE-&gt;StartServerWorldTime;</span><br><span class=\"line\">\tAGE-&gt;StartWorldTime = ActiveGameplayEffects.<span class=\"built_in\">GetWorldTime</span>();</span><br><span class=\"line\">\tActiveGameplayEffects.<span class=\"built_in\">MarkItemDirty</span>(*AGE);</span><br><span class=\"line\">\tActiveGameplayEffects.<span class=\"built_in\">CheckDuration</span>(Handle);</span><br><span class=\"line\"></span><br><span class=\"line\">\tAGE-&gt;EventSet.OnTimeChanged.<span class=\"built_in\">Broadcast</span>(AGE-&gt;Handle, AGE-&gt;StartWorldTime, AGE-&gt;<span class=\"built_in\">GetDuration</span>());</span><br><span class=\"line\">\t<span class=\"built_in\">OnGameplayEffectDurationChange</span>(*AGE);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"5-17-动态创建GE\"><a href=\"#5-17-动态创建GE\" class=\"headerlink\" title=\"5.17 动态创建GE\"></a>5.17 动态创建GE</h4><ul>\n<li>在运行时创建动态<code>GameplayEffect</code>是一个高阶技术, 不必经常使用它</li>\n</ul>\n<div class=\"custom-quote warning\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 8V13\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 15.99V16.01\"></path>\n</svg>\n</span>\n<p class=\"custom-quote-title\">注意</p>\n<ul>\n<li>只有<code>即刻(Instant)GameplayEffect</code>可以在运行时由C++创建</li>\n<li><code>持续(Duration)</code>和<code>无限(Infinite)</code>GameplayEffect不能在运行时动态创建</li>\n<li>因为它们在同步时会寻找并不存在的<code>GameplayEffect</code>类定义</li>\n<li>为了实现该功能, 你应该创建一个原型<code>GameplayEffect</code>类</li>\n<li>就像平时在编辑器中做的那样, 之后根据运行时所需来定制化<code>GameplayEffectSpec</code></li>\n</ul>\n\n</div>\n<ul>\n<li>运行时创建的<code>即刻(Instant)GameplayEffect</code>也可以在客户端<a href=\"https://github.com/FHangH/GASDocumentation_Chinese?tab=readme-ov-file#concepts-p\">预测</a>的<code>GameplayAbility</code>中调用</li>\n<li>然而, 目前还不明确动态创建是否有副作用</li>\n</ul>\n<p>示例1：</p>\n<ul>\n<li>在角色<code>AttributeSet</code>中的值受到致命一击时创建该<code>GameplayEffect</code>来将金币和经验点数返还给击杀者</li>\n</ul>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Create a dynamic instant Gameplay Effect to give the bounties</span></span><br><span class=\"line\">UGameplayEffect* GEBounty = <span class=\"built_in\">NewObject</span>&lt;UGameplayEffect&gt;(<span class=\"built_in\">GetTransientPackage</span>(), <span class=\"built_in\">FName</span>(<span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;Bounty&quot;</span>)));</span><br><span class=\"line\">GEBounty-&gt;DurationPolicy = EGameplayEffectDurationType::Instant;</span><br><span class=\"line\"></span><br><span class=\"line\">int32 Idx = GEBounty-&gt;Modifiers.<span class=\"built_in\">Num</span>();</span><br><span class=\"line\">GEBounty-&gt;Modifiers.<span class=\"built_in\">SetNum</span>(Idx + <span class=\"number\">2</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">FGameplayModifierInfo&amp; InfoXP = GEBounty-&gt;Modifiers[Idx];</span><br><span class=\"line\">InfoXP.ModifierMagnitude = <span class=\"built_in\">FScalableFloat</span>(<span class=\"built_in\">GetXPBounty</span>());</span><br><span class=\"line\">InfoXP.ModifierOp = EGameplayModOp::Additive;</span><br><span class=\"line\">InfoXP.Attribute = UGDAttributeSetBase::<span class=\"built_in\">GetXPAttribute</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">FGameplayModifierInfo&amp; InfoGold = GEBounty-&gt;Modifiers[Idx + <span class=\"number\">1</span>];</span><br><span class=\"line\">InfoGold.ModifierMagnitude = <span class=\"built_in\">FScalableFloat</span>(<span class=\"built_in\">GetGoldBounty</span>());</span><br><span class=\"line\">InfoGold.ModifierOp = EGameplayModOp::Additive;</span><br><span class=\"line\">InfoGold.Attribute = UGDAttributeSetBase::<span class=\"built_in\">GetGoldAttribute</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">Source-&gt;<span class=\"built_in\">ApplyGameplayEffectToSelf</span>(GEBounty, <span class=\"number\">1.0f</span>, Source-&gt;<span class=\"built_in\">MakeEffectContext</span>());</span><br></pre></td></tr></table></figure>\n\n\n\n<p>示例2：</p>\n<ul>\n<li>一个客户端预测的<code>GameplayAbility</code>中创建运行时<code>GameplayEffect</code>, 使用风险自负</li>\n</ul>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">UGameplayAbilityRuntimeGE::<span class=\"built_in\">UGameplayAbilityRuntimeGE</span>()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tNetExecutionPolicy = EGameplayAbilityNetExecutionPolicy::LocalPredicted;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">UGameplayAbilityRuntimeGE::ActivateAbility</span><span class=\"params\">(<span class=\"type\">const</span> FGameplayAbilitySpecHandle Handle, <span class=\"type\">const</span> FGameplayAbilityActorInfo* ActorInfo, <span class=\"type\">const</span> FGameplayAbilityActivationInfo ActivationInfo, <span class=\"type\">const</span> FGameplayEventData* TriggerEventData)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (<span class=\"built_in\">HasAuthorityOrPredictionKey</span>(ActorInfo, &amp;ActivationInfo))</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (!<span class=\"built_in\">CommitAbility</span>(Handle, ActorInfo, ActivationInfo))</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">EndAbility</span>(Handle, ActorInfo, ActivationInfo, <span class=\"literal\">true</span>, <span class=\"literal\">true</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">// Create the GE at runtime.</span></span><br><span class=\"line\">\t\tUGameplayEffect* GameplayEffect = <span class=\"built_in\">NewObject</span>&lt;UGameplayEffect&gt;(<span class=\"built_in\">GetTransientPackage</span>(), <span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;RuntimeInstantGE&quot;</span>));</span><br><span class=\"line\">\t\tGameplayEffect-&gt;DurationPolicy = EGameplayEffectDurationType::Instant; <span class=\"comment\">// Only instant works with runtime GE.</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">// Add a simple scalable float modifier, which overrides MyAttribute with 42.</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// In real world applications, consume information passed via TriggerEventData.</span></span><br><span class=\"line\">\t\t<span class=\"type\">const</span> int32 Idx = GameplayEffect-&gt;Modifiers.<span class=\"built_in\">Num</span>();</span><br><span class=\"line\">\t\tGameplayEffect-&gt;Modifiers.<span class=\"built_in\">SetNum</span>(Idx + <span class=\"number\">1</span>);</span><br><span class=\"line\">\t\tFGameplayModifierInfo&amp; ModifierInfo = GameplayEffect-&gt;Modifiers[Idx];</span><br><span class=\"line\">\t\tModifierInfo.Attribute.<span class=\"built_in\">SetUProperty</span>(UMyAttributeSet::<span class=\"built_in\">GetMyModifiedAttribute</span>());</span><br><span class=\"line\">\t\tModifierInfo.ModifierMagnitude = <span class=\"built_in\">FScalableFloat</span>(<span class=\"number\">42.f</span>);</span><br><span class=\"line\">\t\tModifierInfo.ModifierOp = EGameplayModOp::Override;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">// Apply the GE.</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">// Create the GESpec here to avoid the behavior of ASC to create GESpecs from the GE class default object.</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// Since we have a dynamic GE here, this would create a GESpec with the base GameplayEffect class, so we</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// would lose our modifiers. Attention: It is unknown, if this &quot;hack&quot; done here can have drawbacks!</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// The spec prevents the GE object being collected by the GarbageCollector, since the GE is a UPROPERTY on the spec.</span></span><br><span class=\"line\">\t\tFGameplayEffectSpec* GESpec = <span class=\"keyword\">new</span> <span class=\"built_in\">FGameplayEffectSpec</span>(GameplayEffect, &#123;&#125;, <span class=\"number\">0.f</span>); <span class=\"comment\">// &quot;new&quot;, since lifetime is managed by a shared ptr within the handle</span></span><br><span class=\"line\">\t\t<span class=\"built_in\">ApplyGameplayEffectSpecToOwner</span>(Handle, ActorInfo, ActivationInfo, <span class=\"built_in\">FGameplayEffectSpecHandle</span>(GESpec));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">EndAbility</span>(Handle, ActorInfo, ActivationInfo, <span class=\"literal\">false</span>, <span class=\"literal\">false</span>);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n","feature":true,"text":"UE5 GAS[toc] 0. 整体概念 提示 一切都来自AbilitySystemComponent，简称：ASC 相关简称 AbilitySystemCom...","permalink":"/post/7_14_UE5_GAS","photos":[],"count_time":{"symbolsCount":"78k","symbolsTime":"1:11"},"categories":[{"name":"UnrealEngine","slug":"UnrealEngine","count":15,"path":"api/categories/UnrealEngine.json"}],"tags":[{"name":"UnrealEngine","slug":"UnrealEngine","count":15,"path":"api/tags/UnrealEngine.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#UE5-GAS\"><span class=\"toc-text\">UE5 GAS</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0-%E6%95%B4%E4%BD%93%E6%A6%82%E5%BF%B5\"><span class=\"toc-text\">0. 整体概念</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E4%BD%BF%E7%94%A8GAS\"><span class=\"toc-text\">1. 使用GAS</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E6%B7%BB%E5%8A%A0%E5%92%8C%E5%88%9D%E5%A7%8B%E5%8C%96\"><span class=\"toc-text\">2. 添加和初始化</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-1-%E6%B7%BB%E5%8A%A0ASC\"><span class=\"toc-text\">2.1 添加ASC</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-2-%E5%88%9D%E5%A7%8B%E5%8C%96ASC\"><span class=\"toc-text\">2.2 初始化ASC</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-3-%E6%B7%BB%E5%8A%A0%E8%AE%BF%E9%97%AE%E6%8E%A5%E5%8F%A3\"><span class=\"toc-text\">2.3 添加访问接口</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-4-%E5%A2%9E%E5%BC%BA%E8%BE%93%E5%85%A5%E7%BB%91%E5%AE%9A\"><span class=\"toc-text\">2.4 增强输入绑定</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-Attribute%E5%92%8CAS\"><span class=\"toc-text\">3. Attribute和AS</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-1-Attribute%E5%AE%9A%E4%B9%89\"><span class=\"toc-text\">3.1 Attribute定义</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-2-Attribute%E6%A6%82%E5%BF%B5\"><span class=\"toc-text\">3.2 Attribute概念</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#3-2-1-Base%E5%92%8CCurrent\"><span class=\"toc-text\">3.2.1 Base和Current</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#3-2-2-MetaAttribute\"><span class=\"toc-text\">3.2.2 MetaAttribute</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-3-AttributeSet\"><span class=\"toc-text\">3.3 AttributeSet</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#3-3-1-AS%E5%AE%9A%E4%B9%89\"><span class=\"toc-text\">3.3.1 AS定义</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#3-3-2-AS%E5%88%9D%E5%A7%8B%E5%8C%96\"><span class=\"toc-text\">3.3.2 AS初始化</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#3-3-3-Attribute%E6%94%B9%E5%8F%98%E5%9B%9E%E8%B0%83\"><span class=\"toc-text\">3.3.3 Attribute改变回调</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#3-3-4-PreAttributeChange\"><span class=\"toc-text\">3.3.4 PreAttributeChange</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#3-3-5-PostGameplayEffectExecute\"><span class=\"toc-text\">3.3.5 PostGameplayEffectExecute</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-GameplayAbility\"><span class=\"toc-text\">4. GameplayAbility</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-1-GA%E6%A6%82%E5%BF%B5\"><span class=\"toc-text\">4.1 GA概念</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-2-GA%E5%88%9B%E5%BB%BA\"><span class=\"toc-text\">4.2 GA创建</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-3-%E7%BB%91%E5%AE%9A%E8%BE%93%E5%85%A5\"><span class=\"toc-text\">4.3 绑定输入</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-4-%E7%BB%91%E5%AE%9A%E6%97%B6%E4%B8%8D%E6%BF%80%E6%B4%BBGA\"><span class=\"toc-text\">4.4 绑定时不激活GA</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-5-%E6%8E%88%E4%BA%88GA\"><span class=\"toc-text\">4.5 授予GA</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-6-%E8%A2%AB%E5%8A%A8GA\"><span class=\"toc-text\">4.6 被动GA</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-7-%E5%8F%96%E6%B6%88GA\"><span class=\"toc-text\">4.7 取消GA</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-8-%E8%8E%B7%E5%8F%96%E6%BF%80%E6%B4%BB%E7%9A%84GA\"><span class=\"toc-text\">4.8 获取激活的GA</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-9-%E5%AE%9E%E4%BE%8B%E5%8C%96%E7%AD%96%E7%95%A5\"><span class=\"toc-text\">4.9 实例化策略</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-10-%E7%BD%91%E7%BB%9C%E6%89%A7%E8%A1%8C%E7%AD%96%E7%95%A5-Net-Execution-Policy\"><span class=\"toc-text\">4.10 网络执行策略(Net Execution Policy)</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-11-GA%E6%A0%87%E7%AD%BE\"><span class=\"toc-text\">4.11 GA标签</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-12-GASpec\"><span class=\"toc-text\">4.12 GASpec</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-13-GA%E5%9B%9E%E8%B0%83\"><span class=\"toc-text\">4.13 GA回调</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-GameplayEffect\"><span class=\"toc-text\">5. GameplayEffect</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#5-1-GE%E6%A6%82%E5%BF%B5\"><span class=\"toc-text\">5.1 GE概念</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#5-2-%E5%BA%94%E7%94%A8GE\"><span class=\"toc-text\">5.2 应用GE</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#5-2-1-GE%E7%9A%84%E4%BD%BF%E7%94%A8%E6%B5%81%E7%A8%8B\"><span class=\"toc-text\">5.2.1 GE的使用流程</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#5-2-2-GE%E7%9A%84%E6%89%A7%E8%A1%8C\"><span class=\"toc-text\">5.2.2 GE的执行</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#5-2-3-GE%E7%BB%91%E5%AE%9A%E5%9B%9E%E8%B0%83\"><span class=\"toc-text\">5.2.3 GE绑定回调</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#5-3-%E7%A7%BB%E9%99%A4GE\"><span class=\"toc-text\">5.3 移除GE</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#5-4-Modifier\"><span class=\"toc-text\">5.4 Modifier</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#5-4-1-Modifier%E7%A7%8D%E7%B1%BB\"><span class=\"toc-text\">5.4.1 Modifier种类</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#5-4-2-Multiply%E5%92%8CDivide-Modifier\"><span class=\"toc-text\">5.4.2 Multiply和Divide Modifier</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#5-4-3-Modifier-GameplayTag\"><span class=\"toc-text\">5.4.3 Modifier_GameplayTag</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#5-5-GE%E5%A0%86%E6%A0%88\"><span class=\"toc-text\">5.5 GE堆栈</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#5-6-GE%E6%8E%88%E4%BA%88ASC%E6%96%B0%E7%9A%84GA\"><span class=\"toc-text\">5.6 GE授予ASC新的GA</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#5-7-GE%E6%A0%87%E7%AD%BE\"><span class=\"toc-text\">5.7 GE标签</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#5-8-GE%E5%85%8D%E7%96%AB\"><span class=\"toc-text\">5.8 GE免疫</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#5-9-GESpec\"><span class=\"toc-text\">5.9 GESpec</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#5-9-1-GESpec%E6%A6%82%E5%BF%B5\"><span class=\"toc-text\">5.9.1 GESpec概念</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#5-9-2-SetByCaller\"><span class=\"toc-text\">5.9.2 SetByCaller</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#5-10-GEContext\"><span class=\"toc-text\">5.10 GEContext</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#5-11-MMC\"><span class=\"toc-text\">5.11 MMC</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#5-12-GE-ExeCalc\"><span class=\"toc-text\">5.12 GE_ExeCalc</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#5-12-1-%E6%A6%82%E5%BF%B5%E5%AE%9A%E4%B9%89\"><span class=\"toc-text\">5.12.1 概念定义</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#5-12-2-%E5%88%9B%E5%BB%BA%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">5.12.2 创建使用</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#5-12-3-%E5%8F%91%E9%80%81%E6%95%B0%E6%8D%AE%E5%88%B0GE-ExeCalc\"><span class=\"toc-text\">5.12.3 发送数据到GE_ExeCalc</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#5-13-GE-CAR\"><span class=\"toc-text\">5.13 GE_CAR</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#5-14-GE-Cost\"><span class=\"toc-text\">5.14 GE_Cost</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#5-14-1-Cost%E6%A6%82%E5%BF%B5\"><span class=\"toc-text\">5.14.1 Cost概念</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#5-14-2-Cost%E5%A4%8D%E7%94%A8\"><span class=\"toc-text\">5.14.2 Cost复用</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#5-15-GE-CD\"><span class=\"toc-text\">5.15 GE_CD</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#5-15-1-Cooldown%E6%A6%82%E5%BF%B5\"><span class=\"toc-text\">5.15.1 Cooldown概念</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#5-15-2-Cooldown%E5%A4%8D%E7%94%A8\"><span class=\"toc-text\">5.15.2 Cooldown复用</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#5-15-3-Cooldown%E5%89%A9%E4%BD%99%E6%97%B6%E9%97%B4\"><span class=\"toc-text\">5.15.3 Cooldown剩余时间</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#5-15-4-Cooldown%E5%9B%9E%E8%B0%83\"><span class=\"toc-text\">5.15.4 Cooldown回调</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#5-16-%E4%BF%AE%E6%94%B9%E5%B7%B2%E6%BF%80%E6%B4%BBGE%E6%8C%81%E7%BB%AD%E6%97%B6%E9%97%B4\"><span class=\"toc-text\">5.16 修改已激活GE持续时间</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#5-17-%E5%8A%A8%E6%80%81%E5%88%9B%E5%BB%BAGE\"><span class=\"toc-text\">5.17 动态创建GE</span></a></li></ol></li></ol></li></ol></li></ol>","author":{"name":"FangH","slug":"blog-author","avatar":"/img/fh.png","link":"/","description":"我曾惊鸿一瞥未来","socials":{"github":"https://github.com/FHangH","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/zi-heng-18-99-47","csdn":"https://blog.csdn.net/weixin_44519692?spm=1000.2115.3001.5343","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"个人博客","uid":"276d2425e4c47114c47280db504b09e3","slug":"0_BlogDemo","date":"2024-02-22T12:16:17.000Z","updated":"2024-02-22T12:16:44.852Z","comments":true,"path":"api/articles/0_BlogDemo.json","keywords":null,"cover":"https://cdn.jsdelivr.net/gh/FHangH/FHangBlogCDN_03@master/1.webp","text":"个人博客-功能测试[toc] Blog 文章 Aurora 主题在首页有推荐板块，任何文章都可以设置在这里显示显示 要设置一篇文章在推荐板块中显示，只需在 Fr...","permalink":"/post/0_BlogDemo","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"Blog","slug":"Blog","count":1,"path":"api/categories/Blog.json"}],"tags":[{"name":"Blog","slug":"Blog","count":1,"path":"api/tags/Blog.json"}],"author":{"name":"FangH","slug":"blog-author","avatar":"/img/fh.png","link":"/","description":"我曾惊鸿一瞥未来","socials":{"github":"https://github.com/FHangH","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/zi-heng-18-99-47","csdn":"https://blog.csdn.net/weixin_44519692?spm=1000.2115.3001.5343","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"UE4 RPC","uid":"01b2c0831f95e39e5fd56ec4f69b86cb","slug":"7_04_UE4_RPC","date":"2022-10-06T07:28:25.953Z","updated":"2023-01-10T01:10:19.445Z","comments":true,"path":"api/articles/7_04_UE4_RPC.json","keywords":null,"cover":"https://cdn.jsdelivr.net/gh/FHangH/FHangBlogCDN_03@master/Aurora_ (20).webp","text":"UE4 RPC[toc] 1. RPC 架构1.1 架构简介 一个服务器， 一个或多个客户端 不能信任客户端，所有重要信息都需要通过服务器验证 Listen S...","permalink":"/post/7_04_UE4_RPC","photos":[],"count_time":{"symbolsCount":"4.7k","symbolsTime":"4 mins."},"categories":[{"name":"UnrealEngine","slug":"UnrealEngine","count":15,"path":"api/categories/UnrealEngine.json"}],"tags":[{"name":"UnrealEngine","slug":"UnrealEngine","count":15,"path":"api/tags/UnrealEngine.json"}],"author":{"name":"FangH","slug":"blog-author","avatar":"/img/fh.png","link":"/","description":"我曾惊鸿一瞥未来","socials":{"github":"https://github.com/FHangH","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/zi-heng-18-99-47","csdn":"https://blog.csdn.net/weixin_44519692?spm=1000.2115.3001.5343","juejin":"","customs":{}}},"feature":true}}