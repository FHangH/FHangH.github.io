{"title":"C++_通讯录管理系统","uid":"ece0e381639ba808e0c15b18566061ec","slug":"1_C++_通讯录管理系统_02","date":"2022-10-06T07:28:25.923Z","updated":"2022-10-07T12:53:59.150Z","comments":true,"path":"api/articles/1_C++_通讯录管理系统_02.json","keywords":null,"cover":"https://cdn.staticaly.com/gh/FHangH/FHangBlogCDN_03@master/Aurora_ (2).webp","content":"<h1 id=\"C-通讯录管理系统\"><a href=\"#C-通讯录管理系统\" class=\"headerlink\" title=\"C++_通讯录管理系统\"></a>C++_通讯录管理系统</h1><h3 id=\"1-系统需求\"><a href=\"#1-系统需求\" class=\"headerlink\" title=\"1. 系统需求\"></a>1. 系统需求</h3><ul>\n<li>添加联系人：向通讯录中添加联系人，联系人信息（姓名，性别，年龄，联系电话，家庭住址），最多记录1000人</li>\n<li>显示联系人：显示通讯录中所有联系人信息</li>\n<li>删除联系人：按照姓名进行删除指定联系人</li>\n<li>查找联系人：按照姓名查找指定联系人信息</li>\n<li>修改联系人：按照姓名重新修改联系人信息</li>\n<li>清空联系人：清空通讯录中所有联系人信息</li>\n<li>退出通讯录：退出当前正在使用的通讯录</li>\n</ul>\n<h3 id=\"2-创建项目\"><a href=\"#2-创建项目\" class=\"headerlink\" title=\"2. 创建项目\"></a>2. 创建项目</h3><h4 id=\"1-创建项目\"><a href=\"#1-创建项目\" class=\"headerlink\" title=\"1. 创建项目\"></a>1. 创建项目</h4><ol>\n<li>VS中创建新项目 AddressBook</li>\n<li>选择空项目</li>\n</ol>\n<h4 id=\"2-创建文件\"><a href=\"#2-创建文件\" class=\"headerlink\" title=\"2. 创建文件\"></a>2. 创建文件</h4><ol>\n<li>在新的项目中找到源文件</li>\n<li>在源文件中创建空的 AddressBook.cpp文件</li>\n</ol>\n<h3 id=\"3-菜单功能\"><a href=\"#3-菜单功能\" class=\"headerlink\" title=\"3. 菜单功能\"></a>3. 菜单功能</h3><ul>\n<li><p>描述：用户选择功能界面</p>\n</li>\n<li><p>步骤：</p>\n<ol>\n<li>分装函数显示该界面 void showAddressBookMenu()</li>\n<li>在main中调用封装好的函数</li>\n<li>创建头文件 AddressBook.h</li>\n<li>创建源文件 Features.cpp</li>\n</ol>\n</li>\n<li><p>代码：</p>\n<p>AddressBook.h</p>\n<pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">#include &lt;iostream&gt;\n\nusing namespace std;\n\nvoid showAddressBookMenu();</code></pre>\n\n<p>Features.cpp</p>\n<pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">#include &quot;AddressBook.h&quot;\n\nvoid showAddressBookMenu()\n&#123;\n\tcout &lt;&lt; &quot;-------- Address Book --------&quot; &lt;&lt; endl;\n\tcout &lt;&lt; &quot;\\t1. 添加联系人&quot; &lt;&lt; endl;\n\tcout &lt;&lt; &quot;\\t2. 显示联系人&quot; &lt;&lt; endl;\n\tcout &lt;&lt; &quot;\\t3. 删除联系人&quot; &lt;&lt; endl;\n\tcout &lt;&lt; &quot;\\t4. 查找联系人&quot; &lt;&lt; endl;\n\tcout &lt;&lt; &quot;\\t5. 修改联系人&quot; &lt;&lt; endl;\n\tcout &lt;&lt; &quot;\\t6. 清空联系人&quot; &lt;&lt; endl;\n\tcout &lt;&lt; &quot;\\t0. 退出通讯录&quot; &lt;&lt; endl;\n&#125;</code></pre>\n\n<p>AddressBook.cpp</p>\n<pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">#include &lt;iostream&gt;\n#include &quot;AddressBook.h&quot;\n\nusing namespace std;\n\nvoid main()\n&#123;\n\tshowAddressBookMenu();\n&#125;</code></pre></li>\n</ul>\n<h3 id=\"4-退出功能\"><a href=\"#4-退出功能\" class=\"headerlink\" title=\"4. 退出功能\"></a>4. 退出功能</h3><ul>\n<li><p>描述：退出通讯录</p>\n</li>\n<li><p>思路：通过switch语句判断用户的输入，执行退出功能</p>\n</li>\n<li><p>代码：</p>\n<p>main.cpp</p>\n<pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">#include &lt;iostream&gt;\n#include &quot;AddressBook.h&quot;\n\nusing namespace std;\n\nint main()\n&#123;\n\tint userSelect;\n\n\twhile (true)\n\t&#123;\n\t\tshowAddressBookMenu();\n\t\t\n\t\tcout &lt;&lt; &quot;Select : &quot;;\n\t\tcin &gt;&gt; userSelect;\n\n\t\tswitch (userSelect)\n\t\t&#123;\n\t\tcase 1: &#x2F;&#x2F;1. 添加联系人\n\t\t\tbreak;\n\t\tcase 2: &#x2F;&#x2F;2. 显示联系人\n\t\t\tbreak;\n\t\tcase 3: &#x2F;&#x2F;3. 删除联系人\n\t\t\tbreak;\n\t\tcase 4: &#x2F;&#x2F;4. 查找联系人\n\t\t\tbreak;\n\t\tcase 5: &#x2F;&#x2F;5. 修改联系人\n\t\t\tbreak;\n\t\tcase 6: &#x2F;&#x2F;6. 清空联系人\n\t\t\tbreak;\n\t\tcase 0: &#x2F;&#x2F;0. 退出通讯录\n\t\t\texitAddressBook();\n\t\t\treturn 0;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t\t&#125;\n\t&#125;\n&#125;</code></pre>\n\n<p>.h</p>\n<pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">#include &lt;iostream&gt;\n\nusing namespace std;\n\nvoid showAddressBookMenu();\nvoid exitAddressBook();</code></pre>\n\n<p>源.cpp</p>\n<pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">#include &quot;AddressBook.h&quot;\n\nvoid showAddressBookMenu()\n&#123;\n\tcout &lt;&lt; &quot;-------- Address Book --------&quot; &lt;&lt; endl;\n\tcout &lt;&lt; &quot;\\t1. 添加联系人&quot; &lt;&lt; endl;\n\tcout &lt;&lt; &quot;\\t2. 显示联系人&quot; &lt;&lt; endl;\n\tcout &lt;&lt; &quot;\\t3. 删除联系人&quot; &lt;&lt; endl;\n\tcout &lt;&lt; &quot;\\t4. 查找联系人&quot; &lt;&lt; endl;\n\tcout &lt;&lt; &quot;\\t5. 修改联系人&quot; &lt;&lt; endl;\n\tcout &lt;&lt; &quot;\\t6. 清空联系人&quot; &lt;&lt; endl;\n\tcout &lt;&lt; &quot;\\t0. 退出通讯录&quot; &lt;&lt; endl;\n&#125;\n\nvoid exitAddressBook()\n&#123;\n\tcout &lt;&lt; &quot;已退出通讯录&quot; &lt;&lt; endl;\n\tsystem(&quot;pause&quot;);\n&#125;</code></pre></li>\n</ul>\n<h3 id=\"5-添加联系人\"><a href=\"#5-添加联系人\" class=\"headerlink\" title=\"5. 添加联系人\"></a>5. 添加联系人</h3><ul>\n<li>描述：实现添加联系人功能，上限1000人，联系人信息（姓名，性别，年龄，联系电话，住址）</li>\n<li>步骤：<ol>\n<li>设计联系人结构体</li>\n<li>设计通讯录结构体</li>\n<li>main中创建通讯录</li>\n<li>分装添加联系人函数</li>\n</ol>\n</li>\n</ul>\n<h4 id=\"1-设计联系人结构体\"><a href=\"#1-设计联系人结构体\" class=\"headerlink\" title=\"1. 设计联系人结构体\"></a>1. 设计联系人结构体</h4><ul>\n<li><p>联系人信息（姓名，性别，年龄，联系电话，住址）</p>\n<p>main</p>\n<pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">struct s_ContactPerson\n&#123;\n\tstring m_Name;\n\tint m_Sex;\n\tint m_Age;\n\tstring m_Address;\n&#125;;</code></pre></li>\n</ul>\n<h4 id=\"2-设计通讯录结构体\"><a href=\"#2-设计通讯录结构体\" class=\"headerlink\" title=\"2. 设计通讯录结构体\"></a>2. 设计通讯录结构体</h4><p>main</p>\n<pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">#define MAX 1000 &#x2F;&#x2F;限定通讯录的最大人数\n\nstruct s_AddressBook\n&#123;\n\ts_ContactPerson personArr[MAX];\n\tint m_Size; &#x2F;&#x2F;通讯录的联系人数\n&#125;;</code></pre>\n\n\n\n<h4 id=\"3-main中创建通讯录\"><a href=\"#3-main中创建通讯录\" class=\"headerlink\" title=\"3. main中创建通讯录\"></a>3. main中创建通讯录</h4><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">s_AddressBook s_ABS; &#x2F;&#x2F;创建通讯录\ns_ABS.m_Size &#x3D; 0;</code></pre>\n\n\n\n<h4 id=\"4-添加联系人\"><a href=\"#4-添加联系人\" class=\"headerlink\" title=\"4. 添加联系人\"></a>4. 添加联系人</h4><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">void addPerson(s_AddressBook* s_ABS)\n&#123;\n\tif (s_ABS-&gt;m_Size &#x3D;&#x3D; MAX)\n\t&#123;\n\t\tcout &lt;&lt; &quot;Address Book is Full !&quot;;\n\t\treturn;\n\t&#125;\n\telse\n\t&#123;\n\t\t&#x2F;&#x2F;Enter address book contactperson info : name\n\t\tstring enterName;\n\t\tcout &lt;&lt; &quot;Enter name: &quot;;\n\t\tcin &gt;&gt; enterName;\n\t\ts_ABS-&gt;personArr[s_ABS-&gt;m_Size].m_Name &#x3D; enterName;\n\n\t\t&#x2F;&#x2F;Enter address book contactperson info : sex\n\t\tint enterSex &#x3D; 0;\n\t\twhile (true)\n\t\t&#123;\n\t\t\tcout &lt;&lt; &quot;Enter sex(1-Man;2-Women;default 0): &quot;;\n\t\t\tcin &gt;&gt; enterSex;\n\t\t\tif (enterSex &#x3D;&#x3D; 1 || enterSex &#x3D;&#x3D; 2)\n\t\t\t&#123;\n\t\t\t\ts_ABS-&gt;personArr[s_ABS-&gt;m_Size].m_Sex &#x3D; enterSex;\n\t\t\t\tbreak;\n\t\t\t&#125;\n\t\t\telse\n\t\t\t&#123;\n\t\t\t\tcout &lt;&lt; &quot;Enter 1 or 2&quot; &lt;&lt; endl;\n\t\t\t&#125;\n\t\t&#125;\n\n\t\t&#x2F;&#x2F;Enter address book contactperson info : age\n\t\tint enterAge &#x3D; 0;\n\t\tcout &lt;&lt; &quot;Enter age: &quot;;\n\t\tcin &gt;&gt; enterAge;\n\t\ts_ABS-&gt;personArr[s_ABS-&gt;m_Size].m_Age &#x3D; enterAge;\n\n\t\t&#x2F;&#x2F;Enter address book contactperson info : phone\n\t\tstring enterPhone;\n\t\tcout &lt;&lt; &quot;Enter phone: &quot;;\n\t\tcin &gt;&gt; enterPhone;\n\t\ts_ABS-&gt;personArr[s_ABS-&gt;m_Size].m_phone &#x3D; enterPhone;\n\n\t\t&#x2F;&#x2F;Enter address book contactperson info : address\n\t\tstring enterAddress;\n\t\tcout &lt;&lt; &quot;Enter address: &quot;;\n\t\tcin &gt;&gt; enterAddress;\n\t\ts_ABS-&gt;personArr[s_ABS-&gt;m_Size].m_Address &#x3D; enterAddress;\n\n\t\t&#x2F;&#x2F;tip info\n\t\tcout &lt;&lt; s_ABS-&gt;personArr[s_ABS-&gt;m_Size].m_Name &lt;&lt; &quot; Add Succeeded !&quot; &lt;&lt; endl;\n\n\t\t&#x2F;&#x2F;update address book m_size \n\t\ts_ABS-&gt;m_Size++;\n\n\t\t&#x2F;&#x2F;clear console show info\n\t\tsystem(&quot;pause&quot;); &#x2F;&#x2F;请按任意键\n\t\tsystem(&quot;cls&quot;); &#x2F;&#x2F;clear console show info\n\t&#125;\n&#125;</code></pre>\n\n<pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">main中\ncase 1: &#x2F;&#x2F;1. 添加联系人\n\t\t\taddPerson(&amp;s_ABS); &#x2F;&#x2F;通过地址传递结构体实参，可以在函数中修改本地的结构体内实参值\n\t\t\tbreak;</code></pre>\n\n\n\n<h4 id=\"5-显示联系人\"><a href=\"#5-显示联系人\" class=\"headerlink\" title=\"5. 显示联系人\"></a>5. 显示联系人</h4><ul>\n<li><p>描述：显示通讯录中已有的联系人信息</p>\n</li>\n<li><p>步骤：</p>\n<ol>\n<li>封装显示联系人函数</li>\n<li>测速显示联系人函数</li>\n</ol>\n<p>代码添加：</p>\n<pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">void showPerson(s_AddressBook* s_ABS)\n&#123;\n\tif (s_ABS-&gt;m_Size &#x3D;&#x3D; 0)\n\t&#123;\n\t\tcout &lt;&lt; &quot;-------- Address Book No Contact ! --------&quot; &lt;&lt; endl;\n\t&#125;\n\telse\n\t&#123;\n\t\tfor (int i &#x3D; 0; i &lt; s_ABS-&gt;m_Size; i++)\n\t\t&#123;\n\t\t\tcout &lt;&lt; &quot; &quot; &lt;&lt; s_ABS-&gt;m_Size &lt;&lt; &quot;. &quot;\n\t\t\t\t&lt;&lt; &quot;Name: &quot; &lt;&lt; s_ABS-&gt;personArr[i].m_Name \n\t\t\t\t&lt;&lt; &quot; &#x2F; Sex: &quot; &lt;&lt; (s_ABS-&gt;personArr[i].m_Sex &#x3D;&#x3D; 1 ? &quot;男&quot;:&quot;女&quot;)\n\t\t\t\t&lt;&lt; &quot; &#x2F; Age: &quot; &lt;&lt; s_ABS-&gt;personArr[i].m_Age \n\t\t\t\t&lt;&lt; &quot; &#x2F; Phone: &quot; &lt;&lt; s_ABS-&gt;personArr[i].m_phone \n\t\t\t\t&lt;&lt; &quot; &#x2F; Address: &quot; &lt;&lt; s_ABS-&gt;personArr[i].m_Address &lt;&lt; endl;\n\t\t&#125;\n\t&#125;\n\tsystem(&quot;pause&quot;);\n\tsystem(&quot;cls&quot;);\n&#125;</code></pre>\n\n<pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">main中\ncase 2: &#x2F;&#x2F;2. 显示联系人\n\t\t\tshowPerson(&amp;s_ABS);\n\t\t\tbreak;</code></pre></li>\n</ul>\n<h4 id=\"6-删除联系人\"><a href=\"#6-删除联系人\" class=\"headerlink\" title=\"6. 删除联系人\"></a>6. 删除联系人</h4><ul>\n<li><p>描述：按照姓名删除指定联系人</p>\n</li>\n<li><p>步骤：</p>\n<ol>\n<li>封装检测联系人是否存在函数</li>\n<li>封装删除联系人函数</li>\n<li>测速删除联系人函数</li>\n</ol>\n<pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">&#x2F;&#x2F;查找联系人(服务与删除联系人功能)\nint findPerson(s_AddressBook* s_ABS, string enterName)\n&#123;\n\tfor (int i &#x3D; 0; i &lt; s_ABS-&gt;m_Size; i++)\n\t&#123;\n\t\tif (s_ABS-&gt;personArr[i].m_Name &#x3D;&#x3D; enterName)\n\t\t&#123;\n\t\t\treturn i; &#x2F;&#x2F;若找到\n\t\t&#125;\n\t&#125;\n\treturn -1; &#x2F;&#x2F;若没找到\n&#125;\n\n&#x2F;&#x2F;删除联系人\nvoid deletPerson(s_AddressBook* s_ABS, int personIndex, string enterName)\n&#123;\n\tif (personIndex &#x3D;&#x3D; -1)\n\t&#123;\n\t\tcout &lt;&lt; &quot;-------- No Contact --------&quot; &lt;&lt; endl;\n\t&#125;\n\telse\n\t&#123;\n\t\tcout &lt;&lt; &quot;-------- &quot; &lt;&lt; enterName &lt;&lt; &quot; Delet Succeeded ! --------&quot; &lt;&lt; endl;\n\t\tfor (int i &#x3D; personIndex; i &lt; s_ABS-&gt;m_Size; i++)\n\t\t&#123;\n\t\t\ts_ABS-&gt;personArr[i] &#x3D; s_ABS-&gt;personArr[i + 1];\n\t\t&#125;\n\t\ts_ABS-&gt;m_Size--;\n\t&#125;\n\tsystem(&quot;pause&quot;);\n\tsystem(&quot;cls&quot;);\n&#125;\n\n&#x2F;&#x2F;提示输入信息\nstring tipEnterInfo(string enterName)\n&#123;\n\tcout &lt;&lt; &quot;Enter Name for Delet: &quot;;\n\tcin &gt;&gt; enterName;\n\treturn enterName;\n&#125;\n\n&#x2F;&#x2F;提示返回信息\nvoid tipReturnInfo(int returnNum)\n&#123;\n\tif (returnNum &#x3D;&#x3D; -1)\n\t&#123;\n\t\tcout &lt;&lt; &quot;-------- No Contact --------&quot; &lt;&lt; endl;\n\t&#125;\n\telse\n\t&#123;\n\t\tcout &lt;&lt; &quot;-------- Have Contact --------&quot; &lt;&lt; endl;\n\t&#125;\n&#125;</code></pre>\n\n<pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">main中\ncase 3: &#x2F;&#x2F;3. 删除联系人\n\t\t&#123;\n\t\t\tstring enterName;\n\t\t\tint personIndex;\n\t\t\t\n\t\t\tenterName &#x3D; tipEnterInfo(enterName);\n\t\t\tfindPerson(&amp;s_ABS, enterName);\n\t\t\t\n\t\t\tpersonIndex &#x3D; findPerson(&amp;s_ABS, enterName);\n\t\t\t&#x2F;&#x2F;tipReturnInfo(findPerson(&amp;s_ABS, enterName));\n\t\t\tdeletPerson(&amp;s_ABS, personIndex, enterName); \n\t\t&#125;</code></pre></li>\n</ul>\n<h4 id=\"7-查找联系人\"><a href=\"#7-查找联系人\" class=\"headerlink\" title=\"7. 查找联系人\"></a>7. 查找联系人</h4><ul>\n<li><p>描述：按照指定的姓名查找联系人是否存在</p>\n</li>\n<li><p>步骤：</p>\n<ol>\n<li>封装查找联系人函数</li>\n<li>测速查找联系人函数</li>\n</ol>\n<pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">&#x2F;&#x2F;查找联系人\nvoid findPerson(s_AddressBook* s_ABS)\n&#123;\n\tcout &lt;&lt; &quot;Enter name: &quot;;\n\tstring findName;\n\tcin &gt;&gt; findName;\n\n\tint nameIndex &#x3D; findPersonByDelet(s_ABS, findName);\n\t\n\tif (nameIndex &#x3D;&#x3D; -1)\n\t&#123;\n\t\tcout &lt;&lt; &quot;-------- No Contact --------&quot; &lt;&lt; endl;\n\t&#125;\n\telse\n\t&#123;\n\t\tcout &lt;&lt; &quot; &quot; &lt;&lt; nameIndex &lt;&lt; &quot;. &quot;\n\t\t\t&lt;&lt; &quot;Name: &quot; &lt;&lt; s_ABS-&gt;personArr[nameIndex].m_Name\n\t\t\t&lt;&lt; &quot; &#x2F; Sex: &quot; &lt;&lt; (s_ABS-&gt;personArr[nameIndex].m_Sex &#x3D;&#x3D; 1 ? &quot;男&quot; : &quot;女&quot;)\n\t\t\t&lt;&lt; &quot; &#x2F; Age: &quot; &lt;&lt; s_ABS-&gt;personArr[nameIndex].m_Age\n\t\t\t&lt;&lt; &quot; &#x2F; Phone: &quot; &lt;&lt; s_ABS-&gt;personArr[nameIndex].m_phone\n\t\t\t&lt;&lt; &quot; &#x2F; Address: &quot; &lt;&lt; s_ABS-&gt;personArr[nameIndex].m_Address &lt;&lt; endl;\n\t&#125;\n\tsystem(&quot;pause&quot;);\n\tsystem(&quot;cls&quot;);\n&#125;</code></pre>\n\n<pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">main中\ncase 4: &#x2F;&#x2F;4. 查找联系人\n\t\t\tfindPerson(&amp;s_ABS);\n\t\t\tbreak;</code></pre></li>\n</ul>\n<h4 id=\"8-修改联系人\"><a href=\"#8-修改联系人\" class=\"headerlink\" title=\"8. 修改联系人\"></a>8. 修改联系人</h4><ul>\n<li><p>描述：修改指定姓名的联系人的信息</p>\n</li>\n<li><p>步骤：</p>\n<ol>\n<li>封装修改联系人函数</li>\n<li>测速修改联系人函数</li>\n</ol>\n<pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\"> &#x2F;&#x2F;修改联系人菜单\n void showModifyContactMenu()\n &#123;\n \tcout &lt;&lt; endl;\n \tcout &lt;&lt; &quot;-------- Modify Contact --------&quot; &lt;&lt; endl;\n \tcout &lt;&lt; &quot;\\t1. Modify Name&quot; &lt;&lt; endl;\ncout &lt;&lt; &quot;\\t2. Modify Sex&quot; &lt;&lt; endl;\n \tcout &lt;&lt; &quot;\\t3. Modify Age&quot; &lt;&lt; endl;\n \tcout &lt;&lt; &quot;\\t4. Modify Phone&quot; &lt;&lt; endl;\n \tcout &lt;&lt; &quot;\\t5. Modify Address&quot; &lt;&lt; endl;\n \tcout &lt;&lt; &quot;\\t0. Exit Modify&quot; &lt;&lt; endl;\n &#125;\n \n &#x2F;&#x2F;修改联系人\n int modifyPerson(s_AddressBook* s_ABS)\n &#123;\n \tcout &lt;&lt; &quot;Enter name: &quot;;\n \tstring modifyName;\n \tcin &gt;&gt; modifyName;\n \n \tint nameIndex &#x3D; findPersonByDeletOrModify(s_ABS, modifyName);\n \n \tif (nameIndex &#x3D;&#x3D; -1)\n \t&#123;\n \t\tcout &lt;&lt; &quot;-------- No Contact --------&quot; &lt;&lt; endl;\n \t&#125;\n \telse\n \t&#123;\n \t\tint userSelect;\n \t\t\n \t\twhile (true)\n \t\t&#123;\n \t\t\tshowModifyContactMenu();\n \n \t\t\tcout &lt;&lt; &quot;Select : &quot;;\n \t\t\tcin &gt;&gt; userSelect;\n \t\t\t\n \t\t\tswitch (userSelect)\n \t\t\t&#123;\n \t\t\tcase 1 : &#x2F;&#x2F;Modify Name\n \t\t\t&#123;\n \t\t\t\tcout &lt;&lt; &quot;Enter name: &quot; &lt;&lt; endl;\n \t\t\t\tstring newName;\n \t\t\t\tcin &gt;&gt; newName;\n \t\t\t\ts_ABS-&gt;personArr[nameIndex].m_Name &#x3D; newName;\n \t\t\t\tcout &lt;&lt; &quot;-------- Modify Name Succeeded ! --------&quot; &lt;&lt; endl;\n \t\t\t\t\n \t\t\t\tsystem(&quot;pause&quot;);\n \t\t\t\tsystem(&quot;cls&quot;);\n \t\t\t&#125;\n \t\t\t\tbreak;\n \t\t\tcase 2: &#x2F;&#x2F;Modify Sex\n \t\t\t&#123;\n \t\t\t\tcout &lt;&lt; &quot;Enter sex(1-Man &#x2F; 2-Women &#x2F; default 1): &quot;;\n \t\t\t\tint newSex;\n \t\t\t\twhile (true)\n \t\t\t\t&#123;\n \t\t\t\t\tcin &gt;&gt; newSex;\n \t\t\t\t\tif (newSex &#x3D;&#x3D; 1 || newSex &#x3D;&#x3D; 2)\n \t\t\t\t\t&#123;\n \t\t\t\t\t\ts_ABS-&gt;personArr[nameIndex].m_Sex &#x3D; newSex;\n \t\t\t\t\t\tbreak;\n \t\t\t\t\t&#125;\n \t\t\t\t\telse\n \t\t\t\t\t&#123;\n \t\t\t\t\t\tcout &lt;&lt; &quot;Enter 1 or 2&quot; &lt;&lt; endl;\n \t\t\t\t\t&#125;\n \t\t\t\t&#125;\n \t\t\t\tcout &lt;&lt; &quot;-------- Modify Sex Succeeded ! --------&quot; &lt;&lt; endl;\n \n \t\t\t\tsystem(&quot;pause&quot;);\n \t\t\t\tsystem(&quot;cls&quot;);\n \t\t\t&#125;\n \t\t\t\tbreak;\n \t\t\tcase 3: &#x2F;&#x2F;Modify Age\n \t\t\t&#123;\n \t\t\t\tcout &lt;&lt; &quot;Enter Age: &quot;;\n \t\t\t\tint newAge;\n \t\t\t\tcin &gt;&gt; newAge;\n \t\t\t\ts_ABS-&gt;personArr[nameIndex].m_Age &#x3D; newAge;\n \t\t\t\tcout &lt;&lt; &quot;-------- Modify Age Succeeded ! --------&quot; &lt;&lt; endl;\n \n \t\t\t\tsystem(&quot;pause&quot;);\n \t\t\t\tsystem(&quot;cls&quot;);\n \t\t\t&#125;\n \t\t\t\tbreak;\n \t\t\tcase 4: &#x2F;&#x2F;Modify Phone\n \t\t\t&#123;\n \t\t\t\tcout &lt;&lt; &quot;Enter Phone: &quot;;\n \t\t\t\tstring newPhone;\n \t\t\t\tcin &gt;&gt; newPhone;\n \t\t\t\ts_ABS-&gt;personArr[nameIndex].m_phone &#x3D; newPhone;\n \t\t\t\tcout &lt;&lt; &quot;-------- Modify Phone Succeeded ! --------&quot; &lt;&lt; endl;\n \n \t\t\t\tsystem(&quot;pause&quot;);\n \t\t\t\tsystem(&quot;cls&quot;);\n \t\t\t&#125;\n \t\t\t\tbreak;\n \t\t\tcase 5: &#x2F;&#x2F;Modify Address\n \t\t\t&#123;\n \t\t\t\tcout &lt;&lt; &quot;Enter Address: &quot;;\n \t\t\t\tstring newAddress;\n \t\t\t\tcin &gt;&gt; newAddress;\n \t\t\t\ts_ABS-&gt;personArr[nameIndex].m_Address &#x3D; newAddress;\n \t\t\t\tcout &lt;&lt; &quot;-------- Modify Address Succeeded ! --------&quot; &lt;&lt; endl;\n \n \t\t\t\tsystem(&quot;pause&quot;);\n \t\t\t\tsystem(&quot;cls&quot;);\n \t\t\t&#125;\n \t\t\t\tbreak;\n \t\t\tcase 0:\n \t\t\t&#123;\n \t\t\t\tcout &lt;&lt; &quot;已退出修改联系人&quot; &lt;&lt; endl;\n \t\t\t\tsystem(&quot;pause&quot;);\n \t\t\t\tsystem(&quot;cls&quot;);\n \t\t\t&#125;\n \t\t\treturn 0;\n \t\t\t\tbreak;\n \t\t\tdefault:\n \t\t\t\tbreak;\n \t\t\t&#125;\n \t\t&#125;\n \t&#125;\n \n \tsystem(&quot;pause&quot;);\n \tsystem(&quot;cls&quot;);\n &#125;</code></pre>\n\n<pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">main\ncase 5: &#x2F;&#x2F;5. 修改联系人\n\t\t\tmodifyPerson(&amp;s_ABS);\n\t\t\tbreak;</code></pre></li>\n</ul>\n<h4 id=\"9-清空联系人\"><a href=\"#9-清空联系人\" class=\"headerlink\" title=\"9. 清空联系人\"></a>9. 清空联系人</h4><ul>\n<li><p>描述：清空通讯录中所有联系人的信息</p>\n</li>\n<li><p>步骤：</p>\n<ol>\n<li>封装清空联系人函数</li>\n<li>测速清空联系人函数</li>\n</ol>\n<pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">&#x2F;&#x2F;清空联系人\nvoid cleanPerson(s_AddressBook* s_ABS)\n&#123;\n\tstring enterYN;\n\tstring selectYN;\n\twhile (true)\n\t&#123;\n\t\tcout &lt;&lt; &quot;Clean All Contact ( y &#x2F; n ): &quot;;\n\t\tcin &gt;&gt; enterYN;\n\t\tif (enterYN &#x3D;&#x3D; &quot;y&quot; || enterYN &#x3D;&#x3D; &quot;n&quot;)\n\t\t&#123;\n\t\t\tselectYN &#x3D; enterYN;\n\t\t\tbreak;\n\t\t&#125;\n\t\telse\n\t\t&#123;\n\t\t\tcout &lt;&lt; &quot;Enter y or n&quot; &lt;&lt; endl;\n\t\t&#125;\n\t&#125;\n\n\tif (selectYN &#x3D;&#x3D; &quot;y&quot;)\n\t&#123;\n\t\ts_ABS-&gt;m_Size &#x3D; 0;\n\t\tcout &lt;&lt; &quot;-------- Address Book Clean Succeeded ! --------&quot; &lt;&lt; endl;\n\t&#125;\n\telse\n\t&#123;\n\t\tcout &lt;&lt; &quot;-------- Address Book Clean Exit ! --------&quot; &lt;&lt; endl;\n\t&#125;\n\tsystem(&quot;pause&quot;);\n\tsystem(&quot;cls&quot;);\n&#125;</code></pre>\n\n<pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">main\ncase 6: &#x2F;&#x2F;6. 清空联系人\n\t\t\tcleanPerson(&amp;s_ABS);\n\t\t\tbreak;</code></pre></li>\n</ul>\n<h3 id=\"6-源码\"><a href=\"#6-源码\" class=\"headerlink\" title=\"6. 源码\"></a>6. 源码</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">#include &lt;iostream&gt;\n#define MAX 1000 &#x2F;&#x2F;限定通讯录的最大人数\n\nusing namespace std;\n\nstruct s_ContactPerson\n&#123;\n\tstring m_Name;\n\tint m_Sex &#x3D; 1;\n\tint m_Age &#x3D; 0;\n\tstring m_phone;\n\tstring m_Address;\n&#125;;\n\nstruct s_AddressBook\n&#123;\n\ts_ContactPerson personArr[MAX];\n\tint m_Size &#x3D; 0; &#x2F;&#x2F;通讯录的联系人数\n&#125;;\n\n&#x2F;&#x2F;显示通讯录菜单\nvoid showAddressBookMenu()\n&#123;\n\tcout &lt;&lt; endl;\n\tcout &lt;&lt; &quot;-------- Address Book --------&quot; &lt;&lt; endl;\n\tcout &lt;&lt; &quot;\\t1. 添加联系人&quot; &lt;&lt; endl;\n\tcout &lt;&lt; &quot;\\t2. 显示联系人&quot; &lt;&lt; endl;\n\tcout &lt;&lt; &quot;\\t3. 删除联系人&quot; &lt;&lt; endl;\n\tcout &lt;&lt; &quot;\\t4. 查找联系人&quot; &lt;&lt; endl;\n\tcout &lt;&lt; &quot;\\t5. 修改联系人&quot; &lt;&lt; endl;\n\tcout &lt;&lt; &quot;\\t6. 清空联系人&quot; &lt;&lt; endl;\n\tcout &lt;&lt; &quot;\\t0. 退出通讯录&quot; &lt;&lt; endl;\n&#125;\n\n&#x2F;&#x2F;添加联系人\nvoid addPerson(s_AddressBook* s_ABS)\n&#123;\n\tif (s_ABS-&gt;m_Size &#x3D;&#x3D; MAX)\n\t&#123;\n\t\tcout &lt;&lt; &quot;Address Book is Full !&quot;;\n\t\treturn;\n\t&#125;\n\telse\n\t&#123;\n\t\t&#x2F;&#x2F;Enter address book contactperson info : name\n\t\tstring enterName;\n\t\tcout &lt;&lt; &quot;Enter name: &quot;;\n\t\tcin &gt;&gt; enterName;\n\t\ts_ABS-&gt;personArr[s_ABS-&gt;m_Size].m_Name &#x3D; enterName;\n\n\t\t&#x2F;&#x2F;Enter address book contactperson info : sex\n\t\tint enterSex &#x3D; 0;\n\t\twhile (true)\n\t\t&#123;\n\t\t\tcout &lt;&lt; &quot;Enter sex(1-Man &#x2F; 2-Women &#x2F; default 1): &quot;;\n\t\t\tcin &gt;&gt; enterSex;\n\t\t\tif (enterSex &#x3D;&#x3D; 1 || enterSex &#x3D;&#x3D; 2)\n\t\t\t&#123;\n\t\t\t\ts_ABS-&gt;personArr[s_ABS-&gt;m_Size].m_Sex &#x3D; enterSex;\n\t\t\t\tbreak;\n\t\t\t&#125;\n\t\t\telse\n\t\t\t&#123;\n\t\t\t\tcout &lt;&lt; &quot;Enter 1 or 2&quot; &lt;&lt; endl;\n\t\t\t&#125;\n\t\t&#125;\n\n\t\t&#x2F;&#x2F;Enter address book contactperson info : age\n\t\tint enterAge &#x3D; 0;\n\t\tcout &lt;&lt; &quot;Enter age: &quot;;\n\t\tcin &gt;&gt; enterAge;\n\t\ts_ABS-&gt;personArr[s_ABS-&gt;m_Size].m_Age &#x3D; enterAge;\n\n\t\t&#x2F;&#x2F;Enter address book contactperson info : phone\n\t\tstring enterPhone;\n\t\tcout &lt;&lt; &quot;Enter phone: &quot;;\n\t\tcin &gt;&gt; enterPhone;\n\t\ts_ABS-&gt;personArr[s_ABS-&gt;m_Size].m_phone &#x3D; enterPhone;\n\n\t\t&#x2F;&#x2F;Enter address book contactperson info : address\n\t\tstring enterAddress;\n\t\tcout &lt;&lt; &quot;Enter address: &quot;;\n\t\tcin &gt;&gt; enterAddress;\n\t\ts_ABS-&gt;personArr[s_ABS-&gt;m_Size].m_Address &#x3D; enterAddress;\n\n\t\t&#x2F;&#x2F;tip info\n\t\tcout &lt;&lt; &quot;-------- &quot; &lt;&lt; s_ABS-&gt;personArr[s_ABS-&gt;m_Size].m_Name &lt;&lt; &quot; Add Succeeded ! --------&quot; &lt;&lt; endl;\n\n\t\t&#x2F;&#x2F;update address book m_size \n\t\ts_ABS-&gt;m_Size++;\n\n\t\t&#x2F;&#x2F;clear console show info\n\t\tsystem(&quot;pause&quot;); &#x2F;&#x2F;请按任意键\n\t\tsystem(&quot;cls&quot;); &#x2F;&#x2F;clear console show info\n\t&#125;\n&#125;\n\n&#x2F;&#x2F;显示联系人\nvoid showPerson(s_AddressBook* s_ABS)\n&#123;\n\tif (s_ABS-&gt;m_Size &#x3D;&#x3D; 0)\n\t&#123;\n\t\tcout &lt;&lt; &quot;-------- Address Book No Contact ! --------&quot; &lt;&lt; endl;\n\t&#125;\n\telse\n\t&#123;\n\t\tfor (int i &#x3D; 0; i &lt; s_ABS-&gt;m_Size; i++)\n\t\t&#123;\n\t\t\tcout &lt;&lt; &quot; &quot; &lt;&lt; i &lt;&lt; &quot;. &quot;\n\t\t\t\t&lt;&lt; &quot;Name: &quot; &lt;&lt; s_ABS-&gt;personArr[i].m_Name \n\t\t\t\t&lt;&lt; &quot; &#x2F; Sex: &quot; &lt;&lt; (s_ABS-&gt;personArr[i].m_Sex &#x3D;&#x3D; 1 ? &quot;男&quot;:&quot;女&quot;)\n\t\t\t\t&lt;&lt; &quot; &#x2F; Age: &quot; &lt;&lt; s_ABS-&gt;personArr[i].m_Age \n\t\t\t\t&lt;&lt; &quot; &#x2F; Phone: &quot; &lt;&lt; s_ABS-&gt;personArr[i].m_phone \n\t\t\t\t&lt;&lt; &quot; &#x2F; Address: &quot; &lt;&lt; s_ABS-&gt;personArr[i].m_Address &lt;&lt; endl;\n\t\t&#125;\n\t&#125;\n\tsystem(&quot;pause&quot;);\n\tsystem(&quot;cls&quot;);\n&#125;\n\n&#x2F;&#x2F;查找联系人(服务与删除联系人功能)\nint findPersonByDeletOrModify (s_AddressBook* s_ABS, string enterName)\n&#123;\n\tfor (int i &#x3D; 0; i &lt; s_ABS-&gt;m_Size; i++)\n\t&#123;\n\t\tif (s_ABS-&gt;personArr[i].m_Name &#x3D;&#x3D; enterName)\n\t\t&#123;\n\t\t\treturn i; &#x2F;&#x2F;若找到\n\t\t&#125;\n\t&#125;\n\treturn -1; &#x2F;&#x2F;若没找到\n&#125;\n\n&#x2F;&#x2F;删除联系人\nvoid deletPerson(s_AddressBook* s_ABS, int personIndex, string enterName)\n&#123;\n\tif (personIndex &#x3D;&#x3D; -1)\n\t&#123;\n\t\tcout &lt;&lt; &quot;-------- No Contact --------&quot; &lt;&lt; endl;\n\t&#125;\n\telse\n\t&#123;\n\t\tcout &lt;&lt; &quot;-------- &quot; &lt;&lt; enterName &lt;&lt; &quot; Delet Succeeded ! --------&quot; &lt;&lt; endl;\n\t\tfor (int i &#x3D; personIndex; i &lt; s_ABS-&gt;m_Size; i++)\n\t\t&#123;\n\t\t\ts_ABS-&gt;personArr[i] &#x3D; s_ABS-&gt;personArr[i + 1];\n\t\t&#125;\n\t\ts_ABS-&gt;m_Size--;\n\t&#125;\n\tsystem(&quot;pause&quot;);\n\tsystem(&quot;cls&quot;);\n&#125;\n\n&#x2F;&#x2F;提示输入信息\nstring tipEnterInfo(string enterName)\n&#123;\n\tcout &lt;&lt; &quot;Enter Name for Delet: &quot;;\n\tcin &gt;&gt; enterName;\n\treturn enterName;\n&#125;\n\n&#x2F;&#x2F;提示返回信息\nvoid tipReturnInfo(int returnNum)\n&#123;\n\tif (returnNum &#x3D;&#x3D; -1)\n\t&#123;\n\t\tcout &lt;&lt; &quot;-------- No Contact --------&quot; &lt;&lt; endl;\n\t&#125;\n\telse\n\t&#123;\n\t\tcout &lt;&lt; &quot;-------- Have Contact --------&quot; &lt;&lt; endl;\n\t&#125;\n&#125;\n\n&#x2F;&#x2F;查找联系人\nvoid findPerson(s_AddressBook* s_ABS)\n&#123;\n\tcout &lt;&lt; &quot;Enter name: &quot;;\n\tstring findName;\n\tcin &gt;&gt; findName;\n\n\tint nameIndex &#x3D; findPersonByDeletOrModify(s_ABS, findName);\n\t\n\tif (nameIndex &#x3D;&#x3D; -1)\n\t&#123;\n\t\tcout &lt;&lt; &quot;-------- No Contact --------&quot; &lt;&lt; endl;\n\t&#125;\n\telse\n\t&#123;\n\t\tcout &lt;&lt; &quot; &quot; &lt;&lt; nameIndex &lt;&lt; &quot;. &quot;\n\t\t\t&lt;&lt; &quot;Name: &quot; &lt;&lt; s_ABS-&gt;personArr[nameIndex].m_Name\n\t\t\t&lt;&lt; &quot; &#x2F; Sex: &quot; &lt;&lt; (s_ABS-&gt;personArr[nameIndex].m_Sex &#x3D;&#x3D; 1 ? &quot;男&quot; : &quot;女&quot;)\n\t\t\t&lt;&lt; &quot; &#x2F; Age: &quot; &lt;&lt; s_ABS-&gt;personArr[nameIndex].m_Age\n\t\t\t&lt;&lt; &quot; &#x2F; Phone: &quot; &lt;&lt; s_ABS-&gt;personArr[nameIndex].m_phone\n\t\t\t&lt;&lt; &quot; &#x2F; Address: &quot; &lt;&lt; s_ABS-&gt;personArr[nameIndex].m_Address &lt;&lt; endl;\n\t&#125;\n\tsystem(&quot;pause&quot;);\n\tsystem(&quot;cls&quot;);\n&#125;\n\n&#x2F;&#x2F;修改联系人菜单\nvoid showModifyContactMenu()\n&#123;\n\tcout &lt;&lt; endl;\n\tcout &lt;&lt; &quot;-------- Modify Contact --------&quot; &lt;&lt; endl;\n\tcout &lt;&lt; &quot;\\t1. Modify Name&quot; &lt;&lt; endl;\n\tcout &lt;&lt; &quot;\\t2. Modify Sex&quot; &lt;&lt; endl;\n\tcout &lt;&lt; &quot;\\t3. Modify Age&quot; &lt;&lt; endl;\n\tcout &lt;&lt; &quot;\\t4. Modify Phone&quot; &lt;&lt; endl;\n\tcout &lt;&lt; &quot;\\t5. Modify Address&quot; &lt;&lt; endl;\n\tcout &lt;&lt; &quot;\\t0. Exit Modify&quot; &lt;&lt; endl;\n&#125;\n\n&#x2F;&#x2F;修改联系人\nint modifyPerson(s_AddressBook* s_ABS)\n&#123;\n\tcout &lt;&lt; &quot;Enter name: &quot;;\n\tstring modifyName;\n\tcin &gt;&gt; modifyName;\n\n\tint nameIndex &#x3D; findPersonByDeletOrModify(s_ABS, modifyName);\n\n\tif (nameIndex &#x3D;&#x3D; -1)\n\t&#123;\n\t\tcout &lt;&lt; &quot;-------- No Contact --------&quot; &lt;&lt; endl;\n\t&#125;\n\telse\n\t&#123;\n\t\tint userSelect;\n\t\t\n\t\twhile (true)\n\t\t&#123;\n\t\t\tshowModifyContactMenu();\n\n\t\t\tcout &lt;&lt; &quot;Select : &quot;;\n\t\t\tcin &gt;&gt; userSelect;\n\t\t\t\n\t\t\tswitch (userSelect)\n\t\t\t&#123;\n\t\t\tcase 1 : &#x2F;&#x2F;Modify Name\n\t\t\t&#123;\n\t\t\t\tcout &lt;&lt; &quot;Enter name: &quot; &lt;&lt; endl;\n\t\t\t\tstring newName;\n\t\t\t\tcin &gt;&gt; newName;\n\t\t\t\ts_ABS-&gt;personArr[nameIndex].m_Name &#x3D; newName;\n\t\t\t\tcout &lt;&lt; &quot;-------- Modify Name Succeeded ! --------&quot; &lt;&lt; endl;\n\t\t\t\t\n\t\t\t\tsystem(&quot;pause&quot;);\n\t\t\t\tsystem(&quot;cls&quot;);\n\t\t\t&#125;\n\t\t\t\tbreak;\n\t\t\tcase 2: &#x2F;&#x2F;Modify Sex\n\t\t\t&#123;\n\t\t\t\tcout &lt;&lt; &quot;Enter sex(1-Man &#x2F; 2-Women &#x2F; default 1): &quot;;\n\t\t\t\tint newSex;\n\t\t\t\twhile (true)\n\t\t\t\t&#123;\n\t\t\t\t\tcin &gt;&gt; newSex;\n\t\t\t\t\tif (newSex &#x3D;&#x3D; 1 || newSex &#x3D;&#x3D; 2)\n\t\t\t\t\t&#123;\n\t\t\t\t\t\ts_ABS-&gt;personArr[nameIndex].m_Sex &#x3D; newSex;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t&#125;\n\t\t\t\t\telse\n\t\t\t\t\t&#123;\n\t\t\t\t\t\tcout &lt;&lt; &quot;Enter 1 or 2&quot; &lt;&lt; endl;\n\t\t\t\t\t&#125;\n\t\t\t\t&#125;\n\t\t\t\tcout &lt;&lt; &quot;-------- Modify Sex Succeeded ! --------&quot; &lt;&lt; endl;\n\n\t\t\t\tsystem(&quot;pause&quot;);\n\t\t\t\tsystem(&quot;cls&quot;);\n\t\t\t&#125;\n\t\t\t\tbreak;\n\t\t\tcase 3: &#x2F;&#x2F;Modify Age\n\t\t\t&#123;\n\t\t\t\tcout &lt;&lt; &quot;Enter Age: &quot;;\n\t\t\t\tint newAge;\n\t\t\t\tcin &gt;&gt; newAge;\n\t\t\t\ts_ABS-&gt;personArr[nameIndex].m_Age &#x3D; newAge;\n\t\t\t\tcout &lt;&lt; &quot;-------- Modify Age Succeeded ! --------&quot; &lt;&lt; endl;\n\n\t\t\t\tsystem(&quot;pause&quot;);\n\t\t\t\tsystem(&quot;cls&quot;);\n\t\t\t&#125;\n\t\t\t\tbreak;\n\t\t\tcase 4: &#x2F;&#x2F;Modify Phone\n\t\t\t&#123;\n\t\t\t\tcout &lt;&lt; &quot;Enter Phone: &quot;;\n\t\t\t\tstring newPhone;\n\t\t\t\tcin &gt;&gt; newPhone;\n\t\t\t\ts_ABS-&gt;personArr[nameIndex].m_phone &#x3D; newPhone;\n\t\t\t\tcout &lt;&lt; &quot;-------- Modify Phone Succeeded ! --------&quot; &lt;&lt; endl;\n\n\t\t\t\tsystem(&quot;pause&quot;);\n\t\t\t\tsystem(&quot;cls&quot;);\n\t\t\t&#125;\n\t\t\t\tbreak;\n\t\t\tcase 5: &#x2F;&#x2F;Modify Address\n\t\t\t&#123;\n\t\t\t\tcout &lt;&lt; &quot;Enter Address: &quot;;\n\t\t\t\tstring newAddress;\n\t\t\t\tcin &gt;&gt; newAddress;\n\t\t\t\ts_ABS-&gt;personArr[nameIndex].m_Address &#x3D; newAddress;\n\t\t\t\tcout &lt;&lt; &quot;-------- Modify Address Succeeded ! --------&quot; &lt;&lt; endl;\n\n\t\t\t\tsystem(&quot;pause&quot;);\n\t\t\t\tsystem(&quot;cls&quot;);\n\t\t\t&#125;\n\t\t\t\tbreak;\n\t\t\tcase 0:\n\t\t\t&#123;\n\t\t\t\tcout &lt;&lt; &quot;已退出修改联系人&quot; &lt;&lt; endl;\n\t\t\t\tsystem(&quot;pause&quot;);\n\t\t\t\tsystem(&quot;cls&quot;);\n\t\t\t&#125;\n\t\t\treturn 0;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t\t&#125;\n\t\t&#125;\n\t&#125;\n\n\tsystem(&quot;pause&quot;);\n\tsystem(&quot;cls&quot;);\n&#125;\n\n&#x2F;&#x2F;清空联系人\nvoid cleanPerson(s_AddressBook* s_ABS)\n&#123;\n\tstring enterYN;\n\tstring selectYN;\n\twhile (true)\n\t&#123;\n\t\tcout &lt;&lt; &quot;Clean All Contact ( y &#x2F; n ): &quot;;\n\t\tcin &gt;&gt; enterYN;\n\t\tif (enterYN &#x3D;&#x3D; &quot;y&quot; || enterYN &#x3D;&#x3D; &quot;n&quot;)\n\t\t&#123;\n\t\t\tselectYN &#x3D; enterYN;\n\t\t\tbreak;\n\t\t&#125;\n\t\telse\n\t\t&#123;\n\t\t\tcout &lt;&lt; &quot;Enter y or n&quot; &lt;&lt; endl;\n\t\t&#125;\n\t&#125;\n\n\tif (selectYN &#x3D;&#x3D; &quot;y&quot;)\n\t&#123;\n\t\ts_ABS-&gt;m_Size &#x3D; 0;\n\t\tcout &lt;&lt; &quot;-------- Address Book Clean Succeeded ! --------&quot; &lt;&lt; endl;\n\t&#125;\n\telse\n\t&#123;\n\t\tcout &lt;&lt; &quot;-------- Address Book Clean Exit ! --------&quot; &lt;&lt; endl;\n\t&#125;\n\tsystem(&quot;pause&quot;);\n\tsystem(&quot;cls&quot;);\n&#125;\n\n&#x2F;&#x2F;退出通讯录\nvoid exitAddressBook()\n&#123;\n\tcout &lt;&lt; &quot;已退出通讯录&quot; &lt;&lt; endl;\n\tsystem(&quot;pause&quot;);\n&#125;\n\n\nint main()\n&#123;\n\tint userSelect;\n\ts_AddressBook s_ABS; &#x2F;&#x2F;创建通讯录\n\ts_ABS.m_Size &#x3D; 0;\n\n\twhile (true)\n\t&#123;\n\t\tshowAddressBookMenu();\n\t\t\n\t\tcout &lt;&lt; &quot;Select : &quot;;\n\t\tcin &gt;&gt; userSelect;\n\n\t\tswitch (userSelect)\n\t\t&#123;\n\t\tcase 1: &#x2F;&#x2F;1. 添加联系人\n\t\t\taddPerson(&amp;s_ABS); &#x2F;&#x2F;通过地址传递结构体实参，可以在函数中修改本地的结构体内实参值\n\t\t\tbreak;\n\t\tcase 2: &#x2F;&#x2F;2. 显示联系人\n\t\t\tshowPerson(&amp;s_ABS);\n\t\t\tbreak;\n\t\tcase 3: &#x2F;&#x2F;3. 删除联系人\n\t\t&#123;\n\t\t\tstring enterName;\n\t\t\tint personIndex;\n\t\t\t\n\t\t\tenterName &#x3D; tipEnterInfo(enterName);\n\t\t\tfindPersonByDeletOrModify(&amp;s_ABS, enterName);\n\t\t\t\n\t\t\tpersonIndex &#x3D; findPersonByDeletOrModify(&amp;s_ABS, enterName);\n\t\t\t&#x2F;&#x2F;tipReturnInfo(findPersonByDeletOrModify(&amp;s_ABS, enterName));\n\t\t\tdeletPerson(&amp;s_ABS, personIndex, enterName); \n\t\t&#125;\n\t\t\tbreak;\n\t\tcase 4: &#x2F;&#x2F;4. 查找联系人\n\t\t\tfindPerson(&amp;s_ABS);\n\t\t\tbreak;\n\t\tcase 5: &#x2F;&#x2F;5. 修改联系人\n\t\t\tmodifyPerson(&amp;s_ABS);\n\t\t\tbreak;\n\t\tcase 6: &#x2F;&#x2F;6. 清空联系人\n\t\t\tcleanPerson(&amp;s_ABS);\n\t\t\tbreak;\n\t\tcase 0: &#x2F;&#x2F;0. 退出通讯录\n\t\t\texitAddressBook();\n\t\t\treturn 0;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t\t&#125;\n\t&#125;\n&#125;</code></pre>\n\n","text":"C++_通讯录管理系统1. 系统需求 添加联系人：向通讯录中添加联系人，联系人信息（姓名，性别，年龄，联系电话，家庭住址），最多记录1000人 显示联系人：显示通讯录中所有联系人信息 删除联系人：按照姓名进行删除指定联系人 查找联系人：按照姓名查找指定联系人信息 修改联系人：按照...","link":"","photos":[],"count_time":{"symbolsCount":"25k","symbolsTime":"23 mins."},"categories":[{"name":"编程","slug":"编程","count":16,"path":"api/categories/编程.json"}],"tags":[{"name":"C/C++","slug":"C-C","count":10,"path":"api/tags/C-C.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#C-%E9%80%9A%E8%AE%AF%E5%BD%95%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F\"><span class=\"toc-text\">C++_通讯录管理系统</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E7%B3%BB%E7%BB%9F%E9%9C%80%E6%B1%82\"><span class=\"toc-text\">1. 系统需求</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E5%88%9B%E5%BB%BA%E9%A1%B9%E7%9B%AE\"><span class=\"toc-text\">2. 创建项目</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-%E5%88%9B%E5%BB%BA%E9%A1%B9%E7%9B%AE\"><span class=\"toc-text\">1. 创建项目</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-%E5%88%9B%E5%BB%BA%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">2. 创建文件</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E8%8F%9C%E5%8D%95%E5%8A%9F%E8%83%BD\"><span class=\"toc-text\">3. 菜单功能</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-%E9%80%80%E5%87%BA%E5%8A%9F%E8%83%BD\"><span class=\"toc-text\">4. 退出功能</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-%E6%B7%BB%E5%8A%A0%E8%81%94%E7%B3%BB%E4%BA%BA\"><span class=\"toc-text\">5. 添加联系人</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-%E8%AE%BE%E8%AE%A1%E8%81%94%E7%B3%BB%E4%BA%BA%E7%BB%93%E6%9E%84%E4%BD%93\"><span class=\"toc-text\">1. 设计联系人结构体</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-%E8%AE%BE%E8%AE%A1%E9%80%9A%E8%AE%AF%E5%BD%95%E7%BB%93%E6%9E%84%E4%BD%93\"><span class=\"toc-text\">2. 设计通讯录结构体</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-main%E4%B8%AD%E5%88%9B%E5%BB%BA%E9%80%9A%E8%AE%AF%E5%BD%95\"><span class=\"toc-text\">3. main中创建通讯录</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-%E6%B7%BB%E5%8A%A0%E8%81%94%E7%B3%BB%E4%BA%BA\"><span class=\"toc-text\">4. 添加联系人</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#5-%E6%98%BE%E7%A4%BA%E8%81%94%E7%B3%BB%E4%BA%BA\"><span class=\"toc-text\">5. 显示联系人</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#6-%E5%88%A0%E9%99%A4%E8%81%94%E7%B3%BB%E4%BA%BA\"><span class=\"toc-text\">6. 删除联系人</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#7-%E6%9F%A5%E6%89%BE%E8%81%94%E7%B3%BB%E4%BA%BA\"><span class=\"toc-text\">7. 查找联系人</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#8-%E4%BF%AE%E6%94%B9%E8%81%94%E7%B3%BB%E4%BA%BA\"><span class=\"toc-text\">8. 修改联系人</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#9-%E6%B8%85%E7%A9%BA%E8%81%94%E7%B3%BB%E4%BA%BA\"><span class=\"toc-text\">9. 清空联系人</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-%E6%BA%90%E7%A0%81\"><span class=\"toc-text\">6. 源码</span></a></li></ol></li></ol></li></ol>","author":{"name":"FangH","slug":"blog-author","avatar":"/img/fh.png","link":"/","description":"我曾惊鸿一瞥未来","socials":{"github":"https://github.com/FHangH","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/zi-heng-18-99-47","csdn":"https://blog.csdn.net/weixin_44519692?spm=1000.2115.3001.5343","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"C++_职工管理系统","uid":"fdd7c70afe97f7b4969565b83472fc45","slug":"1_C++_职工管理系统_04","date":"2022-10-06T07:28:25.925Z","updated":"2022-10-07T12:54:03.103Z","comments":true,"path":"api/articles/1_C++_职工管理系统_04.json","keywords":null,"cover":"https://cdn.staticaly.com/gh/FHangH/FHangBlogCDN_03@master/Aurora_ (4).webp","text":"C++_职工管理系统1. 管理系统需求系统需求： 职工管理系统可以用来管理公司内所有员工的信息 公司职工分三类：普通员工，经理，老板； 显示员工信息：显示职工编号，职工姓名，职工岗位 职责： 普通员工职责：完成经理的任务 经理职责：完成老板的任务 老板：管理所有事务 管理系统需要...","link":"","photos":[],"count_time":{"symbolsCount":"74k","symbolsTime":"1:07"},"categories":[{"name":"编程","slug":"编程","count":16,"path":"api/categories/编程.json"}],"tags":[{"name":"C/C++","slug":"C-C","count":10,"path":"api/tags/C-C.json"}],"author":{"name":"FangH","slug":"blog-author","avatar":"/img/fh.png","link":"/","description":"我曾惊鸿一瞥未来","socials":{"github":"https://github.com/FHangH","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/zi-heng-18-99-47","csdn":"https://blog.csdn.net/weixin_44519692?spm=1000.2115.3001.5343","juejin":"","customs":{}}}},"next_post":{"title":"C++_模板和STL","uid":"85a2acfa491d3e6f2208fd787a774695","slug":"1_C++_模板和STL_05","date":"2022-10-06T07:28:25.920Z","updated":"2022-10-07T12:53:55.300Z","comments":true,"path":"api/articles/1_C++_模板和STL_05.json","keywords":null,"cover":"https://cdn.staticaly.com/gh/FHangH/FHangBlogCDN_03@master/Aurora_ (5).webp","text":"C++_模板和STL 记录C++泛型编程和STL的使用和原理 1. 模板-Template1.1 模板概念 作用：建立通用的模具，提高编程的复用性 特点： 模板在实际项目中不可直接使用，它只是一个框架，需根据实际情况进行使用 模板的通用不是万能的 1.2 函数模板 C++提供了另...","link":"","photos":[],"count_time":{"symbolsCount":"99k","symbolsTime":"1:30"},"categories":[{"name":"编程","slug":"编程","count":16,"path":"api/categories/编程.json"}],"tags":[{"name":"C/C++","slug":"C-C","count":10,"path":"api/tags/C-C.json"}],"author":{"name":"FangH","slug":"blog-author","avatar":"/img/fh.png","link":"/","description":"我曾惊鸿一瞥未来","socials":{"github":"https://github.com/FHangH","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/zi-heng-18-99-47","csdn":"https://blog.csdn.net/weixin_44519692?spm=1000.2115.3001.5343","juejin":"","customs":{}}}}}