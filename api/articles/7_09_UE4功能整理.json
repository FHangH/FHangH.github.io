{"title":"UE4 功能整理","uid":"8d0c33a1aee99d366309310c2d2adece","slug":"7_09_UE4功能整理","date":"2022-10-06T07:28:25.960Z","updated":"2023-01-10T01:10:19.444Z","comments":true,"path":"api/articles/7_09_UE4功能整理.json","keywords":null,"cover":"https://cdn.jsdelivr.net/gh/FHangH/FHangBlogCDN_03@master/Aurora_ (25).webp","content":"<h1 id=\"UE4-功能整理\"><a href=\"#UE4-功能整理\" class=\"headerlink\" title=\"UE4 功能整理\"></a>UE4 功能整理</h1><p>[toc]</p>\n<h3 id=\"1-SpawnActor\"><a href=\"#1-SpawnActor\" class=\"headerlink\" title=\"1. SpawnActor\"></a>1. SpawnActor</h3><p>情景：</p>\n<ul>\n<li>我有一个<code>Cpp类</code></li>\n<li>这个<code>Cpp类</code>要生成一个其他<code>Cpp</code>或<code>蓝图</code>类</li>\n<li>可以使用<code>TSubclassOf&lt;&gt;</code></li>\n</ul>\n<p>示例：</p>\n<ul>\n<li><p>定义</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(EditDefaultsOnly, BlueprintReadWrite, meta=(AllowPrivateAccess=<span class=\"literal\">true</span>))</span><br><span class=\"line\">\tTSubclassOf&lt;AActor&gt; SpawnActorTest;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>实现</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">AActor_SpawnTest::BeginPlay</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tSuper::<span class=\"built_in\">BeginPlay</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\tFActorSpawnParameters SpawnParameters;</span><br><span class=\"line\">\tSpawnParameters.Name = <span class=\"built_in\">FName</span>(<span class=\"string\">&quot;SpawnActorTest&quot;</span>);</span><br><span class=\"line\">\tSpawnParameters.Owner = <span class=\"keyword\">this</span>;</span><br><span class=\"line\">\tSpawnParameters.Instigator = <span class=\"literal\">nullptr</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">\t<span class=\"built_in\">GetWorld</span>()-&gt;<span class=\"built_in\">SpawnActor</span>&lt;AActor&gt;(SpawnActorTest, <span class=\"built_in\">GetActorTransform</span>(), SpawnParameters);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<p>说明：</p>\n<ul>\n<li><p>定义中的<code>SpawnActorTest</code>是私有变量，若要保持私有，其蓝图可以<code>Get</code>, <code>Set</code>和参数列表中显示继承中：</p>\n<ul>\n<li><code>UPOPERTY()</code>中加入<code>BlueprintReadWrite</code>，<code>meta=(AllowPrivateAccess=true)</code></li>\n</ul>\n</li>\n<li><p><code>FActorSpawnParameters</code>是可以自定义生成参数，默认可以不写</p>\n</li>\n<li><p><code>GetActorTransform()</code>可以是<code>GetActorLocation</code>和<code>GetActorRotation</code></p>\n</li>\n</ul>\n<h3 id=\"2-LineTrace\"><a href=\"#2-LineTrace\" class=\"headerlink\" title=\"2. LineTrace\"></a>2. LineTrace</h3><ul>\n<li>Trace模式<ul>\n<li>TraceSingle 单个结果</li>\n<li>TraceMulti 多个结果</li>\n</ul>\n</li>\n<li>Trace 的检测依据<ul>\n<li>ByChanne</li>\n<li>ByObjectType</li>\n<li>ByProfile</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"2-1-UWorld\"><a href=\"#2-1-UWorld\" class=\"headerlink\" title=\"2.1 UWorld\"></a>2.1 UWorld</h4><p><strong><code>LineTraceSingleByChannel</code></strong></p>\n<p>情景：</p>\n<ul>\n<li>场景中的某个<code>Actor</code>需要发射检测射线</li>\n<li>可以直接在<code>Actor</code>上写，也可以通过组件<code>SceneComponent</code>，<code>ActorComponent</code></li>\n<li>示例采用<code>SceneComponent</code></li>\n</ul>\n<p>Syntax：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">LineTraceSingleByChannel</span><span class=\"params\">(</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">\t<span class=\"keyword\">struct</span> FHitResult&amp; OutHit,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">\t<span class=\"type\">const</span> FVector&amp; Start,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">\t<span class=\"type\">const</span> FVector&amp; End,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">\tECollisionChannel TraceChannel,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">\t<span class=\"type\">const</span> FCollisionQueryParams&amp; Params = FCollisionQueryParams::DefaultQueryParam,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">\t<span class=\"type\">const</span> FCollisionResponseParams&amp; ResponseParam = FCollisionResponseParams::DefaultResponseParam</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">)</span> <span class=\"type\">const</span></span>;</span><br></pre></td></tr></table></figure>\n\n\n\n<p>示例：</p>\n<ul>\n<li><p>定义</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(EditDefaultsOnly, BlueprintReadWrite, Category=<span class=\"string\">&quot;Trace&quot;</span>, meta=(AllowPrivateAccess=<span class=\"literal\">true</span>))</span><br><span class=\"line\">\t<span class=\"type\">float</span> TraceDistance;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>实现</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">const</span> FVector Start = <span class=\"built_in\">GetOwner</span>()-&gt;<span class=\"built_in\">GetActorLocation</span>();</span><br><span class=\"line\"><span class=\"type\">const</span> FVector End = Start + (<span class=\"built_in\">GetForwardVector</span>() * TraceDistance);</span><br><span class=\"line\"></span><br><span class=\"line\">FHitResult HitResult;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">bool</span> IsHit = <span class=\"built_in\">GetWorld</span>()-&gt;<span class=\"built_in\">LineTraceSingleByChannel</span>(HitResult, Start, End, ECC_Visibility);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">DrawDebugLine</span>(<span class=\"built_in\">GetWorld</span>(), Start, End, FColor::Red, <span class=\"literal\">false</span>, <span class=\"number\">0.5f</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (!IsHit)&#123;<span class=\"keyword\">return</span>;&#125;</span><br><span class=\"line\">GEngine-&gt;<span class=\"built_in\">AddOnScreenDebugMessage</span>(<span class=\"number\">-1</span>, <span class=\"number\">1.f</span>, FColor::Green,</span><br><span class=\"line\">\t\tFString::<span class=\"built_in\">Printf</span>(<span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;Trace Hit: %s&quot;</span>), *HitResult.<span class=\"built_in\">GetActor</span>()-&gt;<span class=\"built_in\">GetName</span>()));</span><br></pre></td></tr></table></figure></li>\n</ul>\n<p>说明：</p>\n<ul>\n<li><code>HitResult</code>会包含射线检测到的<code>Actor</code>的信息</li>\n</ul>\n<h4 id=\"2-2-Kismet\"><a href=\"#2-2-Kismet\" class=\"headerlink\" title=\"2.2 Kismet\"></a>2.2 Kismet</h4><h5 id=\"2-2-1-LineTraceSingle\"><a href=\"#2-2-1-LineTraceSingle\" class=\"headerlink\" title=\"2.2.1 LineTraceSingle\"></a>2.2.1 LineTraceSingle</h5><p>情景：</p>\n<ul>\n<li>根据 <code>Channel</code> 检测单个物体</li>\n</ul>\n<p>Syntax：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">static</span> <span class=\"type\">bool</span> <span class=\"title\">LineTraceSingle</span><span class=\"params\">(</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">\t<span class=\"type\">const</span> UObject* WorldContextObject,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">\t<span class=\"type\">const</span> FVector Start,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">\t<span class=\"type\">const</span> FVector End, </span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">\tETraceTypeQuery TraceChannel, </span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">\t<span class=\"type\">bool</span> bTraceComplex, </span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">\t<span class=\"type\">const</span> TArray&lt;AActor*&gt;&amp; ActorsToIgnore, </span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">\tEDrawDebugTrace::Type DrawDebugType,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">\tFHitResult&amp; OutHit, </span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">\t<span class=\"type\">bool</span> bIgnoreSelf, </span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">\tFLinearColor TraceColor = FLinearColor::Red, </span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">\tFLinearColor TraceHitColor = FLinearColor::Green, </span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">\t<span class=\"type\">float</span> DrawTime = <span class=\"number\">5.0f</span></span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">)</span></span>;</span><br></pre></td></tr></table></figure>\n\n\n\n<p>示例：</p>\n<ul>\n<li><p>定义：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(EditDefaultsOnly, BlueprintReadWrite, Category=<span class=\"string\">&quot;Trace&quot;</span>, meta=(AllowPrivateAccess=<span class=\"literal\">true</span>))</span><br><span class=\"line\">\t<span class=\"type\">float</span> TraceDistance;</span><br></pre></td></tr></table></figure>\n\n\n</li>\n<li><p>实现：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">const</span> FVector Start = <span class=\"built_in\">GetOwner</span>()-&gt;<span class=\"built_in\">GetActorLocation</span>();</span><br><span class=\"line\"><span class=\"type\">const</span> FVector End = Start + (<span class=\"built_in\">GetForwardVector</span>() * TraceDistance);</span><br><span class=\"line\"></span><br><span class=\"line\">FHitResult HitResult;</span><br><span class=\"line\"><span class=\"type\">const</span> TArray&lt;AActor*&gt; ActorsToIgnore;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">bool</span> IsHit = UKismetSystemLibrary::<span class=\"built_in\">LineTraceSingle</span>(</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>, Start, End, TraceTypeQuery1,</span><br><span class=\"line\">\t\t<span class=\"literal\">false</span>, ActorsToIgnore, EDrawDebugTrace::ForDuration, HitResult, <span class=\"literal\">true</span>,</span><br><span class=\"line\">\t\tFLinearColor::Red, FLinearColor::Green, <span class=\"number\">1.f</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (!IsHit)&#123;<span class=\"keyword\">return</span>;&#125;</span><br><span class=\"line\">GEngine-&gt;<span class=\"built_in\">AddOnScreenDebugMessage</span>(<span class=\"number\">-1</span>, <span class=\"number\">1.f</span>, FColor::Green,</span><br><span class=\"line\">\t\tFString::<span class=\"built_in\">Printf</span>(<span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;Trace Hit: %s&quot;</span>), *HitResult.<span class=\"built_in\">GetActor</span>()-&gt;<span class=\"built_in\">GetName</span>()));</span><br></pre></td></tr></table></figure></li>\n</ul>\n<p>说明：</p>\n<ul>\n<li><code>ETraceTypeQuery</code> 说明<ul>\n<li>默认 <code>TraceTypeQuery1</code> —— <code>Visibility</code></li>\n<li>默认 <code>TraceTypeQuery2</code> —— <code>Camera</code></li>\n<li>可在 <code>ProjectSettings</code>-&gt;<code>Engine</code>-&gt;<code>Collision</code>-&gt;<code>Trace Channels</code> 添加自定义</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"2-2-2-LineTraceSingleForObjects\"><a href=\"#2-2-2-LineTraceSingleForObjects\" class=\"headerlink\" title=\"2.2.2 LineTraceSingleForObjects\"></a>2.2.2 LineTraceSingleForObjects</h5><p>情景：</p>\n<ul>\n<li>根据 <code>Object Type</code> 检测单个物体</li>\n</ul>\n<p>Syntax</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">static</span> <span class=\"type\">bool</span> <span class=\"title\">LineTraceSingleForObjects</span><span class=\"params\">(</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">\t<span class=\"type\">const</span> UObject* WorldContextObject,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">\t<span class=\"type\">const</span> FVector Start,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">\t<span class=\"type\">const</span> FVector End,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">\t<span class=\"type\">const</span> TArray&lt;TEnumAsByte&lt;EObjectTypeQuery&gt; &gt; &amp; ObjectTypes,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">\t<span class=\"type\">bool</span> bTraceComplex,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">\t<span class=\"type\">const</span> TArray&lt;AActor*&gt;&amp; ActorsToIgnore,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">\tEDrawDebugTrace::Type DrawDebugType,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">\tFHitResult&amp; OutHit,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">\t<span class=\"type\">bool</span> bIgnoreSelf,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">\tFLinearColor TraceColor = FLinearColor::Red,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">\tFLinearColor TraceHitColor = FLinearColor::Green,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">\t<span class=\"type\">float</span> DrawTime = <span class=\"number\">5.0f</span> </span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">)</span></span>;</span><br></pre></td></tr></table></figure>\n\n\n\n<p>示例：</p>\n<ul>\n<li><p>实现：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 设置要检测的 Object Type</span></span><br><span class=\"line\">TArray&lt;TEnumAsByte&lt;EObjectTypeQuery&gt; &gt; ObjectTypes;</span><br><span class=\"line\">ObjectTypes.<span class=\"built_in\">Add</span>(EObjectTypeQuery::ObjectTypeQuery1);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//开始检测</span></span><br><span class=\"line\"><span class=\"type\">bool</span> bIsHit = UKismetSystemLibrary::<span class=\"built_in\">LineTraceSingleForObjects</span>(<span class=\"built_in\">GetWorld</span>(), BeginLoc, EndLoc, ObjectTypes, <span class=\"literal\">false</span>, IgnoreActors, EDrawDebugTrace::ForDuration, HitResult, <span class=\"literal\">true</span>);</span><br><span class=\"line\"><span class=\"keyword\">if</span> (bIsHit)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tUKismetSystemLibrary::<span class=\"built_in\">PrintString</span>(<span class=\"built_in\">GetWorld</span>(), HitResult.<span class=\"built_in\">GetActor</span>()-&gt;<span class=\"built_in\">GetName</span>());</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<p>说明：</p>\n<ul>\n<li><code>EObjectTypeQuery</code> 对应 <code>ObjectType</code><ul>\n<li>默认 <code>ObjectTypeQuery1</code> —— <code>WorldStatic</code></li>\n<li>默认 <code>ObjectTypeQuery2</code> —— <code>WorldDynamic</code></li>\n<li>默认 <code>ObjectTypeQuery3</code> —— <code>Oawn</code></li>\n<li>默认 <code>ObjectTypeQuery4</code> —— <code>PhysicasBody</code></li>\n<li>默认 <code>ObjectTypeQuery5</code> —— <code>Vehicle</code></li>\n<li>默认 <code>ObjectTypeQuery6</code> —— <code>Destructible</code></li>\n<li>可以再 <code>ProjectSettings</code>-&gt;<code>Engine</code>-&gt;<code>Collision</code>-&gt;<code>Object Channels</code> 添加自定义</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"2-2-3-LineTraceSingleByProfile\"><a href=\"#2-2-3-LineTraceSingleByProfile\" class=\"headerlink\" title=\"2.2.3 LineTraceSingleByProfile\"></a>2.2.3 LineTraceSingleByProfile</h5><p>情景：</p>\n<ul>\n<li>根据 <code>Collision Preset</code> 检测单个物体</li>\n</ul>\n<p>Syntax</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">static</span> <span class=\"type\">bool</span> <span class=\"title\">LineTraceSingleByProfile</span><span class=\"params\">(</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">\t<span class=\"type\">const</span> UObject* WorldContextObject,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">\t<span class=\"type\">const</span> FVector Start, </span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">\t<span class=\"type\">const</span> FVector End, </span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">\tFName ProfileName,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">\t<span class=\"type\">bool</span> bTraceComplex,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">\t<span class=\"type\">const</span> TArray&lt;AActor*&gt;&amp; ActorsToIgnore,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">\tEDrawDebugTrace::Type DrawDebugType,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">\tFHitResult&amp; OutHit,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">\t<span class=\"type\">bool</span> bIgnoreSelf,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">\tFLinearColor TraceColor = FLinearColor::Red,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">\tFLinearColor TraceHitColor = FLinearColor::Green,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">\t<span class=\"type\">float</span> DrawTime = <span class=\"number\">5.0f</span></span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">)</span></span>;</span><br></pre></td></tr></table></figure>\n\n\n\n<p>示例：</p>\n<ul>\n<li><p>实现：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">bool</span> bIsHit = UKismetSystemLibrary::<span class=\"built_in\">LineTraceSingleByProfile</span>(</span><br><span class=\"line\">    <span class=\"built_in\">GetWorld</span>(), BeginLoc, EndLoc,<span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;BlockAll&quot;</span>), </span><br><span class=\"line\">    <span class=\"literal\">false</span>, IgnoreActors, EDrawDebugTrace::ForDuration, </span><br><span class=\"line\">    HitResult, <span class=\"literal\">true</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (bIsHit)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tUKismetSystemLibrary::<span class=\"built_in\">PrintString</span>(<span class=\"built_in\">GetWorld</span>(), HitResult.<span class=\"built_in\">GetActor</span>()-&gt;<span class=\"built_in\">GetName</span>());</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<p>说明：</p>\n<ul>\n<li><code>ProfileName</code> 对应 <code>Collision Preset</code> 的名称</li>\n</ul>\n<h3 id=\"3-SweepTrace\"><a href=\"#3-SweepTrace\" class=\"headerlink\" title=\"3. SweepTrace\"></a>3. SweepTrace</h3><p>情景：</p>\n<ul>\n<li><p>使用<code>UWorld</code>生成</p>\n</li>\n<li><p>生成一个范围检测周边的<code>Actor</code></p>\n</li>\n</ul>\n<p>示例：</p>\n<ul>\n<li><p>定义：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(EditDefaultsOnly, Category=<span class=\"string\">&quot;Trace&quot;</span>, BlueprintReadWrite, meta=(AllowPrivateAccess=<span class=\"literal\">true</span>))</span><br><span class=\"line\">\t<span class=\"type\">float</span> TraceRadius;</span><br></pre></td></tr></table></figure>\n\n\n</li>\n<li><p>实现：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">TArray&lt;FHitResult&gt; HitResults;</span><br><span class=\"line\"><span class=\"type\">const</span> FVector Start, End = <span class=\"built_in\">GetOwner</span>()-&gt;<span class=\"built_in\">GetActorLocation</span>();</span><br><span class=\"line\"><span class=\"type\">const</span> FCollisionShape CollisionShape = FCollisionShape::<span class=\"built_in\">MakeSphere</span>(TraceRadius);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">bool</span> IsHit = <span class=\"built_in\">GetWorld</span>()-&gt;<span class=\"built_in\">SweepMultiByChannel</span>(</span><br><span class=\"line\">\t\t\tHitResults, Start, End, FQuat::Identity,</span><br><span class=\"line\">\t\t\tECC_Visibility, CollisionShape);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">DrawDebugSphere</span>(<span class=\"built_in\">GetWorld</span>(), Start, TraceRadius, <span class=\"number\">50</span>, FColor::Green, <span class=\"literal\">true</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (!IsHit)&#123;<span class=\"keyword\">return</span>;&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">const</span> <span class=\"keyword\">auto</span> &amp;result : HitResults)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tGEngine-&gt;<span class=\"built_in\">AddOnScreenDebugMessage</span>(<span class=\"number\">-1</span>, <span class=\"number\">10.f</span>, FColor::Green,</span><br><span class=\"line\">\t\tFString::<span class=\"built_in\">Printf</span>(<span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;Hit: %s&quot;</span>), *result.<span class=\"built_in\">GetActor</span>()-&gt;<span class=\"built_in\">GetName</span>()));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<p>说明：</p>\n<ul>\n<li><code>FQuat</code>四元数<ul>\n<li><code>Indentity</code>：无旋转</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"4-SphereTrace\"><a href=\"#4-SphereTrace\" class=\"headerlink\" title=\"4. SphereTrace\"></a>4. SphereTrace</h3><p>情景：</p>\n<ul>\n<li>使用<code>Kismet</code>生成</li>\n<li>生成一个范围检测周边的<code>Actor</code></li>\n</ul>\n<p>示例：</p>\n<ul>\n<li><p>定义：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(EditDefaultsOnly, Category=<span class=\"string\">&quot;Trace&quot;</span>, BlueprintReadWrite, meta=(AllowPrivateAccess=<span class=\"literal\">true</span>))</span><br><span class=\"line\">\t<span class=\"type\">float</span> TraceRadius;</span><br></pre></td></tr></table></figure>\n\n\n</li>\n<li><p>实现：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">const</span> FVector Start, End = <span class=\"built_in\">GetOwner</span>()-&gt;<span class=\"built_in\">GetActorLocation</span>();</span><br><span class=\"line\">TArray&lt;AActor*&gt; ActorsToIgnore;</span><br><span class=\"line\">ActorsToIgnore.<span class=\"built_in\">Add</span>(<span class=\"built_in\">GetOwner</span>());</span><br><span class=\"line\">TArray&lt;FHitResult&gt; HitResults;</span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">bool</span> IsHit = UKismetSystemLibrary::<span class=\"built_in\">SphereTraceMulti</span>(</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>,</span><br><span class=\"line\">\t\tStart,</span><br><span class=\"line\">\t\tEnd,</span><br><span class=\"line\">\t\tTraceRadius,</span><br><span class=\"line\">\t\tTraceTypeQuery1, </span><br><span class=\"line\">\t\t<span class=\"literal\">false</span>,</span><br><span class=\"line\">\t\tActorsToIgnore,</span><br><span class=\"line\">\t\tEDrawDebugTrace::ForDuration,</span><br><span class=\"line\">\t\tHitResults,</span><br><span class=\"line\">\t\t<span class=\"literal\">true</span>,</span><br><span class=\"line\">\t\tFLinearColor::Green,</span><br><span class=\"line\">\t\tFLinearColor::Red,</span><br><span class=\"line\">\t\t<span class=\"number\">60.f</span>);</span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"keyword\">if</span> (!IsHit)&#123;<span class=\"keyword\">return</span>;&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">const</span> <span class=\"keyword\">auto</span> &amp;result : HitResults)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tGEngine-&gt;<span class=\"built_in\">AddOnScreenDebugMessage</span>(</span><br><span class=\"line\">        <span class=\"number\">-1</span>, <span class=\"number\">60.f</span>, FColor::Green,</span><br><span class=\"line\">\t\tFString::<span class=\"built_in\">Printf</span>(<span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;Hit: %s&quot;</span>), </span><br><span class=\"line\">        *result.<span class=\"built_in\">GetActor</span>()-&gt;<span class=\"built_in\">GetName</span>()));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"5-Character\"><a href=\"#5-Character\" class=\"headerlink\" title=\"5. Character\"></a>5. Character</h3><p>情景：</p>\n<ul>\n<li>第三人称</li>\n<li>自由视角</li>\n<li>角色朝向鼠标输入和控制器指向</li>\n</ul>\n<p>示例：</p>\n<ul>\n<li><p>准备：</p>\n<ol>\n<li>编辑 &gt;&gt; 项目设置 &gt;&gt; 引擎 &gt;&gt; 输入</li>\n<li>添加操作映射<ul>\n<li>Jump &#x3D;&#x3D; 空格键</li>\n</ul>\n</li>\n<li>添加轴映射<ul>\n<li>MoveForward<ul>\n<li>W &#x3D;&#x3D; 1.0</li>\n<li>S &#x3D;&#x3D; -1.0</li>\n</ul>\n</li>\n<li>MoveRight<ul>\n<li>D &#x3D;&#x3D; 1.0</li>\n<li>A &#x3D;&#x3D; -1.0</li>\n</ul>\n</li>\n<li>PitchCamera<ul>\n<li>鼠标Y &#x3D;&#x3D; -1.0</li>\n</ul>\n</li>\n<li>YawCamera<ul>\n<li>鼠标X &#x3D;&#x3D; 1.0</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n</li>\n<li><p>定义：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">USpringArmComponent</span>;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">UCameraComponent</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(VisibleDefaultsOnly, BlueprintReadWrite, Category=<span class=\"string\">&quot;Player&quot;</span>, meta=(AllowPrivateAccess=<span class=\"literal\">true</span>))</span><br><span class=\"line\">\tUSpringArmComponent *PlayerSpringArmComponent;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(VisibleDefaultsOnly, BlueprintReadWrite, Category=<span class=\"string\">&quot;Player&quot;</span>, meta=(AllowPrivateAccess=<span class=\"literal\">true</span>))</span><br><span class=\"line\">\tUCameraComponent *PlayerCameraComponent;</span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">UFUNCTION</span>()</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">MoveForward</span><span class=\"params\">(<span class=\"type\">float</span> Value)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">UFUNCTION</span>()</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">MoveRight</span><span class=\"params\">(<span class=\"type\">float</span> Value)</span></span>;</span><br></pre></td></tr></table></figure>\n\n\n</li>\n<li><p>实现：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ACharacterBase::<span class=\"built_in\">ACharacterBase</span>()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tPrimaryActorTick.bCanEverTick = <span class=\"literal\">true</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">GetCapsuleComponent</span>()-&gt;<span class=\"built_in\">InitCapsuleSize</span>(<span class=\"number\">36.f</span>, <span class=\"number\">92.f</span>);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tPlayerSpringArmComponent = <span class=\"built_in\">CreateDefaultSubobject</span>&lt;USpringArmComponent&gt;(<span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;SpringArm&quot;</span>));</span><br><span class=\"line\">\tPlayerSpringArmComponent-&gt;<span class=\"built_in\">SetupAttachment</span>(RootComponent);</span><br><span class=\"line\">    PlayerSpringArmComponent-&gt;bUsePawnControlRotation = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 以下是详细配置</span></span><br><span class=\"line\">\tPlayerSpringArmComponent-&gt;<span class=\"built_in\">SetRelativeLocation</span>(<span class=\"built_in\">FVector</span>(<span class=\"number\">0.f</span>, <span class=\"number\">0.f</span>, <span class=\"number\">90.f</span>));</span><br><span class=\"line\">\tPlayerSpringArmComponent-&gt;TargetArmLength = <span class=\"number\">300.f</span>;</span><br><span class=\"line\">\tPlayerSpringArmComponent-&gt;bEnableCameraLag = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\tPlayerSpringArmComponent-&gt;bEnableCameraRotationLag = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\tPlayerSpringArmComponent-&gt;CameraLagSpeed = <span class=\"number\">10.f</span>;</span><br><span class=\"line\">\tPlayerSpringArmComponent-&gt;CameraRotationLagSpeed = <span class=\"number\">10.f</span>;</span><br><span class=\"line\">\tPlayerSpringArmComponent-&gt;CameraLagMaxDistance = <span class=\"number\">100.f</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\tPlayerCameraComponent = <span class=\"built_in\">CreateDefaultSubobject</span>&lt;UCameraComponent&gt;(<span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;Camera&quot;</span>));</span><br><span class=\"line\">\tPlayerCameraComponent-&gt;<span class=\"built_in\">SetupAttachment</span>(PlayerSpringArmComponent, USpringArmComponent::SocketName);</span><br><span class=\"line\">\tPlayerCameraComponent-&gt;bUsePawnControlRotation = <span class=\"literal\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">GetCharacterMovement</span>()-&gt;bOrientRotationToMovement = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 以下是详细配置</span></span><br><span class=\"line\">\t<span class=\"built_in\">GetCharacterMovement</span>()-&gt;RotationRate = <span class=\"built_in\">FRotator</span>(<span class=\"number\">0.f</span>, <span class=\"number\">90.f</span>, <span class=\"number\">0.f</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">GetCharacterMovement</span>()-&gt;GravityScale = <span class=\"number\">1.5f</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">GetCharacterMovement</span>()-&gt;MaxAcceleration = <span class=\"number\">980.f</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">GetCharacterMovement</span>()-&gt;JumpZVelocity = <span class=\"number\">600.f</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">GetCharacterMovement</span>()-&gt;AirControl = <span class=\"number\">0.2f</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\tbUseControllerRotationPitch = <span class=\"literal\">false</span>;</span><br><span class=\"line\">\tbUseControllerRotationRoll = <span class=\"literal\">false</span>;</span><br><span class=\"line\">\tbUseControllerRotationYaw = <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">ACharacterBase::SetupPlayerInputComponent</span><span class=\"params\">(UInputComponent* PlayerInputComponent)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tSuper::<span class=\"built_in\">SetupPlayerInputComponent</span>(PlayerInputComponent);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// Bind Axis =&gt; MoveForward, MoveRight</span></span><br><span class=\"line\">\tPlayerInputComponent-&gt;<span class=\"built_in\">BindAxis</span>(<span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;MoveForward&quot;</span>), <span class=\"keyword\">this</span>, &amp;ACharacterBase::MoveForward);</span><br><span class=\"line\">\tPlayerInputComponent-&gt;<span class=\"built_in\">BindAxis</span>(<span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;MoveRight&quot;</span>), <span class=\"keyword\">this</span>, &amp;ACharacterBase::MoveRight);</span><br><span class=\"line\">    <span class=\"comment\">// Pawn, Character 已经写好了内部的鼠标输入</span></span><br><span class=\"line\">\tPlayerInputComponent-&gt;<span class=\"built_in\">BindAxis</span>(<span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;PitchCamera&quot;</span>), <span class=\"keyword\">this</span>, &amp;ACharacter::AddControllerPitchInput);</span><br><span class=\"line\">\tPlayerInputComponent-&gt;<span class=\"built_in\">BindAxis</span>(<span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;YawCamera&quot;</span>), <span class=\"keyword\">this</span>, &amp;ACharacter::AddControllerYawInput);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// Bind Action =&gt; Jump</span></span><br><span class=\"line\">\tPlayerInputComponent-&gt;<span class=\"built_in\">BindAction</span>(<span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;Jump&quot;</span>), IE_Pressed, <span class=\"keyword\">this</span>, &amp;ACharacter::Jump);</span><br><span class=\"line\">\tPlayerInputComponent-&gt;<span class=\"built_in\">BindAction</span>(<span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;Jump&quot;</span>), IE_Released, <span class=\"keyword\">this</span>, &amp;ACharacter::StopJumping);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">ACharacterBase::MoveForward</span><span class=\"params\">(<span class=\"type\">float</span> Value)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 这种方法有问题：人物应用摄像机旋转，摄像机应用控制器旋转时，鼠标完全朝上或朝下，将无法正常行走</span></span><br><span class=\"line\">\t<span class=\"comment\">//const FVector Direction = FRotationMatrix(GetController()-&gt;GetControlRotation()).GetScaledAxis(EAxis::X);</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 这个方法简单，通用</span></span><br><span class=\"line\">    <span class=\"type\">const</span> FVector Direction = <span class=\"built_in\">GetActorForwardVector</span>();</span><br><span class=\"line\">\t<span class=\"built_in\">AddMovementInput</span>(Direction, Value);</span><br><span class=\"line\">    </span><br><span class=\"line\">    ###### 官方写法 #####<span class=\"meta\">#</span></span><br><span class=\"line\"><span class=\"meta\">\t<span class=\"keyword\">if</span> ((Controller != nullptr) &amp;&amp; (Value != 0.0f))</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// find out which way is forward</span></span><br><span class=\"line\">\t\t<span class=\"type\">const</span> FRotator Rotation = Controller-&gt;<span class=\"built_in\">GetControlRotation</span>();</span><br><span class=\"line\">\t\t<span class=\"function\"><span class=\"type\">const</span> FRotator <span class=\"title\">YawRotation</span><span class=\"params\">(<span class=\"number\">0</span>, Rotation.Yaw, <span class=\"number\">0</span>)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">// get forward vector</span></span><br><span class=\"line\">\t\t<span class=\"type\">const</span> FVector Direction = <span class=\"built_in\">FRotationMatrix</span>(YawRotation).<span class=\"built_in\">GetUnitAxis</span>(EAxis::X);</span><br><span class=\"line\">\t\t<span class=\"built_in\">AddMovementInput</span>(Direction, Value);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">ACharacterBase::MoveRight</span><span class=\"params\">(<span class=\"type\">float</span> Value)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">// const FVector Direction = FRotationMatrix(GetController()-&gt;GetControlRotation()).GetScaledAxis(EAxis::Y);</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"type\">const</span> FVector Direction = <span class=\"built_in\">GetActorRightVector</span>();</span><br><span class=\"line\">\t<span class=\"built_in\">AddMovementInput</span>(Direction, Value);</span><br><span class=\"line\">    </span><br><span class=\"line\">    ###### 官方写法 #####<span class=\"meta\">#</span></span><br><span class=\"line\"><span class=\"meta\">    <span class=\"keyword\">if</span> ( (Controller != nullptr) &amp;&amp; (Value != 0.0f) )</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// find out which way is right</span></span><br><span class=\"line\">\t\t<span class=\"type\">const</span> FRotator Rotation = Controller-&gt;<span class=\"built_in\">GetControlRotation</span>();</span><br><span class=\"line\">\t\t<span class=\"function\"><span class=\"type\">const</span> FRotator <span class=\"title\">YawRotation</span><span class=\"params\">(<span class=\"number\">0</span>, Rotation.Yaw, <span class=\"number\">0</span>)</span></span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t\t<span class=\"comment\">// get right vector </span></span><br><span class=\"line\">\t\t<span class=\"type\">const</span> FVector Direction = <span class=\"built_in\">FRotationMatrix</span>(YawRotation).<span class=\"built_in\">GetUnitAxis</span>(EAxis::Y);</span><br><span class=\"line\">\t\t<span class=\"comment\">// add movement in that direction</span></span><br><span class=\"line\">\t\t<span class=\"built_in\">AddMovementInput</span>(Direction, Value);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"6-Pawn\"><a href=\"#6-Pawn\" class=\"headerlink\" title=\"6. Pawn\"></a>6. Pawn</h3><p>情景：</p>\n<ul>\n<li>使用<code>Pawn</code>去写非人型</li>\n</ul>\n<p>示例：</p>\n<ul>\n<li><p>定义：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(VisibleDefaultsOnly, BlueprintReadOnly, Category=<span class=\"string\">&quot;Pawn&quot;</span>, meta=(AllowPrivateAccess=<span class=\"literal\">true</span>))</span><br><span class=\"line\">\tFVector MovementDirection;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(EditDefaultsOnly, BlueprintReadWrite, Category=<span class=\"string\">&quot;Pawn&quot;</span>, meta=(AllowPrivateAccess=<span class=\"literal\">true</span>))</span><br><span class=\"line\">\t<span class=\"type\">float</span> MovementSpeed;</span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">UFUNCTION</span>()</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">MoveForward</span><span class=\"params\">(<span class=\"type\">float</span> Value)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">UFUNCTION</span>()</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">MoveRight</span><span class=\"params\">(<span class=\"type\">float</span> Value)</span></span>;</span><br></pre></td></tr></table></figure>\n\n\n</li>\n<li><p>实现：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">APawnBase::Tick</span><span class=\"params\">(<span class=\"type\">float</span> DeltaTime)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tSuper::<span class=\"built_in\">Tick</span>(DeltaTime);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!MovementDirection.<span class=\"built_in\">IsZero</span>())</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">const</span> FVector NewLocation = <span class=\"built_in\">GetActorLocation</span>() + (MovementDirection * DeltaTime * MovementSpeed);</span><br><span class=\"line\">\t\t<span class=\"built_in\">SetActorLocation</span>(NewLocation);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">APawnBase::SetupPlayerInputComponent</span><span class=\"params\">(UInputComponent* PlayerInputComponent)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tSuper::<span class=\"built_in\">SetupPlayerInputComponent</span>(PlayerInputComponent);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// Bind Axis =&gt; MoveForward, MoveRight</span></span><br><span class=\"line\">\tPlayerInputComponent-&gt;<span class=\"built_in\">BindAxis</span>(<span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;MoveForward&quot;</span>), <span class=\"keyword\">this</span>, &amp;APawnBase::MoveForward);</span><br><span class=\"line\">\tPlayerInputComponent-&gt;<span class=\"built_in\">BindAxis</span>(<span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;MoveRight&quot;</span>), <span class=\"keyword\">this</span>, &amp;APawnBase::MoveRight);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">APawnBase::MoveForward</span><span class=\"params\">(<span class=\"type\">float</span> Value)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tMovementDirection.X = FMath::<span class=\"built_in\">Clamp</span>(Value, <span class=\"number\">-1.f</span>, <span class=\"number\">1.f</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">APawnBase::MoveRight</span><span class=\"params\">(<span class=\"type\">float</span> Value)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tMovementDirection.Y = FMath::<span class=\"built_in\">Clamp</span>(Value, <span class=\"number\">-1.f</span>, <span class=\"number\">1.f</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"7-Impulse-Force\"><a href=\"#7-Impulse-Force\" class=\"headerlink\" title=\"7. Impulse Force\"></a>7. Impulse Force</h3><p>情景：</p>\n<ul>\n<li>反射一条射线，朝向<code>可移动</code>，开启<code>模拟物理</code>的<code>Actor</code></li>\n<li>使得<code>Actor</code>往射线方向添加<code>脉冲力</code></li>\n</ul>\n<p>示例：</p>\n<ul>\n<li><p>定义：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(EditDefaultsOnly, BlueprintReadWrite, meta=(AllowPrivateAccess=<span class=\"literal\">true</span>))</span><br><span class=\"line\">\t<span class=\"type\">float</span> TraceDistance;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(EditDefaultsOnly, BlueprintReadWrite, meta=(AllowPrivateAccess=<span class=\"literal\">true</span>))</span><br><span class=\"line\">\t<span class=\"type\">float</span> ImpulseForce;</span><br></pre></td></tr></table></figure>\n\n\n</li>\n<li><p>实现：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FHitResult HitResult;</span><br><span class=\"line\"><span class=\"type\">const</span> FVector Start = <span class=\"built_in\">GetComponentLocation</span>();</span><br><span class=\"line\"><span class=\"type\">const</span> FVector End = Start + (<span class=\"built_in\">GetComponentRotation</span>().<span class=\"built_in\">Vector</span>() * TraceDistance);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">bool</span> IsHit = <span class=\"built_in\">GetWorld</span>()-&gt;<span class=\"built_in\">LineTraceSingleByChannel</span>(</span><br><span class=\"line\">\tHitResult,</span><br><span class=\"line\">\tStart,</span><br><span class=\"line\">\tEnd,</span><br><span class=\"line\">\tECC_Visibility);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (!IsHit)&#123;<span class=\"keyword\">return</span>;&#125;</span><br><span class=\"line\"><span class=\"built_in\">DrawDebugLine</span>(<span class=\"built_in\">GetWorld</span>(), Start, End, FColor::Green, <span class=\"literal\">false</span>, <span class=\"number\">0.1f</span>);</span><br><span class=\"line\">UStaticMeshComponent *StaticMeshComponent = <span class=\"built_in\">Cast</span>&lt;UStaticMeshComponent&gt;(HitResult.<span class=\"built_in\">GetActor</span>()-&gt;<span class=\"built_in\">GetRootComponent</span>());</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (!StaticMeshComponent || !HitResult.<span class=\"built_in\">GetActor</span>()-&gt;<span class=\"built_in\">IsRootComponentMovable</span>())&#123;<span class=\"keyword\">return</span>;&#125;</span><br><span class=\"line\">StaticMeshComponent-&gt;<span class=\"built_in\">AddImpulse</span>(<span class=\"built_in\">GetForwardVector</span>() * ImpulseForce * StaticMeshComponent-&gt;<span class=\"built_in\">GetMass</span>());</span><br></pre></td></tr></table></figure></li>\n</ul>\n<p>说明：</p>\n<ul>\n<li><code>HitResult.GetActor()-&gt;GetRootComponent()</code>是针对根组件是<code>UStaticMeshComponent</code></li>\n<li>最好改为<code>HitResult.GetActor()-&gt;GetStaticMeshComponent()</code></li>\n<li>目的确保任意<code>可移动</code>，<code>模拟物理</code>的<code>Actor</code>都能收到影响</li>\n<li><code>GetStaticMeshComponent()</code>可在任意<code>Actor</code>内实现此函数，返回<code>UStaticMeshComponent*</code></li>\n</ul>\n<h3 id=\"8-Add-Force\"><a href=\"#8-Add-Force\" class=\"headerlink\" title=\"8. Add Force\"></a>8. Add Force</h3><p>情景：</p>\n<ul>\n<li>不发射射线</li>\n<li>给可以模拟物理的<code>Actor</code>添加力</li>\n</ul>\n<p>示例：</p>\n<ul>\n<li><p>定义：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">UStaticMeshComponent</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(VisibleDefaultsOnly, BlueprintReadOnly, meta=(AllowPrivateAccess=<span class=\"literal\">true</span>))</span><br><span class=\"line\">\tUStaticMeshComponent *StaticMeshComponent;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(EditDefaultsOnly, BlueprintReadWrite, meta=(AllowPrivateAccess=<span class=\"literal\">true</span>))</span><br><span class=\"line\">\t<span class=\"type\">float</span> Force;</span><br></pre></td></tr></table></figure>\n\n\n</li>\n<li><p>实现：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">UAddForce_SComp::BeginPlay</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tSuper::<span class=\"built_in\">BeginPlay</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\tStaticMeshComponent = <span class=\"built_in\">Cast</span>&lt;UStaticMeshComponent&gt;(<span class=\"built_in\">GetOwner</span>()-&gt;<span class=\"built_in\">GetRootComponent</span>());</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">UAddForce_SComp::TickComponent</span><span class=\"params\">(<span class=\"type\">float</span> DeltaTime, ELevelTick TickType, FActorComponentTickFunction* ThisTickFunction)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tSuper::<span class=\"built_in\">TickComponent</span>(DeltaTime, TickType, ThisTickFunction);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"type\">const</span> FVector UpForce = <span class=\"built_in\">GetUpVector</span>();</span><br><span class=\"line\">\tStaticMeshComponent-&gt;<span class=\"built_in\">AddForce</span>(UpForce * Force * StaticMeshComponent-&gt;<span class=\"built_in\">GetMass</span>());</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"9-Radia-Impulse-Force\"><a href=\"#9-Radia-Impulse-Force\" class=\"headerlink\" title=\"9. Radia Impulse Force\"></a>9. Radia Impulse Force</h3><p>情景：</p>\n<ul>\n<li>实现<code>爆炸力</code></li>\n</ul>\n<p>示例：</p>\n<ul>\n<li><p>定义：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(EditDefaultsOnly, BlueprintReadWrite, meta=(AllowPrivateAccess=<span class=\"literal\">true</span>))</span><br><span class=\"line\">\t<span class=\"type\">float</span> ImpulseRadius;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(EditDefaultsOnly, BlueprintReadWrite, meta=(AllowPrivateAccess=<span class=\"literal\">true</span>))</span><br><span class=\"line\">\t<span class=\"type\">float</span> ImpulseForceStrength;</span><br></pre></td></tr></table></figure>\n\n\n</li>\n<li><p>实现：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">URadiaImpulse_SComp::BeginPlay</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tSuper::<span class=\"built_in\">BeginPlay</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\tTArray&lt;FHitResult&gt; HitResults;</span><br><span class=\"line\">\t<span class=\"type\">const</span> FVector Start, End = <span class=\"built_in\">GetComponentLocation</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"type\">const</span> <span class=\"type\">bool</span> IsHit = <span class=\"built_in\">GetWorld</span>()-&gt;<span class=\"built_in\">SweepMultiByChannel</span>(</span><br><span class=\"line\">\t\tHitResults,</span><br><span class=\"line\">\t\tStart,</span><br><span class=\"line\">\t\tEnd,</span><br><span class=\"line\">\t\tFQuat::Identity,</span><br><span class=\"line\">\t\tECC_WorldStatic,</span><br><span class=\"line\">\t\tFCollisionShape::<span class=\"built_in\">MakeSphere</span>(ImpulseRadius));</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">DrawDebugSphere</span>(</span><br><span class=\"line\">\t\t<span class=\"built_in\">GetWorld</span>(),</span><br><span class=\"line\">\t\tStart,</span><br><span class=\"line\">\t\tImpulseRadius,</span><br><span class=\"line\">\t\t<span class=\"number\">50</span>,</span><br><span class=\"line\">\t\tFColor::Green,</span><br><span class=\"line\">\t\t<span class=\"literal\">true</span>);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!IsHit)&#123;<span class=\"keyword\">return</span>;&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">const</span> <span class=\"keyword\">auto</span> &amp;result : HitResults)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tUStaticMeshComponent *MeshComponent = <span class=\"built_in\">Cast</span>&lt;UStaticMeshComponent&gt;(result.<span class=\"built_in\">GetActor</span>()-&gt;<span class=\"built_in\">GetRootComponent</span>());</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (!MeshComponent)&#123;<span class=\"keyword\">continue</span>;&#125;</span><br><span class=\"line\">\t\tMeshComponent-&gt;<span class=\"built_in\">AddRadialImpulse</span>(</span><br><span class=\"line\">\t\t\tStart,</span><br><span class=\"line\">\t\t\tImpulseRadius,</span><br><span class=\"line\">\t\t\tImpulseForceStrength,</span><br><span class=\"line\">\t\t\tRIF_Linear,</span><br><span class=\"line\">\t\t\t<span class=\"literal\">true</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"10-TimerHandle\"><a href=\"#10-TimerHandle\" class=\"headerlink\" title=\"10. TimerHandle\"></a>10. TimerHandle</h3><p>情景：</p>\n<ul>\n<li>需要使用定时器</li>\n</ul>\n<p>示例：</p>\n<ul>\n<li><p>定义：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> PrintScreen(String) GEngine-&gt;AddOnScreenDebugMessage(-1, 10.f, FColor::Green, String)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(EditDefaultsOnly, BlueprintReadWrite, meta=(AllowPrivateAccess=<span class=\"literal\">true</span>))</span><br><span class=\"line\">\tint32 CallTracker;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(VisibleDefaultsOnly, BlueprintReadOnly, meta=(AllowPrivateAccess=<span class=\"literal\">true</span>))</span><br><span class=\"line\">\tFTimerHandle TimerHandle;</span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">UFUNCTION</span>()</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">TimerFunction</span><span class=\"params\">()</span></span>;</span><br></pre></td></tr></table></figure>\n\n\n</li>\n<li><p>实现：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">ATimerHandle_Actor::BeginPlay</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tSuper::<span class=\"built_in\">BeginPlay</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">GetWorldTimerManager</span>().<span class=\"built_in\">SetTimer</span>(</span><br><span class=\"line\">\t\tTimerHandle,</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>,</span><br><span class=\"line\">\t\t&amp;ATimerHandle_Actor::TimerFunction,</span><br><span class=\"line\">\t\t<span class=\"number\">1.f</span>,</span><br><span class=\"line\">\t\t<span class=\"literal\">true</span>,</span><br><span class=\"line\">\t\t<span class=\"number\">1.f</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">ATimerHandle_Actor::TimerFunction</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tCallTracker == <span class=\"number\">0</span> ?</span><br><span class=\"line\">\t\t<span class=\"built_in\">PrintScreen</span>(<span class=\"string\">&quot;Timer End&quot;</span>), <span class=\"built_in\">GetWorldTimerManager</span>().<span class=\"built_in\">ClearTimer</span>(TimerHandle) :</span><br><span class=\"line\">\t\t<span class=\"built_in\">PrintScreen</span>(FString::<span class=\"built_in\">Printf</span>(<span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;Timer: %d&quot;</span>), CallTracker));</span><br><span class=\"line\"></span><br><span class=\"line\">\t--CallTracker;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n</li>\n<li><p>注意：</p>\n<ul>\n<li>但类作为父类时，要使子类也可使用<code>TimerHandle</code>，需要用<code>protected</code>修饰</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"11-Disable-Actor\"><a href=\"#11-Disable-Actor\" class=\"headerlink\" title=\"11. Disable Actor\"></a>11. Disable Actor</h3><p>情景：</p>\n<ul>\n<li>编辑场景中的<code>Actor</code></li>\n<li>不希望直接从场景中删除</li>\n<li>可以在生成的实例编辑中关闭</li>\n<li>不消耗性能</li>\n</ul>\n<p>示例：</p>\n<ul>\n<li><p>定义：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> PrintScreen(String) GEngine-&gt;AddOnScreenDebugMessage(-1, 10.f, FColor::Green, String)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(EditAnywhere, BlueprintReadWrite, meta=(AllowPrivateAccess=<span class=\"literal\">true</span>))</span><br><span class=\"line\">\t<span class=\"type\">bool</span> isOverrideTick = <span class=\"literal\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(EditAnywhere, BlueprintReadWrite, meta=(AllowPrivateAccess=<span class=\"literal\">true</span>))</span><br><span class=\"line\">\t<span class=\"type\">bool</span> isAutoDisable = <span class=\"literal\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">UFUNCTION</span>()</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">SetActive</span><span class=\"params\">(<span class=\"type\">bool</span> isActive)</span></span>;</span><br></pre></td></tr></table></figure>\n\n\n</li>\n<li><p>实现：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ADisableActor::<span class=\"built_in\">ADisableActor</span>()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tPrimaryActorTick.bCanEverTick = <span class=\"literal\">true</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">ADisableActor::BeginPlay</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tSuper::<span class=\"built_in\">BeginPlay</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\tisOverrideTick = !PrimaryActorTick.bCanEverTick;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (isAutoDisable)&#123;<span class=\"built_in\">SetActive</span>(<span class=\"literal\">false</span>);&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">ADisableActor::Tick</span><span class=\"params\">(<span class=\"type\">float</span> DeltaSeconds)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tSuper::<span class=\"built_in\">Tick</span>(DeltaSeconds);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">PrintScreen</span>(<span class=\"string\">&quot;Tick&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">ADisableActor::SetActive</span><span class=\"params\">(<span class=\"type\">bool</span> isActive)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (isOverrideTick)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">SetActorTickEnabled</span>(<span class=\"literal\">false</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">SetActorTickEnabled</span>(isActive);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">SetActorHiddenInGame</span>(!isActive);</span><br><span class=\"line\">\t<span class=\"built_in\">SetActorEnableCollision</span>(isActive);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<p>说明：</p>\n<ul>\n<li>在场景中，只需要实例中的<code>isAutoDisable</code>进行勾选</li>\n<li>重新运行，<code>Actor</code>将会被禁用，不会作用于场景中</li>\n</ul>\n<h3 id=\"12-Hit-Event\"><a href=\"#12-Hit-Event\" class=\"headerlink\" title=\"12. Hit Event\"></a>12. Hit Event</h3><p>情景：</p>\n<ul>\n<li>通过一个<code>Actor</code>和场景中的其他<code>Actor</code>碰撞</li>\n<li>产生碰撞事件</li>\n</ul>\n<p>示例：</p>\n<ul>\n<li><p>定义：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> PrintScreen(String) GEngine-&gt;AddOnScreenDebugMessage(-1, 10.f, FColor::Green, String)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">UBoxComponent</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(VisibleDefaultsOnly, BlueprintReadWrite, meta=(AllowPrivateAccess=<span class=\"literal\">true</span>))</span><br><span class=\"line\">\tUBoxComponent *HitBox;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">UFUNCTION</span>()</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">OnHitComp</span><span class=\"params\">(UPrimitiveComponent* HitComponent, AActor* OtherActor, UPrimitiveComponent* OtherComp,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">\t\tFVector NormalImpulse, <span class=\"type\">const</span> FHitResult&amp; Hit)</span></span>;</span><br></pre></td></tr></table></figure>\n\n\n</li>\n<li><p>实现：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">AHitEventActor::<span class=\"built_in\">AHitEventActor</span>()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tPrimaryActorTick.bCanEverTick = <span class=\"literal\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\tHitBox = <span class=\"built_in\">CreateDefaultSubobject</span>&lt;UBoxComponent&gt;(<span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;Hit Box&quot;</span>));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">AHitEventActor::BeginPlay</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tSuper::<span class=\"built_in\">BeginPlay</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\tHitBox-&gt;OnComponentHit.<span class=\"built_in\">AddDynamic</span>(<span class=\"keyword\">this</span>, &amp;AHitEventActor::OnHitComp);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">AHitEventActor::OnHitComp</span><span class=\"params\">(UPrimitiveComponent* HitComponent, AActor* OtherActor, UPrimitiveComponent* OtherComp,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">\tFVector NormalImpulse, <span class=\"type\">const</span> FHitResult&amp; Hit)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">PrintScreen</span>(FString::<span class=\"built_in\">Printf</span>(<span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;Hit: %s&quot;</span>), *OtherActor-&gt;<span class=\"built_in\">GetName</span>()));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<p>说明：</p>\n<ul>\n<li><code>HitBox</code>需要些设置，碰撞事件才能生效</li>\n<li>配置：<ul>\n<li>方便查看：<ul>\n<li>设置<code>形状</code></li>\n<li>设置<code>渲染</code></li>\n</ul>\n</li>\n<li>产生事件：设置<code>碰撞</code><ul>\n<li>打开<code>模拟生成命中事件</code></li>\n<li>设置<code>碰撞预设</code></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"13-Set-Material\"><a href=\"#13-Set-Material\" class=\"headerlink\" title=\"13. Set Material\"></a>13. Set Material</h3><p>情景：</p>\n<ul>\n<li>材质的创建</li>\n<li>材质的使用</li>\n</ul>\n<p>示例：</p>\n<ul>\n<li><p>定义：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">UStaticMeshComponent</span>;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">UMaterialInterface</span>;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">UMaterial</span>;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">UMaterialInstance</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(VisibleAnywhere, BlueprintReadWrite, meta=(AllowPrivateAccess=<span class=\"literal\">true</span>))</span><br><span class=\"line\">\tUStaticMeshComponent *Mesh;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(EditAnywhere, BlueprintReadWrite, meta=(AllowPrivateAccess=<span class=\"literal\">true</span>))</span><br><span class=\"line\">\tUMaterialInterface *MaterialOne;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(EditAnywhere, BlueprintReadWrite, meta=(AllowPrivateAccess=<span class=\"literal\">true</span>))</span><br><span class=\"line\">\tUMaterialInterface *MaterialTwo;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(EditAnywhere, BlueprintReadWrite, meta=(AllowPrivateAccess=<span class=\"literal\">true</span>))</span><br><span class=\"line\">\tUMaterial *Material;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(EditAnywhere, BlueprintReadWrite, meta=(AllowPrivateAccess=<span class=\"literal\">true</span>))</span><br><span class=\"line\">\tUMaterialInstance *MaterialInstance;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(EditAnywhere, BlueprintReadWrite, meta=(AllowPrivateAccess=<span class=\"literal\">true</span>))</span><br><span class=\"line\">\t<span class=\"type\">bool</span> IsChooseOne = <span class=\"literal\">true</span>;</span><br></pre></td></tr></table></figure>\n\n\n</li>\n<li><p>实现：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ASetMaterial::<span class=\"built_in\">ASetMaterial</span>()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tPrimaryActorTick.bCanEverTick = <span class=\"literal\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\tMesh = <span class=\"built_in\">CreateDefaultSubobject</span>&lt;UStaticMeshComponent&gt;(<span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;Mesh_Comp&quot;</span>));</span><br><span class=\"line\">\tRootComponent = Mesh;</span><br><span class=\"line\"></span><br><span class=\"line\">\tMaterialOne = <span class=\"built_in\">CreateDefaultSubobject</span>&lt;UMaterialInterface&gt;(<span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;Material_One&quot;</span>));</span><br><span class=\"line\">\tMaterialTwo = <span class=\"built_in\">CreateDefaultSubobject</span>&lt;UMaterialInterface&gt;(<span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;Material_Two&quot;</span>));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">ASetMaterial::BeginPlay</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tSuper::<span class=\"built_in\">BeginPlay</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\tMesh-&gt;<span class=\"built_in\">SetMaterial</span>(<span class=\"number\">0</span>, IsChooseOne ? MaterialOne : MaterialTwo);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"14-Dynamic-Material\"><a href=\"#14-Dynamic-Material\" class=\"headerlink\" title=\"14. Dynamic Material\"></a>14. Dynamic Material</h3><p>情景：</p>\n<ul>\n<li>有一个基本的材质</li>\n<li>通过创建材质实例</li>\n<li>对其中的<code>ScaleParam</code>，<code>VectorParam</code>进行动态修改</li>\n</ul>\n<p>示例：</p>\n<ul>\n<li><p>定义：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">UStaticMeshComponent</span>;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">UMaterialInterface</span>;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">UMaterialInstanceDynamic</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(VisibleAnywhere, BlueprintReadWrite, meta=(AllowPrivateAccess=<span class=\"literal\">true</span>))</span><br><span class=\"line\">\tUStaticMeshComponent *Mesh;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(EditAnywhere, BlueprintReadWrite, meta=(AllowPrivateAccess=<span class=\"literal\">true</span>))</span><br><span class=\"line\">\tUMaterialInterface *MaterialInterface;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(VisibleAnywhere, BlueprintReadWrite, meta=(AllowPrivateAccess=<span class=\"literal\">true</span>))</span><br><span class=\"line\">\tUMaterialInstanceDynamic *DynamicInstance;</span><br></pre></td></tr></table></figure>\n\n\n</li>\n<li><p>实现：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ADynamicMaterial::<span class=\"built_in\">ADynamicMaterial</span>()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tPrimaryActorTick.bCanEverTick = <span class=\"literal\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\tMesh = <span class=\"built_in\">CreateDefaultSubobject</span>&lt;UStaticMeshComponent&gt;(<span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;MeshComp&quot;</span>));</span><br><span class=\"line\">\tRootComponent = Mesh;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">ADynamicMaterial::BeginPlay</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tSuper::<span class=\"built_in\">BeginPlay</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\tMaterialInterface = Mesh-&gt;<span class=\"built_in\">GetMaterial</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tDynamicInstance = UMaterialInstanceDynamic::<span class=\"built_in\">Create</span>(MaterialInterface, <span class=\"keyword\">this</span>);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tMesh-&gt;<span class=\"built_in\">SetMaterial</span>(<span class=\"number\">0</span>, DynamicInstance);</span><br><span class=\"line\"></span><br><span class=\"line\">\tDynamicInstance-&gt;<span class=\"built_in\">SetScalarParameterValue</span>(<span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;EmissiveStrength&quot;</span>), <span class=\"number\">50.f</span>);</span><br><span class=\"line\">\tDynamicInstance-&gt;<span class=\"built_in\">SetVectorParameterValue</span>(<span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;Color&quot;</span>), FLinearColor::Yellow);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"15-Interp-Target\"><a href=\"#15-Interp-Target\" class=\"headerlink\" title=\"15. Interp Target\"></a>15. Interp Target</h3><p>情景：</p>\n<ul>\n<li>指定<code>Actor</code>插值移动到<code>Target</code></li>\n</ul>\n<p>示例：</p>\n<ul>\n<li><p>定义：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(VisibleAnywhere, BlueprintReadWrite, meta=(AllowPrivateAccess=<span class=\"literal\">true</span>))</span><br><span class=\"line\">\tAActor *Origin = <span class=\"literal\">nullptr</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(EditAnywhere, BlueprintReadWrite, meta=(AllowPrivateAccess=<span class=\"literal\">true</span>))</span><br><span class=\"line\">\tAActor *Target;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(EditAnywhere, BlueprintReadWrite, meta=(AllowPrivateAccess=<span class=\"literal\">true</span>))</span><br><span class=\"line\">\t<span class=\"type\">float</span> InterpSpeed = <span class=\"number\">3.f</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(EditAnywhere, BlueprintReadWrite, meta=(AllowPrivateAccess=<span class=\"literal\">true</span>))</span><br><span class=\"line\">\t<span class=\"type\">float</span> WaitTime = <span class=\"number\">1.f</span>;</span><br></pre></td></tr></table></figure>\n\n\n</li>\n<li><p>实现：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">UInterpTarget_SComp::BeginPlay</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tSuper::<span class=\"built_in\">BeginPlay</span>();</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tOrigin = <span class=\"built_in\">GetOwner</span>();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">UInterpTarget_SComp::TickComponent</span><span class=\"params\">(<span class=\"type\">float</span> DeltaTime, ELevelTick TickType, FActorComponentTickFunction* ThisTickFunction)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tSuper::<span class=\"built_in\">TickComponent</span>(DeltaTime, TickType, ThisTickFunction);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (WaitTime &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tWaitTime -= DeltaTime;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!Target || !Origin)&#123;<span class=\"keyword\">return</span>;&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tOrigin-&gt;<span class=\"built_in\">SetActorLocation</span>(</span><br><span class=\"line\">\t\tFMath::<span class=\"built_in\">VInterpTo</span>(</span><br><span class=\"line\">\t\t\tOrigin-&gt;<span class=\"built_in\">GetActorLocation</span>(),</span><br><span class=\"line\">\t\t\tTarget-&gt;<span class=\"built_in\">GetActorLocation</span>(),</span><br><span class=\"line\">\t\t\tDeltaTime,</span><br><span class=\"line\">\t\t\tInterpSpeed));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<p>说明：</p>\n<ul>\n<li><code>Origin = GetOwner();</code>写在构造函数里无效</li>\n</ul>\n<h3 id=\"16-Lerp\"><a href=\"#16-Lerp\" class=\"headerlink\" title=\"16. Lerp\"></a>16. Lerp</h3><p>情景：</p>\n<ul>\n<li>需要使用<code>Lerp</code></li>\n<li>修改<code>Actor</code>的<code>位置</code>和<code>材质</code></li>\n</ul>\n<p>示例：</p>\n<ul>\n<li><p>定义：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">UMaterialInterface</span>;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">UMaterialInstanceDynamic</span>;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">UStaticMeshComponent</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(EditAnywhere, BlueprintReadWrite, meta=(AllowPrivateAccess=<span class=\"literal\">true</span>))</span><br><span class=\"line\">\tUMaterialInterface *MaterialInter;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(VisibleAnywhere, BlueprintReadWrite, meta=(AllowPrivateAccess=<span class=\"literal\">true</span>))</span><br><span class=\"line\">\tUMaterialInstanceDynamic *InstanceDynamic;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(VisibleAnywhere, BlueprintReadWrite, meta=(AllowPrivateAccess=<span class=\"literal\">true</span>))</span><br><span class=\"line\">\tAActor *OriginActor = <span class=\"literal\">nullptr</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(VisibleDefaultsOnly, BlueprintReadWrite, meta=(AllowPrivateAccess=<span class=\"literal\">true</span>))</span><br><span class=\"line\">\tUStaticMeshComponent *Mesh;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(VisibleAnywhere, BlueprintReadWrite, meta=(AllowPrivateAccess=<span class=\"literal\">true</span>))</span><br><span class=\"line\">\tFVector StartLocation;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(EditAnywhere, meta=(MakeEditWidget=<span class=\"literal\">true</span>))</span><br><span class=\"line\">\tFVector TargetLocation;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(EditAnywhere, BlueprintReadWrite, meta=(AllowPrivateAccess=<span class=\"literal\">true</span>))</span><br><span class=\"line\">\t<span class=\"type\">float</span> TimeElapsed = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(EditAnywhere, BlueprintReadWrite, meta=(AllowPrivateAccess=<span class=\"literal\">true</span>))</span><br><span class=\"line\">\t<span class=\"type\">float</span> LerpDuration = <span class=\"number\">3.f</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(EditAnywhere, BlueprintReadWrite, meta=(AllowPrivateAccess=<span class=\"literal\">true</span>))</span><br><span class=\"line\">\t<span class=\"type\">float</span> WaitTime = <span class=\"number\">1.f</span>;</span><br></pre></td></tr></table></figure>\n\n\n</li>\n<li><p>实现：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;Lerp_SComp.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">ULerp_SComp::<span class=\"built_in\">ULerp_SComp</span>()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tPrimaryComponentTick.bCanEverTick = <span class=\"literal\">true</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\tMesh = <span class=\"built_in\">CreateDefaultSubobject</span>&lt;UStaticMeshComponent&gt;(<span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;MeshComp&quot;</span>));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">ULerp_SComp::BeginPlay</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tSuper::<span class=\"built_in\">BeginPlay</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\tOriginActor = <span class=\"built_in\">GetOwner</span>();</span><br><span class=\"line\">\tStartLocation = <span class=\"built_in\">GetComponentLocation</span>();</span><br><span class=\"line\">\tMaterialInter = Mesh-&gt;<span class=\"built_in\">GetMaterial</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tInstanceDynamic = UMaterialInstanceDynamic::<span class=\"built_in\">Create</span>(MaterialInter, <span class=\"keyword\">this</span>);</span><br><span class=\"line\">\tMesh-&gt;<span class=\"built_in\">SetMaterial</span>(<span class=\"number\">0</span>, InstanceDynamic);</span><br><span class=\"line\">\tInstanceDynamic-&gt;<span class=\"built_in\">SetVectorParameterValue</span>(<span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;Color&quot;</span>), FLinearColor::Blue);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">ULerp_SComp::TickComponent</span><span class=\"params\">(<span class=\"type\">float</span> DeltaTime, ELevelTick TickType, FActorComponentTickFunction* ThisTickFunction)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tSuper::<span class=\"built_in\">TickComponent</span>(DeltaTime, TickType, ThisTickFunction);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!OriginActor)&#123;<span class=\"keyword\">return</span>;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (WaitTime &gt; <span class=\"number\">0</span>)&#123;WaitTime -= DeltaTime; <span class=\"keyword\">return</span>;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (TimeElapsed &lt; LerpDuration)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tOriginActor-&gt;<span class=\"built_in\">SetActorLocation</span>(</span><br><span class=\"line\">\t\t\tFMath::<span class=\"built_in\">Lerp</span>(</span><br><span class=\"line\">\t\t\t\tStartLocation,</span><br><span class=\"line\">\t\t\t\tTargetLocation,</span><br><span class=\"line\">\t\t\t\tTimeElapsed / LerpDuration));</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tInstanceDynamic-&gt;<span class=\"built_in\">SetVectorParameterValue</span>(</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;Color&quot;</span>),</span><br><span class=\"line\">\t\t\tFMath::<span class=\"built_in\">Lerp</span>(</span><br><span class=\"line\">\t\t\t\tFLinearColor::Blue,</span><br><span class=\"line\">\t\t\t\tFLinearColor::Red,</span><br><span class=\"line\">\t\t\t\tTimeElapsed / LerpDuration));</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tTimeElapsed += DeltaTime;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"18-黑洞\"><a href=\"#18-黑洞\" class=\"headerlink\" title=\"18. 黑洞\"></a>18. 黑洞</h3><p>情景：</p>\n<ul>\n<li>一个球，可以在一定范围内吸引<code>开启模拟物理的Actor</code></li>\n<li>吸到黑洞的<code>Actor</code>会被销毁</li>\n</ul>\n<p>示例：</p>\n<ul>\n<li>简单的材质</li>\n<li>黑洞要黑，不能反光</li>\n<li>创建材质<code>Mat_BlackHole</code></li>\n<li>创建节点<code>VectorParameter</code>，设置<code>RGBA(0, 0, 0, 1)</code>，连接<code>基础颜色</code></li>\n<li>创建常量节点，设置为<code>0</code>， 连接其余的选项</li>\n</ul>\n<p>定义：</p>\n<p><code>BlackHole_Actor.h</code></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">pragma</span> once</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;CoreMinimal.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;GameFramework/Actor.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;BlackHole_Actor.generated.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">UStaticMeshComponent</span>;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">USphereComponent</span>;</span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">FTimerHandle</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">UCLASS</span>()</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">FPSGAME_API</span> ABlackHole_Actor : <span class=\"keyword\">public</span> AActor</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">GENERATED_BODY</span>()</span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">ABlackHole_Actor</span>();</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">virtual</span> <span class=\"type\">void</span> <span class=\"title\">BeginPlay</span><span class=\"params\">()</span> <span class=\"keyword\">override</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* My Code */</span></span><br><span class=\"line\">\t<span class=\"comment\">// Property</span></span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(EditAnywhere, BlueprintReadWrite, Category=<span class=\"string\">&quot;BlackHole&quot;</span>, meta=(AllowPrivateAccess=<span class=\"literal\">true</span>))</span><br><span class=\"line\">\t<span class=\"type\">float</span> BlackHoleActionRate;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(EditAnywhere, BlueprintReadWrite, Category=<span class=\"string\">&quot;BlackHole&quot;</span>, meta=(AllowPrivateAccess=<span class=\"literal\">true</span>))</span><br><span class=\"line\">\t<span class=\"type\">float</span> BlackHoleStrength;</span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\tFTimerHandle BlackHoleActionHandle;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">// Component</span></span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(VisibleAnywhere, Category=<span class=\"string\">&quot;A_Hole&quot;</span>)</span><br><span class=\"line\">\tUStaticMeshComponent *BlackHoleStaticMeshComp;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(VisibleAnywhere, Category=<span class=\"string\">&quot;A_Hole&quot;</span>)</span><br><span class=\"line\">\tUSphereComponent *InnerSphereComp;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(VisibleAnywhere, Category=<span class=\"string\">&quot;A_Hole&quot;</span>)</span><br><span class=\"line\">\tUSphereComponent *OuterSphereComp;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">UFUNCTION</span>()</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">OverlapInnerSphere</span><span class=\"params\">(UPrimitiveComponent* OverlappedComponent, AActor* OtherActor,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">\t\tUPrimitiveComponent* OtherComp, int32 OtherBodyIndex, <span class=\"type\">bool</span> bFromSweep, <span class=\"type\">const</span> FHitResult &amp;SweepResult)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">UFUNCTION</span>()</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">OnBlackHoleAction</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n\n\n<p>实现</p>\n<p><code>BlackHole_Actor.cpp</code></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;BlackHole_Actor.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;Components/SphereComponent.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">ABlackHole_Actor::<span class=\"built_in\">ABlackHole_Actor</span>()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tPrimaryActorTick.bCanEverTick = <span class=\"literal\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\tBlackHoleActionRate = <span class=\"number\">0.05f</span>;</span><br><span class=\"line\">\tBlackHoleStrength = <span class=\"number\">10000.f</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\tBlackHoleStaticMeshComp = <span class=\"built_in\">CreateDefaultSubobject</span>&lt;UStaticMeshComponent&gt;(<span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;BlackStaticMesh&quot;</span>));</span><br><span class=\"line\">\tBlackHoleStaticMeshComp-&gt;<span class=\"built_in\">SetCollisionEnabled</span>(ECollisionEnabled::NoCollision);</span><br><span class=\"line\">\tBlackHoleStaticMeshComp-&gt;CastShadow = <span class=\"literal\">false</span>;</span><br><span class=\"line\">\tRootComponent = BlackHoleStaticMeshComp;</span><br><span class=\"line\"></span><br><span class=\"line\">\tInnerSphereComp = <span class=\"built_in\">CreateDefaultSubobject</span>&lt;USphereComponent&gt;(<span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;InnerSphereComp&quot;</span>));</span><br><span class=\"line\">\tInnerSphereComp-&gt;<span class=\"built_in\">SetSphereRadius</span>(<span class=\"number\">100.f</span>);</span><br><span class=\"line\">\tInnerSphereComp-&gt;<span class=\"built_in\">SetupAttachment</span>(BlackHoleStaticMeshComp);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tOuterSphereComp = <span class=\"built_in\">CreateDefaultSubobject</span>&lt;USphereComponent&gt;(<span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;OuterSphereComp&quot;</span>));</span><br><span class=\"line\">\tOuterSphereComp-&gt;<span class=\"built_in\">SetSphereRadius</span>(<span class=\"number\">3000.f</span>);</span><br><span class=\"line\">\tOuterSphereComp-&gt;<span class=\"built_in\">SetCollisionEnabled</span>(ECollisionEnabled::QueryOnly);</span><br><span class=\"line\">\tOuterSphereComp-&gt;<span class=\"built_in\">SetCollisionResponseToAllChannels</span>(ECR_Overlap);</span><br><span class=\"line\">\tOuterSphereComp-&gt;<span class=\"built_in\">SetupAttachment</span>(BlackHoleStaticMeshComp);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">ABlackHole_Actor::BeginPlay</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tSuper::<span class=\"built_in\">BeginPlay</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">check</span>(InnerSphereComp);</span><br><span class=\"line\">\t<span class=\"built_in\">check</span>(OuterSphereComp);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (InnerSphereComp)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tInnerSphereComp-&gt;OnComponentBeginOverlap.<span class=\"built_in\">AddDynamic</span>(<span class=\"keyword\">this</span>, &amp;ABlackHole_Actor::OverlapInnerSphere);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (<span class=\"built_in\">GetWorld</span>())</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">GetWorldTimerManager</span>().<span class=\"built_in\">SetTimer</span>(</span><br><span class=\"line\">\t\t\tBlackHoleActionHandle,</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">this</span>,</span><br><span class=\"line\">\t\t\t&amp;ABlackHole_Actor::OnBlackHoleAction,</span><br><span class=\"line\">\t\t\tBlackHoleActionRate,</span><br><span class=\"line\">\t\t\t<span class=\"literal\">true</span></span><br><span class=\"line\">\t\t\t);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">ABlackHole_Actor::OverlapInnerSphere</span><span class=\"params\">(UPrimitiveComponent* OverlappedComponent, AActor* OtherActor,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">\tUPrimitiveComponent* OtherComp, int32 OtherBodyIndex, <span class=\"type\">bool</span> bFromSweep, <span class=\"type\">const</span> FHitResult&amp; SweepResult)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!OtherActor)&#123;<span class=\"keyword\">return</span>;&#125;</span><br><span class=\"line\">\tOtherActor-&gt;<span class=\"built_in\">Destroy</span>();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">ABlackHole_Actor::OnBlackHoleAction</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tTArray&lt;UPrimitiveComponent*&gt; OverlappingComp;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!OuterSphereComp)&#123;<span class=\"keyword\">return</span>;&#125;</span><br><span class=\"line\">\tOuterSphereComp-&gt;<span class=\"built_in\">GetOverlappingComponents</span>(OverlappingComp);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; OverlappingComp.<span class=\"built_in\">Num</span>(); ++i)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (OverlappingComp[i] &amp;&amp; OverlappingComp[i]-&gt;<span class=\"built_in\">IsSimulatingPhysics</span>())</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"type\">const</span> <span class=\"type\">float</span> SphereRadius = OuterSphereComp-&gt;<span class=\"built_in\">GetScaledSphereRadius</span>();</span><br><span class=\"line\">\t\t\tOverlappingComp[i]-&gt;<span class=\"built_in\">AddRadialForce</span>(</span><br><span class=\"line\">\t\t\t\t<span class=\"built_in\">GetActorLocation</span>(),</span><br><span class=\"line\">\t\t\t\tSphereRadius,</span><br><span class=\"line\">\t\t\t\t-BlackHoleStrength,</span><br><span class=\"line\">\t\t\t\tRIF_Constant,</span><br><span class=\"line\">\t\t\t\t<span class=\"literal\">true</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h3 id=\"19-玩家死亡后进入观察\"><a href=\"#19-玩家死亡后进入观察\" class=\"headerlink\" title=\"19. 玩家死亡后进入观察\"></a>19. 玩家死亡后进入观察</h3><p>情景：</p>\n<ul>\n<li>但玩家死亡后</li>\n<li>播放死亡动画</li>\n<li>禁用玩家输入</li>\n<li>控制器切换控制到<code>Spectator</code></li>\n<li>玩家不与其他玩家产生碰撞</li>\n<li>玩家外的胶囊体组件无碰撞</li>\n<li>死亡动画播放带有布娃娃效果</li>\n<li>一定时间后销毁</li>\n</ul>\n<p>示例：</p>\n<ul>\n<li><p>前提：</p>\n<ul>\n<li>将死亡动画创建为<code>蒙太奇动画</code></li>\n<li>设置蒙太奇的<code>启用自动混出</code>为<code>false</code></li>\n</ul>\n</li>\n<li><p>代码：</p>\n<ul>\n<li><p>定义</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">UAnimMontage</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">UPROPERTY</span>(EditAnywhere, BlueprintReadWrite, Category=<span class=\"string\">&quot;Montage&quot;</span>, meta=(AllowPrivateAccess=<span class=\"literal\">true</span>))</span><br><span class=\"line\">UAnimMontage *AnimMontage_Death;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">UFUNCTION</span>()</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">OnDead</span><span class=\"params\">()</span></span>;</span><br></pre></td></tr></table></figure>\n\n\n</li>\n<li><p>实现</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">ASTUCharacterBase::OnDead</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!AnimMontage_Death)&#123;<span class=\"keyword\">return</span>;&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">PlayAnimMontage</span>(AnimMontage_Death);</span><br><span class=\"line\">\t<span class=\"built_in\">GetCharacterMovement</span>()-&gt;<span class=\"built_in\">DisableMovement</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (<span class=\"built_in\">GetController</span>())</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">GetController</span>()-&gt;<span class=\"built_in\">ChangeState</span>(NAME_Spectating);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">GetCapsuleComponent</span>()-&gt;<span class=\"built_in\">SetCollisionResponseToAllChannels</span>(ECR_Ignore);</span><br><span class=\"line\">\t<span class=\"built_in\">SetLifeSpan</span>(<span class=\"number\">5.0f</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">GetMesh</span>()-&gt;<span class=\"built_in\">SetCollisionEnabled</span>(ECollisionEnabled::QueryAndPhysics);</span><br><span class=\"line\">\t<span class=\"built_in\">GetMesh</span>()-&gt;<span class=\"built_in\">SetSimulatePhysics</span>(<span class=\"literal\">true</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"20-高处坠落伤害\"><a href=\"#20-高处坠落伤害\" class=\"headerlink\" title=\"20. 高处坠落伤害\"></a>20. 高处坠落伤害</h3><p>情景：</p>\n<ul>\n<li>高处下落的速度达到指定值</li>\n<li>玩家受到相应的伤害</li>\n<li>使用<code>ACharacter</code>自带的功能实现<ul>\n<li><code>virtual void Landed(const FHitResult&amp; Hit);</code></li>\n<li><code>FLandedSignature LandedDelegate;</code></li>\n</ul>\n</li>\n</ul>\n<p>示例：</p>\n<ul>\n<li><p>介绍：</p>\n<p><code>ACharacter.h</code></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * Called upon landing when falling, to perform actions based on the Hit result. Triggers the OnLanded event.</span></span><br><span class=\"line\"><span class=\"comment\">\t * Note that movement mode is still &quot;Falling&quot; during this event. Current Velocity value is the velocity at the time of landing.</span></span><br><span class=\"line\"><span class=\"comment\">\t * Consider OnMovementModeChanged() as well, as that can be used once the movement mode changes to the new mode (most likely Walking).</span></span><br><span class=\"line\"><span class=\"comment\">\t *</span></span><br><span class=\"line\"><span class=\"comment\">\t * @param Hit Result describing the landing that resulted in a valid landing spot.</span></span><br><span class=\"line\"><span class=\"comment\">\t * @see OnMovementModeChanged()</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">virtual</span> <span class=\"type\">void</span> <span class=\"title\">Landed</span><span class=\"params\">(<span class=\"type\">const</span> FHitResult&amp; Hit)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">* 落地时调用，根据命中结果执行动作。 触发 OnLanded 事件。</span></span><br><span class=\"line\"><span class=\"comment\">* 请注意，此活动期间移动模式仍为“下降”。 当前速度值是着陆时的速度。</span></span><br><span class=\"line\"><span class=\"comment\">* 还要考虑 OnMovementModeChanged()，因为一旦移动模式更改为新模式（很可能是步行），就可以使用它。</span></span><br><span class=\"line\"><span class=\"comment\">*</span></span><br><span class=\"line\"><span class=\"comment\">* @param Hit Result 描述了导致有效着陆点的着陆。</span></span><br><span class=\"line\"><span class=\"comment\">* @see OnMovementModeChanged()</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\">\tFLandedSignature LandedDelegate;\t</span><br></pre></td></tr></table></figure>\n\n\n</li>\n<li><p>定义：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">UPROPERTY</span>(EditAnywhere, BlueprintReadWrite, Category=<span class=\"string\">&quot;FallingDamage&quot;</span>, meta=(AllowPrivateAccess=<span class=\"literal\">true</span>))</span><br><span class=\"line\">FVector2D LandedDamageVelocity;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">UPROPERTY</span>(EditAnywhere, BlueprintReadWrite, Category=<span class=\"string\">&quot;FallingDamage&quot;</span>, meta=(AllowPrivateAccess=<span class=\"literal\">true</span>))</span><br><span class=\"line\">FVector2D LandedDamage;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">UFUNCTION</span>()</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">OnGroundLanded</span><span class=\"params\">(<span class=\"type\">const</span> FHitResult&amp; HitResult)</span></span>;</span><br></pre></td></tr></table></figure>\n\n\n</li>\n<li><p>实现：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">ASTUCharacterBase::BeginPlay</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tSuper::<span class=\"built_in\">BeginPlay</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\tLandedDelegate.<span class=\"built_in\">AddDynamic</span>(<span class=\"keyword\">this</span>, &amp;ASTUCharacterBase::OnGroundLanded);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">ASTUCharacterBase::OnGroundLanded</span><span class=\"params\">(<span class=\"type\">const</span> FHitResult&amp; HitResult)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">const</span> <span class=\"type\">float</span> FallVelocityZ = -<span class=\"built_in\">GetVelocity</span>().Z;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (FallVelocityZ &lt; LandedDamageVelocity.X)&#123;<span class=\"keyword\">return</span>;&#125;</span><br><span class=\"line\">\t<span class=\"type\">const</span> <span class=\"type\">float</span> FinalDamage = FMath::<span class=\"built_in\">GetMappedRangeValueClamped</span>(LandedDamageVelocity,</span><br><span class=\"line\">\t\tLandedDamage, FallVelocityZ);</span><br><span class=\"line\">\t<span class=\"built_in\">TakeDamage</span>(FinalDamage, FDamageEvent&#123;&#125;, <span class=\"literal\">nullptr</span>, <span class=\"literal\">nullptr</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># FMath::<span class=\"built_in\">GetMappedRangeValueClamped</span>() --&gt; UnrealMathUtility.h</span><br><span class=\"line\"><span class=\"comment\">// For the given Value clamped to the [Input:Range] inclusive, returns the corresponding percentage in [Output:Range] Inclusive</span></span><br><span class=\"line\"><span class=\"comment\">// 对于钳制到 [Input:Range] 的给定值，返回 [Output:Range] 包含的相应百分比</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"21-FindAnimNotifyByClass\"><a href=\"#21-FindAnimNotifyByClass\" class=\"headerlink\" title=\"21. FindAnimNotifyByClass\"></a>21. FindAnimNotifyByClass</h3><p>情景：</p>\n<ul>\n<li>按类型<code>UAnimSequenceBase</code>中查找<code>FAnimNotifyEvent</code></li>\n<li>再绑定对应的通知事件</li>\n</ul>\n<p>示例：</p>\n<ul>\n<li><p>前提：</p>\n<p>创建<code>AnimNotifyEventUntility.h</code></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">pragma</span> once</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">AnimNotifyEventUntility</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">template</span>&lt;<span class=\"keyword\">typename</span> T&gt;</span></span><br><span class=\"line\"><span class=\"function\">\t<span class=\"type\">static</span> T* <span class=\"title\">FindNotifyByClass</span><span class=\"params\">(UAnimSequenceBase* AnimSequenceBase)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (!AnimSequenceBase)&#123;<span class=\"keyword\">return</span> <span class=\"literal\">nullptr</span>;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"type\">const</span> <span class=\"keyword\">auto</span> NotifyEvents = AnimSequenceBase-&gt;Notifies;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">const</span> <span class=\"keyword\">auto</span>&amp; NotifyEvent : NotifyEvents)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (<span class=\"type\">const</span> <span class=\"keyword\">auto</span> AnimNotify = <span class=\"built_in\">Cast</span>&lt;T&gt;(NotifyEvent.Notify))</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> AnimNotify;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">nullptr</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n\n\n<p>创建<code>AnimNotifyBase.h</code></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">pragma</span> once</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;CoreMinimal.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;Animation/AnimNotifies/AnimNotify.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;STUAnimNotifyBase.generated.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">USkeletalMeshComponent</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">DECLARE_MULTICAST_DELEGATE_OneParam</span>(FOnNotifySignature, USkeletalMeshComponent*)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">UCLASS</span>()</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">B_01_TPS_API</span> UAnimNotifyBase : <span class=\"keyword\">public</span> UAnimNotify</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">GENERATED_BODY</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">virtual</span> <span class=\"type\">void</span> <span class=\"title\">Notify</span><span class=\"params\">(USkeletalMeshComponent* MeshComp, UAnimSequenceBase* Animation)</span> <span class=\"keyword\">override</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* My Code */</span></span><br><span class=\"line\">\t<span class=\"comment\">// Property</span></span><br><span class=\"line\">\tFOnNotifySignature OnNotify;\t</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"># Notify</span><br><span class=\"line\"><span class=\"comment\">// 是 AnimNotify 自带的函数，同时不建议 UE5 使用</span></span><br></pre></td></tr></table></figure>\n\n\n\n<p>实现<code>AnimNotifyBase.cpp</code></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;AnimNotifyBase.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">USTUAnimNotifyBase::Notify</span><span class=\"params\">(USkeletalMeshComponent* MeshComp, UAnimSequenceBase* Animation)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tSuper::<span class=\"built_in\">Notify</span>(MeshComp, Animation);</span><br><span class=\"line\"></span><br><span class=\"line\">\tOnNotify.<span class=\"built_in\">Broadcast</span>(MeshComp);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n</li>\n<li><p>定义：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">UPROPERTY</span>(EditAnywhere, BlueprintReadWrite, Category=<span class=\"string\">&quot;Weapon&quot;</span>, meta=(AllowPrivateAccess=<span class=\"literal\">true</span>))</span><br><span class=\"line\">UAnimMontage *EquipAnimMontage;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">UPROPERTY</span>(VisibleAnywhere, BlueprintReadWrite, Category=<span class=\"string\">&quot;Weapon&quot;</span>, meta=(AllowPrivateAccess=<span class=\"literal\">true</span>))</span><br><span class=\"line\"><span class=\"type\">bool</span> IsEquipAnimInProgress;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">UFUNCTION</span>()</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">InitAnimations</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">UFUNCTION</span>()</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">OnEquipFinished</span><span class=\"params\">(USkeletalMeshComponent* SkeletalMeshComponent)</span></span>;</span><br></pre></td></tr></table></figure>\n\n\n</li>\n<li><p>实现：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;AnimNotify/AnimNotifyEventUntility.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">USTUWeaponActorComponent::BeginPlay</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tSuper::<span class=\"built_in\">BeginPlay</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">InitAnimations</span>();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">USTUWeaponActorComponent::InitAnimations</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (<span class=\"type\">const</span> <span class=\"keyword\">auto</span> EquipFinishedNotify = </span><br><span class=\"line\">        AnimUtils::<span class=\"built_in\">FindNotifyByClass</span>&lt;USTUAnimNotifyEquipFinished&gt;(EquipAnimMontage))</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tEquipFinishedNotify-&gt;OnNotify.<span class=\"built_in\">AddUObject</span>(<span class=\"keyword\">this</span>, &amp;USTUWeaponActorComponent::OnEquipFinished);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">checkNoEntry</span>();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">USTUWeaponActorComponent::OnEquipFinished</span><span class=\"params\">(USkeletalMeshComponent* SkeletalMeshComponent)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">const</span> ASTUCharacterBase *Character = <span class=\"built_in\">Cast</span>&lt;ASTUCharacterBase&gt;(<span class=\"built_in\">GetOwner</span>());</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!Character || !(Character-&gt;<span class=\"built_in\">GetMesh</span>() == SkeletalMeshComponent))&#123;<span class=\"keyword\">return</span>;&#125;</span><br><span class=\"line\">\tIsEquipAnimInProgress = <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"># USTUAnimNotifyEquipFinished</span><br><span class=\"line\"><span class=\"comment\">// 是AnimNotifyBase的子类</span></span><br><span class=\"line\"><span class=\"comment\">// 里面不用写东西</span></span><br><span class=\"line\"><span class=\"comment\">// 主要是用来：修改备注名，修改颜色，绑定事件</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"22-类生成附加到插槽\"><a href=\"#22-类生成附加到插槽\" class=\"headerlink\" title=\"22. 类生成附加到插槽\"></a>22. 类生成附加到插槽</h3><p>情景：</p>\n<ul>\n<li><p>用指定的组件开始生成</p>\n</li>\n<li><p><code>BeginPlay()</code>时开始</p>\n</li>\n<li><p>指定要生成的<code>class</code></p>\n</li>\n<li><p>以有需要附加的插槽&#96;&#96;</p>\n</li>\n<li><p>将生成的对象附加到插槽上，并应用插槽的<code>transform</code></p>\n</li>\n<li><p><code>EndPlay()</code>结束后，生成的<code>Actor</code>也要销毁</p>\n</li>\n</ul>\n<p>示例：</p>\n<ul>\n<li><p>定义：<code>UWeaponActorComponent.h</code></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">UCLASS</span>( ClassGroup=(Custom), meta=(BlueprintSpawnableComponent) )</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">B_01_TPS_API</span> USTUWeaponActorComponent : <span class=\"keyword\">public</span> UActorComponent</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">GENERATED_BODY</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">USTUWeaponActorComponent</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">protected</span>:</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">virtual</span> <span class=\"type\">void</span> <span class=\"title\">BeginPlay</span><span class=\"params\">()</span> <span class=\"keyword\">override</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">virtual</span> <span class=\"type\">void</span> <span class=\"title\">EndPlay</span><span class=\"params\">(<span class=\"type\">const</span> EEndPlayReason::Type EndPlayReason)</span> <span class=\"keyword\">override</span></span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"comment\">/* My Code */</span></span><br><span class=\"line\">\t<span class=\"comment\">// Property</span></span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">    <span class=\"built_in\">UPROPERTY</span>(EditAnywhere, BlueprintReadWrite, Category=<span class=\"string\">&quot;Weapon&quot;</span>, meta=(AllowPrivateAccess=<span class=\"literal\">true</span>))</span><br><span class=\"line\">\tTSubclassOf&lt;ASTUWeaponBase&gt; WeaponClass;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">UPROPERTY</span>(EditAnywhere, BlueprintReadWrite, Category=<span class=\"string\">&quot;Weapon&quot;</span>, meta=(AllowPrivateAccess=<span class=\"literal\">true</span>))</span><br><span class=\"line\">\tFName WeaponEquipSocketName;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">UPROPERTY</span>(EditAnywhere, BlueprintReadWrite, Category=<span class=\"string\">&quot;Weapon&quot;</span>, meta=(AllowPrivateAccess=<span class=\"literal\">true</span>))</span><br><span class=\"line\">\tASTUWeaponBase *CurrentWeapon;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// Function</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">UFUNCTION</span>()</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">SpawnWeapons</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">UFUNCTION</span>()</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">AttachWeaponToSocket</span><span class=\"params\">(ASTUWeaponBase* Weapon, USceneComponent* SceneComponent, <span class=\"type\">const</span> FName&amp; SocketName)</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n</li>\n<li><p>实现：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">USTUWeaponActorComponent::<span class=\"built_in\">USTUWeaponActorComponent</span>()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tPrimaryComponentTick.bCanEverTick = <span class=\"literal\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\tWeaponEquipSocketName = <span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;WeaponSocket&quot;</span>);</span><br><span class=\"line\">    WeaponClass = <span class=\"literal\">nullptr</span></span><br><span class=\"line\">\tCurrentWeapon = <span class=\"literal\">nullptr</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">USTUWeaponActorComponent::BeginPlay</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tSuper::<span class=\"built_in\">BeginPlay</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">SpawnWeapons</span>();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">USTUWeaponActorComponent::EndPlay</span><span class=\"params\">(<span class=\"type\">const</span> EEndPlayReason::Type EndPlayReason)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tCurrentWeapon-&gt;<span class=\"built_in\">DetachFromActor</span>(FDetachmentTransformRules::KeepWorldTransform);</span><br><span class=\"line\">\tCurrentWeapon-&gt;<span class=\"built_in\">Destroy</span>();</span><br><span class=\"line\">    CurrentWeapon = <span class=\"literal\">nullptr</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\tSuper::<span class=\"built_in\">EndPlay</span>(EndPlayReason);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">USTUWeaponActorComponent::SpawnWeapons</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!<span class=\"built_in\">GetWorld</span>())&#123;<span class=\"keyword\">return</span>;&#125;</span><br><span class=\"line\">\tASTUCharacterBase *Character = <span class=\"built_in\">Cast</span>&lt;ASTUCharacterBase&gt;(<span class=\"built_in\">GetOwner</span>());</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!Character)&#123;<span class=\"keyword\">return</span>;&#125;</span><br><span class=\"line\">    <span class=\"type\">const</span> <span class=\"keyword\">auto</span> Weapon = <span class=\"built_in\">GetWorld</span>()-&gt;<span class=\"built_in\">SpawnActor</span>&lt;ASTUWeaponBase&gt;(WeaponClass);</span><br><span class=\"line\">    </span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!Weapon)&#123;<span class=\"keyword\">continue</span>;&#125;</span><br><span class=\"line\">    CurrentWeapon = Weapon;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 此处留一个伏笔，当前武器指定了 Onwer 是当前的玩家</span></span><br><span class=\"line\">\tCurrentWeapon-&gt;<span class=\"built_in\">SetOwner</span>(Character);</span><br><span class=\"line\">    </span><br><span class=\"line\">\t<span class=\"built_in\">AttachWeaponToSocket</span>(CurrentWeapon, Character-&gt;<span class=\"built_in\">GetMesh</span>(), WeaponEquipSocketName);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">USTUWeaponActorComponent::AttachWeaponToSocket</span><span class=\"params\">(ASTUWeaponBase* Weapon, USceneComponent* SceneComponent,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">                                                    <span class=\"type\">const</span> FName&amp; SocketName)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!Weapon || !SceneComponent)&#123;<span class=\"keyword\">return</span>;&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">const</span> FAttachmentTransformRules <span class=\"title\">AttachmentTransformRules</span><span class=\"params\">(EAttachmentRule::SnapToTarget, <span class=\"literal\">false</span>)</span></span>;</span><br><span class=\"line\">\tWeapon-&gt;<span class=\"built_in\">AttachToComponent</span>(SceneComponent, AttachmentTransformRules, SocketName);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"23-CameraShake\"><a href=\"#23-CameraShake\" class=\"headerlink\" title=\"23. CameraShake\"></a>23. CameraShake</h3><p>情景：</p>\n<ul>\n<li>在<code>UHealthActorComponent</code>中实现<code>CameraShake</code></li>\n</ul>\n<p>示例：</p>\n<ul>\n<li><p>定义：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">USTUHealthActorComponent</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(EditAnywhere, BlueprintReadWrite, Category=<span class=\"string\">&quot;HPComp|Camera&quot;</span>, meta=(AllowPrivateAccess=<span class=\"literal\">true</span>))</span><br><span class=\"line\">\tTSubclassOf&lt;UCameraShakeBase&gt; CameraShake;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">UFUNCTION</span>()</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">PlayCameraShake</span><span class=\"params\">()</span></span>;</span><br></pre></td></tr></table></figure>\n\n\n</li>\n<li><p>实现：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;STUHealthActorComponent.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">USTUHealthActorComponent::<span class=\"built_in\">USTUHealthActorComponent</span>()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tPrimaryComponentTick.bCanEverTick = <span class=\"literal\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\tCameraShake = <span class=\"literal\">nullptr</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">USTUHealthActorComponent::PlayCameraShake</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">const</span> <span class=\"keyword\">auto</span> Player = <span class=\"built_in\">Cast</span>&lt;APawn&gt;(<span class=\"built_in\">GetOwner</span>());</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!Player)&#123;<span class=\"keyword\">return</span>;&#125;</span><br><span class=\"line\">\t<span class=\"type\">const</span> <span class=\"keyword\">auto</span> Controller = Player-&gt;<span class=\"built_in\">GetController</span>&lt;APlayerController&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!Controller || !Controller-&gt;PlayerCameraManager)&#123;<span class=\"keyword\">return</span>;&#125;</span><br><span class=\"line\">\tController-&gt;PlayerCameraManager-&gt;<span class=\"built_in\">StartCameraShake</span>(CameraShake);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"24-HealthComponent\"><a href=\"#24-HealthComponent\" class=\"headerlink\" title=\"24. HealthComponent\"></a>24. HealthComponent</h3><p>情景：</p>\n<ul>\n<li>设计一个角色的生命组件</li>\n<li>有生命值</li>\n<li>有伤害处理</li>\n<li>呼吸回血效果</li>\n<li>有处理玩家死亡效果</li>\n</ul>\n<p>前提：</p>\n<ul>\n<li>定义玩家类：<code>ACharacterBase</code></li>\n<li>定义生命组件类：<code>UHealthComponent</code></li>\n</ul>\n<p>结构分析：</p>\n<ul>\n<li>玩家类中的<code>OnDead</code>效果对应于生命组件类中的<code>OnDead</code></li>\n<li>生命组件类：<ul>\n<li>可以通过蓝图获得<code>CurrentHP</code>，<code>MaxHP</code>，<code>IsDead</code></li>\n<li>通过<code>TimerHandle</code>实现呼吸回血效果</li>\n</ul>\n</li>\n</ul>\n<p>示例：</p>\n<ul>\n<li><p>生命组件类</p>\n</li>\n<li><p>定义：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">DECLARE_MULTICAST_DELEGATE</span>(FOnDead);</span><br><span class=\"line\"><span class=\"built_in\">DECLARE_MULTICAST_DELEGATE_OneParam</span>(FOnHealthChanged, <span class=\"type\">float</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">FTimerHandle</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">UCLASS</span>( ClassGroup=(Custom), meta=(BlueprintSpawnableComponent) )</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">B_01_TPS_API</span> USTUHealthActorComponent : <span class=\"keyword\">public</span> UActorComponent</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">GENERATED_BODY</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">USTUHealthActorComponent</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">protected</span>:</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">virtual</span> <span class=\"type\">void</span> <span class=\"title\">BeginPlay</span><span class=\"params\">()</span> <span class=\"keyword\">override</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* My Code */</span></span><br><span class=\"line\">\t<span class=\"comment\">// Property</span></span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(EditAnywhere, BlueprintReadWrite, Category=<span class=\"string\">&quot;HPComp&quot;</span>, meta=(AllowPrivateAccess=<span class=\"literal\">true</span>))</span><br><span class=\"line\">\t<span class=\"type\">float</span> Health;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(EditAnywhere, BlueprintReadWrite, Category=<span class=\"string\">&quot;HPComp&quot;</span>, meta=(AllowPrivateAccess=<span class=\"literal\">true</span>))</span><br><span class=\"line\">\t<span class=\"type\">float</span> MaxHealth;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(EditAnywhere, BlueprintReadWrite, Category=<span class=\"string\">&quot;HPComp|Heal&quot;</span>, meta=(AllowPrivateAccess=<span class=\"literal\">true</span>))</span><br><span class=\"line\">\t<span class=\"type\">bool</span> IsAutoHeal;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(EditAnywhere, BlueprintReadWrite, Category=<span class=\"string\">&quot;HPComp|Heal&quot;</span>,</span><br><span class=\"line\">\t\tmeta=(AllowPrivateAccess=<span class=\"literal\">true</span>, EditCondition=<span class=\"string\">&quot;IsAutoHeal&quot;</span>))</span><br><span class=\"line\">\t<span class=\"type\">float</span> HealUpdateTime;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(EditAnywhere, BlueprintReadWrite, Category=<span class=\"string\">&quot;HPComp|Heal&quot;</span>,</span><br><span class=\"line\">\tmeta=(AllowPrivateAccess=<span class=\"literal\">true</span>, EditCondition=<span class=\"string\">&quot;IsAutoHeal&quot;</span>))</span><br><span class=\"line\">\t<span class=\"type\">float</span> HealDelayTime;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(EditAnywhere, BlueprintReadWrite, Category=<span class=\"string\">&quot;HPComp|Heal&quot;</span>,</span><br><span class=\"line\">\tmeta=(AllowPrivateAccess=<span class=\"literal\">true</span>, EditCondition=<span class=\"string\">&quot;IsAutoHeal&quot;</span>))</span><br><span class=\"line\">\t<span class=\"type\">float</span> HealModifierValue;</span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\tFTimerHandle HealTimerHandle;</span><br><span class=\"line\">\tFOnDead OnDead;</span><br><span class=\"line\">\tFOnHealthChanged OnHealthChanged;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">// Function\t</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">UFUNCTION</span>(BlueprintCallable)</span><br><span class=\"line\">\t<span class=\"function\">FORCEINLINE <span class=\"type\">float</span> <span class=\"title\">GetHP</span><span class=\"params\">()</span> <span class=\"type\">const</span> </span>&#123;<span class=\"keyword\">return</span> Health;&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"built_in\">UFUNCTION</span>()</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">OnTakeAnyDamage</span><span class=\"params\">(AActor* DamagedActor, <span class=\"type\">float</span> Damage, <span class=\"type\">const</span> <span class=\"keyword\">class</span> UDamageType* DamageType,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">\t\t<span class=\"keyword\">class</span> AController* InstigatedBy, AActor* DamageCauser)</span></span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"built_in\">UFUNCTION</span>(BlueprintCallable)</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">IsDead</span><span class=\"params\">()</span> <span class=\"type\">const</span> </span>&#123;<span class=\"keyword\">return</span> FMath::<span class=\"built_in\">IsNearlyZero</span>(Health);&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">UFUNCTION</span>()</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">HealUpdate</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">\t<span class=\"built_in\">UFUNCTION</span>()</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">SetHealth</span><span class=\"params\">(<span class=\"type\">float</span> NewHealth)</span></span>;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n\n</li>\n<li><p>实现：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;STUHealthActorComponent.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">USTUHealthActorComponent::<span class=\"built_in\">USTUHealthActorComponent</span>()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tPrimaryComponentTick.bCanEverTick = <span class=\"literal\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\tHealth = <span class=\"number\">0.f</span>;</span><br><span class=\"line\">\tMaxHealth = <span class=\"number\">100.f</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\tIsAutoHeal = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\tHealUpdateTime = <span class=\"number\">1.f</span>;</span><br><span class=\"line\">\tHealDelayTime = <span class=\"number\">4.f</span>;</span><br><span class=\"line\">\tHealModifierValue = <span class=\"number\">10.f</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">USTUHealthActorComponent::BeginPlay</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tSuper::<span class=\"built_in\">BeginPlay</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">SetHealth</span>(MaxHealth);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (<span class=\"built_in\">GetOwner</span>())</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">GetOwner</span>()-&gt;OnTakeAnyDamage.<span class=\"built_in\">AddDynamic</span>(<span class=\"keyword\">this</span>, &amp;USTUHealthActorComponent::OnTakeAnyDamage);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* My Code */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">USTUHealthActorComponent::OnTakeAnyDamage</span><span class=\"params\">(AActor* DamagedActor, <span class=\"type\">float</span> Damage, <span class=\"type\">const</span> UDamageType* DamageType,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">\tAController* InstigatedBy, AActor* DamageCauser)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (Health &lt;= <span class=\"number\">0.f</span> || <span class=\"built_in\">IsDead</span>() || !<span class=\"built_in\">GetWorld</span>())&#123;<span class=\"keyword\">return</span>;&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">SetHealth</span>(Health -  Damage);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (<span class=\"built_in\">IsDead</span>())</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tOnDead.<span class=\"built_in\">Broadcast</span>();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (IsAutoHeal)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">GetWorld</span>()-&gt;<span class=\"built_in\">GetTimerManager</span>().<span class=\"built_in\">SetTimer</span>(HealTimerHandle, <span class=\"keyword\">this</span>, &amp;USTUHealthActorComponent::HealUpdate,</span><br><span class=\"line\">\t\t\tHealUpdateTime, IsAutoHeal, HealDelayTime);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">USTUHealthActorComponent::HealUpdate</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">SetHealth</span>(Health += HealModifierValue);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!FMath::<span class=\"built_in\">IsNearlyEqual</span>(Health, MaxHealth) || !<span class=\"built_in\">GetWorld</span>())&#123;<span class=\"keyword\">return</span>;&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">GetWorld</span>()-&gt;<span class=\"built_in\">GetTimerManager</span>().<span class=\"built_in\">ClearTimer</span>(HealTimerHandle);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">USTUHealthActorComponent::SetHealth</span><span class=\"params\">(<span class=\"type\">float</span> NewHealth)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tHealth = FMath::<span class=\"built_in\">Clamp</span>(NewHealth, <span class=\"number\">0.f</span>, MaxHealth);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n</li>\n<li><p>玩家类</p>\n</li>\n<li><p>定义：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">USTUHealthActorComponent</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">ASTUCharacterBase</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">protected</span>:</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">virtual</span> <span class=\"type\">void</span> <span class=\"title\">BeginPlay</span><span class=\"params\">()</span> <span class=\"keyword\">override</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* My Code */</span></span><br><span class=\"line\">\t<span class=\"comment\">// Component</span></span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(VisibleAnywhere, BlueprintReadWrite, Category=<span class=\"string\">&quot;Component&quot;</span>, meta=(AllowPrivateAccess=<span class=\"literal\">true</span>))</span><br><span class=\"line\">\tUSTUHealthActorComponent *HealthActorComponent;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// Function</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">UFUNCTION</span>()</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">OnDead</span><span class=\"params\">()</span></span>;</span><br></pre></td></tr></table></figure>\n\n\n</li>\n<li><p>实现：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;STUHealthActorComponent.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">ASTUCharacterBase::<span class=\"built_in\">ASTUCharacterBase</span>()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    PrimaryActorTick.bCanEverTick = <span class=\"literal\">false</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    HealthActorComponent = <span class=\"built_in\">CreateDefaultSubobject</span>&lt;USTUHealthActorComponent&gt;(<span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;HPComp&quot;</span>));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">ASTUCharacterBase::BeginPlay</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tSuper::<span class=\"built_in\">BeginPlay</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">check</span>(HealthActorComponent);</span><br><span class=\"line\">\tHealthActorComponent-&gt;OnDead.<span class=\"built_in\">AddUObject</span>(<span class=\"keyword\">this</span>, &amp;ASTUCharacterBase::OnDead);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">ASTUCharacterBase::OnDead</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// OnDead Event</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"25-GetActorComponent\"><a href=\"#25-GetActorComponent\" class=\"headerlink\" title=\"25. GetActorComponent\"></a>25. GetActorComponent</h3><p>情景：</p>\n<ul>\n<li>需要通过已有的<code>Actor</code>获得其已添加的<code>Component</code></li>\n<li>将这个方法提取成一个<code>模板工具类</code></li>\n</ul>\n<p>示例：</p>\n<ul>\n<li><p>定义：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">pragma</span> once</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">FH_Utility</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">template</span>&lt;<span class=\"keyword\">typename</span> T&gt;</span></span><br><span class=\"line\"><span class=\"function\">\tFORCEINLINE <span class=\"type\">static</span> T* <span class=\"title\">GetActorComponent</span><span class=\"params\">(<span class=\"type\">const</span> AActor* Actor)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (!Actor)&#123;<span class=\"keyword\">return</span> <span class=\"literal\">nullptr</span>;&#125;</span><br><span class=\"line\">\t\t<span class=\"type\">const</span> <span class=\"keyword\">auto</span> Component = Actor-&gt;<span class=\"built_in\">GetComponentByClass</span>(T::<span class=\"built_in\">StaticClass</span>());</span><br><span class=\"line\">\t\tT* ResultComponent = <span class=\"built_in\">Cast</span>&lt;T&gt;(Component);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (!ResultComponent)&#123;<span class=\"keyword\">return</span> <span class=\"literal\">nullptr</span>;&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> ResultComponent;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"26-设计结构体和委托\"><a href=\"#26-设计结构体和委托\" class=\"headerlink\" title=\"26. 设计结构体和委托\"></a>26. 设计结构体和委托</h3><p>情景：</p>\n<ul>\n<li>将一类<code>结构体</code>或<code>Delegate</code>写进单独的类中</li>\n<li>便于管理</li>\n</ul>\n<p>示例：</p>\n<ul>\n<li><p>定义：<code>FH_CoreType.h</code></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">pragma</span> once</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;FH_CoreType.generated.h&quot;</span> <span class=\"comment\">// 因为使用了Delegate 和 USTRUCT，这里要手动加入</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">ASTUWeaponBase</span>;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">UAnimMontage</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Delegate 的定义可以写在这里</span></span><br><span class=\"line\"><span class=\"built_in\">DECLARE_MULTICAST_DELEGATE</span>(FOnDead);</span><br><span class=\"line\"><span class=\"built_in\">DECLARE_MULTICAST_DELEGATE_OneParam</span>(FOnHealthChanged, <span class=\"type\">float</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 可以定义结构体，USTRCUT() 内加入 BlueprintType, 蓝图就可以或这个结构体</span></span><br><span class=\"line\"><span class=\"built_in\">USTRUCT</span>(BlueprintType)</span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">FAmmoData</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">GENERATED_USTRUCT_BODY</span>() <span class=\"comment\">// 原：GENERATED_BODY() 需改为 GENERATED_USTRUCT_BODY()</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(EditAnywhere, BlueprintReadWrite, Category=<span class=\"string\">&quot;Ammo&quot;</span>,  meta=(AllowPrivateAccess=<span class=\"literal\">true</span>))</span><br><span class=\"line\">\tint32 Bullets = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(EditAnywhere, BlueprintReadWrite, Category=<span class=\"string\">&quot;Ammo&quot;</span>,</span><br><span class=\"line\">\t\t\t  meta=(AllowPrivateAccess=<span class=\"literal\">true</span>, EditCondition=<span class=\"string\">&quot;!IsInfinity&quot;</span>))</span><br><span class=\"line\">\tint32 Clips = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(EditAnywhere, BlueprintReadWrite, Category=<span class=\"string\">&quot;Ammo&quot;</span>,  meta=(AllowPrivateAccess=<span class=\"literal\">true</span>))</span><br><span class=\"line\">\t<span class=\"type\">bool</span> IsInfinity = <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">USTRUCT</span>(BlueprintType)</span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">FWeaponData</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">GENERATED_USTRUCT_BODY</span>()</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(EditAnywhere, BlueprintReadWrite, Category=<span class=\"string\">&quot;ReloadWeapon&quot;</span>, meta=(AllowPrivateAccess=<span class=\"literal\">true</span>))</span><br><span class=\"line\">\tTSubclassOf&lt;ASTUWeaponBase&gt; WeaponClass = <span class=\"literal\">nullptr</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(EditAnywhere, BlueprintReadWrite, Category=<span class=\"string\">&quot;ReloadWeapon&quot;</span>, meta=(AllowPrivateAccess=<span class=\"literal\">true</span>))</span><br><span class=\"line\">\tUAnimMontage* ReloadAnimMontage = <span class=\"literal\">nullptr</span>;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"27-AIPerception获得最近Actor\"><a href=\"#27-AIPerception获得最近Actor\" class=\"headerlink\" title=\"27. AIPerception获得最近Actor\"></a>27. AIPerception获得最近Actor</h3><p>情景：</p>\n<ul>\n<li><code>AI</code>绑定了<code>AIPerceptionComponent</code></li>\n<li>设置<code>AISense</code>：例如–目光<code>UAISense_Sight</code></li>\n<li>利用<code>GetCurrentlyPerceivedActors</code>获得目光内的有效<code>Actor</code></li>\n<li>通过<code>Actor</code>获得其前面<code>HealthComponent</code>，判断<code>Actor</code>是否符合需求</li>\n<li>最后通过算法，求得并返回离<code>AI</code>最近的<code>Actor</code></li>\n</ul>\n<p>示例：</p>\n<ul>\n<li><p>定义：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">pragma</span> once</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;CoreMinimal.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;Perception/AIPerceptionComponent.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;STUAIPerceptionComponent.generated.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">UCLASS</span>()</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">B_01_TPS_API</span> USTUAIPerceptionComponent : <span class=\"keyword\">public</span> UAIPerceptionComponent</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">GENERATED_BODY</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* My Code */</span></span><br><span class=\"line\">\t<span class=\"comment\">// Function</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">UFUNCTION</span>()</span><br><span class=\"line\">\t<span class=\"function\">AActor* <span class=\"title\">GetClosetActor</span><span class=\"params\">()</span> <span class=\"type\">const</span></span>;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n\n</li>\n<li><p>实现：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;STUAIPerceptionComponent.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;AIController.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;STUHealthActorComponent.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;B_01_TPS/Dev/STUUtils.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;Perception/AISense_Sight.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">AActor* <span class=\"title\">USTUAIPerceptionComponent::GetClosetActor</span><span class=\"params\">()</span> <span class=\"type\">const</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tTArray&lt;AActor*&gt; PerceptionActors;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// AIPerceptionComponent自带的函数，获得所有已经被感知的Actor</span></span><br><span class=\"line\">\t<span class=\"built_in\">GetCurrentlyPerceivedActors</span>(UAISense_Sight::<span class=\"built_in\">StaticClass</span>(), PerceptionActors);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 判断组件的拥有AI是否有AIController</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (PerceptionActors.<span class=\"built_in\">Num</span>() &lt;= <span class=\"number\">0</span>)&#123;<span class=\"keyword\">return</span> <span class=\"literal\">nullptr</span>;&#125;</span><br><span class=\"line\">\t<span class=\"type\">const</span> <span class=\"keyword\">auto</span> Controller = <span class=\"built_in\">Cast</span>&lt;AAIController&gt;(<span class=\"built_in\">GetOwner</span>());</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 判断当前AI是否有效</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!Controller)&#123;<span class=\"keyword\">return</span> <span class=\"literal\">nullptr</span>;&#125;</span><br><span class=\"line\">\t<span class=\"type\">const</span> <span class=\"keyword\">auto</span> Pawn = Controller-&gt;<span class=\"built_in\">GetPawn</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 开始计算最近的Actor</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!Pawn)&#123;<span class=\"keyword\">return</span> <span class=\"literal\">nullptr</span>;&#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// MAX_FLT 是 UnrealEngine 自带的 UrealMathUtility 中的 宏</span></span><br><span class=\"line\">    <span class=\"comment\">// #define MAX_FLT 3.402823466e+38F</span></span><br><span class=\"line\">    <span class=\"comment\">// 表示可虚幻引擎可表达的 最大浮点数</span></span><br><span class=\"line\">\t<span class=\"type\">float</span> NealDistance = MAX_FLT;</span><br><span class=\"line\">\tAActor* NealPawn = <span class=\"literal\">nullptr</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">const</span> <span class=\"keyword\">auto</span>&amp; PerceptionActor : PerceptionActors)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 此处使用了前面创建的 HealthComponent 和 FH_Utility</span></span><br><span class=\"line\">        <span class=\"comment\">// 判断 感知到的Actor是否有生命组件，是否还活着</span></span><br><span class=\"line\">\t\t<span class=\"type\">const</span> <span class=\"keyword\">auto</span> HealthComp = STUUtils::<span class=\"built_in\">GetSTUPlayerComponent</span>&lt;USTUHealthActorComponent&gt;(PerceptionActor);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!HealthComp || HealthComp-&gt;<span class=\"built_in\">IsDead</span>())&#123;<span class=\"keyword\">return</span> <span class=\"literal\">nullptr</span>;&#125;</span><br><span class=\"line\">        <span class=\"type\">const</span> <span class=\"keyword\">auto</span> CurrentDistance = (PerceptionActor-&gt;<span class=\"built_in\">GetActorLocation</span>() - Pawn-&gt;<span class=\"built_in\">GetActorLocation</span>()).<span class=\"built_in\">Size</span>();</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">        <span class=\"comment\">// 找出最近距离的Actor</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (CurrentDistance &lt; NealDistance)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tNealDistance = CurrentDistance;</span><br><span class=\"line\">\t\t\tNealPawn = PerceptionActor;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> NealPawn;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"28-GameMode\"><a href=\"#28-GameMode\" class=\"headerlink\" title=\"28. GameMode\"></a>28. GameMode</h3><p>情景：</p>\n<ul>\n<li>通过<code>GameModeBase</code>进行初始化</li>\n</ul>\n<p>示例：</p>\n<ul>\n<li><p>实现：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ASTUGameModeBase::<span class=\"built_in\">ASTUGameModeBase</span>()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tDefaultPawnClass = ASTUCharacterBase::<span class=\"built_in\">StaticClass</span>();</span><br><span class=\"line\">\tPlayerControllerClass = ASTUPlayerController::<span class=\"built_in\">StaticClass</span>();</span><br><span class=\"line\">\tHUDClass = ASTUGameHUD::<span class=\"built_in\">StaticClass</span>();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"29-拾取物-PickUp\"><a href=\"#29-拾取物-PickUp\" class=\"headerlink\" title=\"29. 拾取物-PickUp\"></a>29. 拾取物-PickUp</h3><p>情景：</p>\n<ul>\n<li>创建<code>PickUpBase</code></li>\n<li>可被放置在场景中</li>\n<li>可以<code>Actor</code>重叠检查</li>\n<li>不与<code>Actor</code>产生<code>BlockHit</code></li>\n<li>拾取后不销毁，隐藏起来，一段时间重生，<code>TimerHandle</code></li>\n<li>物品默认旋转，拾取后关闭旋转，重生后开启旋转，<code>TimerHandle</code></li>\n<li>被拾取后，让拾取的<code>Actor</code>执行指定的<code>GivePickUpTo</code>，<code>Virtual Function</code></li>\n<li>具体执行的功能，通过子类去实现</li>\n</ul>\n<p>示例：</p>\n<ul>\n<li><p>定义：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">pragma</span> once</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;CoreMinimal.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;GameFramework/Actor.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;STUBasePickUp.generated.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">USphereComponent</span>;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">UStaticMeshComponent</span>;</span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">FTimerHandle</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">UCLASS</span>()</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">B_01_TPS_API</span> ASTUBasePickUp : <span class=\"keyword\">public</span> AActor</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">GENERATED_BODY</span>()</span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">ASTUBasePickUp</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">protected</span>:</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">virtual</span> <span class=\"type\">void</span> <span class=\"title\">BeginPlay</span><span class=\"params\">()</span> <span class=\"keyword\">override</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">virtual</span> <span class=\"type\">void</span> <span class=\"title\">NotifyActorBeginOverlap</span><span class=\"params\">(AActor* OtherActor)</span> <span class=\"keyword\">override</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* My Code */</span></span><br><span class=\"line\">\t<span class=\"comment\">// Property</span></span><br><span class=\"line\"><span class=\"keyword\">protected</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(EditAnywhere, BlueprintReadWrite, Category=<span class=\"string\">&quot;PickUp&quot;</span>, meta=(AllowPrivateAccess=<span class=\"literal\">true</span>))</span><br><span class=\"line\">\t<span class=\"type\">float</span> RespawnTime;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(EditAnywhere, BlueprintReadWrite, Category=<span class=\"string\">&quot;PickUp&quot;</span>, meta=(ClampMin=<span class=\"number\">0.0333</span>, ClampMax=<span class=\"number\">0.0083</span>))</span><br><span class=\"line\">\t<span class=\"type\">float</span> RotationYawRate;</span><br><span class=\"line\">    </span><br><span class=\"line\">    FTimerHandle RespawnHandle;</span><br><span class=\"line\"></span><br><span class=\"line\">\tFTimerHandle RotationYawHandle;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">// Component</span></span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(VisibleAnywhere, BlueprintReadWrite, Category=<span class=\"string\">&quot;PickUp&quot;</span>, meta=(AllowPrivateAccess=<span class=\"literal\">true</span>))</span><br><span class=\"line\">\tUSphereComponent* CollisionComponent;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(VisibleAnywhere, BlueprintReadWrite, Category=<span class=\"string\">&quot;PickUp&quot;</span>, meta=(AllowPrivateAccess=<span class=\"literal\">true</span>))</span><br><span class=\"line\">\tUStaticMeshComponent* StaticMeshComponent;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// Function</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">UFUNCTION</span>()</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">PickUpWasTaken</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">UFUNCTION</span>()</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Respawn</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">UFUNCTION</span>()</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">LoopRotationYawHandle</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">UFUNCTION</span>()</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">BeginRotationYaw</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">UFUNCTION</span>()</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">virtual</span> <span class=\"type\">bool</span> <span class=\"title\">GivePickUpTo</span><span class=\"params\">(APawn* PlayerPawn)</span> </span>&#123; <span class=\"keyword\">return</span> <span class=\"literal\">false</span>; &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"># <span class=\"built_in\">NotifyActorBeginOverlap</span>(AActor* OtherActor)</span><br><span class=\"line\">\t<span class=\"comment\">/** </span></span><br><span class=\"line\"><span class=\"comment\">\t *\tEvent when this actor overlaps another actor, for example a player walking into a trigger.</span></span><br><span class=\"line\"><span class=\"comment\">\t *\tFor events when objects have a blocking collision, for example a player hitting a wall, see &#x27;Hit&#x27; events.</span></span><br><span class=\"line\"><span class=\"comment\">\t *\t@note Components on both this and the other Actor must have bGenerateOverlapEvents set to true to generate overlap events.</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br></pre></td></tr></table></figure>\n\n\n</li>\n<li><p>实现：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;STUBasePickUp.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;Components/SphereComponent.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">ASTUBasePickUp::<span class=\"built_in\">ASTUBasePickUp</span>()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tPrimaryActorTick.bCanEverTick = <span class=\"literal\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    RespawnTime = <span class=\"number\">5.0f</span>;</span><br><span class=\"line\">\tRotationYawRate = <span class=\"number\">0.0333f</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    CollisionComponent = <span class=\"built_in\">CreateDefaultSubobject</span>&lt;USphereComponent&gt;(<span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;CollisionComp&quot;</span>));</span><br><span class=\"line\">\tRootComponent = CollisionComponent;</span><br><span class=\"line\">\tCollisionComponent-&gt;<span class=\"built_in\">SetCollisionEnabled</span>(ECollisionEnabled::QueryOnly);</span><br><span class=\"line\">\tCollisionComponent-&gt;<span class=\"built_in\">SetCollisionResponseToAllChannels</span>(ECR_Overlap);</span><br><span class=\"line\">\tCollisionComponent-&gt;<span class=\"built_in\">InitSphereRadius</span>(<span class=\"number\">50.f</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\tStaticMeshComponent = <span class=\"built_in\">CreateDefaultSubobject</span>&lt;UStaticMeshComponent&gt;(<span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;MeshComp&quot;</span>));</span><br><span class=\"line\">\tStaticMeshComponent-&gt;<span class=\"built_in\">SetupAttachment</span>(RootComponent);</span><br><span class=\"line\">\tStaticMeshComponent-&gt;<span class=\"built_in\">SetCollisionEnabled</span>(ECollisionEnabled::NoCollision);</span><br><span class=\"line\">\tStaticMeshComponent-&gt;<span class=\"built_in\">SetCollisionResponseToAllChannels</span>(ECR_Ignore);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">ASTUBasePickUp::BeginPlay</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tSuper::<span class=\"built_in\">BeginPlay</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">check</span>(CollisionComponent);</span><br><span class=\"line\">\t<span class=\"built_in\">check</span>(StaticMeshComponent);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">LoopRotationYawHandle</span>();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">ASTUBasePickUp::NotifyActorBeginOverlap</span><span class=\"params\">(AActor* OtherActor)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tSuper::<span class=\"built_in\">NotifyActorBeginOverlap</span>(OtherActor);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"type\">const</span> <span class=\"keyword\">auto</span> Player = <span class=\"built_in\">Cast</span>&lt;APawn&gt;(OtherActor);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!<span class=\"built_in\">GivePickUpTo</span>(Player))&#123;<span class=\"keyword\">return</span>;&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">PickUpWasTaken</span>();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* My Code */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">ASTUBasePickUp::PickUpWasTaken</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!<span class=\"built_in\">GetRootComponent</span>())&#123;<span class=\"keyword\">return</span>;&#125;</span><br><span class=\"line\">\tCollisionComponent-&gt;<span class=\"built_in\">SetCollisionResponseToAllChannels</span>(ECR_Ignore);</span><br><span class=\"line\">\t<span class=\"built_in\">GetRootComponent</span>()-&gt;<span class=\"built_in\">SetVisibility</span>(<span class=\"literal\">false</span>, <span class=\"literal\">true</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\">\t<span class=\"built_in\">GetWorldTimerManager</span>().<span class=\"built_in\">SetTimer</span>(RespawnHandle, <span class=\"keyword\">this</span>, &amp;ASTUBasePickUp::Respawn, RespawnTime, <span class=\"literal\">false</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">GetWorldTimerManager</span>().<span class=\"built_in\">ClearTimer</span>(RotationYawHandle);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">ASTUBasePickUp::Respawn</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!<span class=\"built_in\">GetRootComponent</span>())&#123;<span class=\"keyword\">return</span>;&#125;</span><br><span class=\"line\">\tCollisionComponent-&gt;<span class=\"built_in\">SetCollisionResponseToAllChannels</span>(ECR_Overlap);</span><br><span class=\"line\">\t<span class=\"built_in\">GetRootComponent</span>()-&gt;<span class=\"built_in\">SetVisibility</span>(<span class=\"literal\">true</span>, <span class=\"literal\">true</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\">\t<span class=\"built_in\">GetWorldTimerManager</span>().<span class=\"built_in\">ClearTimer</span>(RespawnHandle);</span><br><span class=\"line\">\t<span class=\"built_in\">LoopRotationYawHandle</span>();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">ASTUBasePickUp::LoopRotationYawHandle</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!StaticMeshComponent &amp;&amp; !RespawnHandle.<span class=\"built_in\">IsValid</span>())&#123;<span class=\"keyword\">return</span>;&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">GetWorldTimerManager</span>().<span class=\"built_in\">SetTimer</span>(</span><br><span class=\"line\">        RotationYawHandle, </span><br><span class=\"line\">        <span class=\"keyword\">this</span>, </span><br><span class=\"line\">        &amp;ASTUBasePickUp::BeginRotationYaw, </span><br><span class=\"line\">        RotationYawRate, </span><br><span class=\"line\">        <span class=\"literal\">true</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">ASTUBasePickUp::BeginRotationYaw</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tStaticMeshComponent-&gt;<span class=\"built_in\">AddRelativeRotation</span>(<span class=\"built_in\">FRotator</span>(<span class=\"number\">0</span>, <span class=\"number\">1.f</span>, <span class=\"number\">0.f</span>));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n</li>\n<li><p>注意：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 示例中是通过 AActor 自带的 <span class=\"built_in\">NotifyActorBeginOverlap</span>(AActor* OtherActor) 实现交互</span><br><span class=\"line\"># 也可以通过 USphereComponent-&gt;UShapeComponent-&gt;UPrimitiveComponent 内的 FComponentHitSignature OnComponentHit; 实现交互</span><br><span class=\"line\"></span><br><span class=\"line\">################## 委托名称 ###############</span><br><span class=\"line\"><span class=\"comment\">/** </span></span><br><span class=\"line\"><span class=\"comment\">\t *\tEvent called when a component hits (or is hit by) something solid. This could happen due to things like Character movement, using Set Location with &#x27;sweep&#x27; enabled, or physics simulation.</span></span><br><span class=\"line\"><span class=\"comment\">\t *\tFor events when objects overlap (e.g. walking into a trigger) see the &#x27;Overlap&#x27; event.</span></span><br><span class=\"line\"><span class=\"comment\">\t *</span></span><br><span class=\"line\"><span class=\"comment\">\t *\t@note For collisions during physics simulation to generate hit events, &#x27;Simulation Generates Hit Events&#x27; must be enabled for this component.</span></span><br><span class=\"line\"><span class=\"comment\">\t *\t@note When receiving a hit from another object&#x27;s movement, the directions of &#x27;Hit.Normal&#x27; and &#x27;Hit.ImpactNormal&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">\t *\twill be adjusted to indicate force from the other object against this object.</span></span><br><span class=\"line\"><span class=\"comment\">\t *\t@note NormalImpulse will be filled in for physics-simulating bodies, but will be zero for swept-component blocking collisions.</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(BlueprintAssignable, Category=<span class=\"string\">&quot;Collision&quot;</span>)</span><br><span class=\"line\">\tFComponentHitSignature OnComponentHit;</span><br><span class=\"line\"></span><br><span class=\"line\">################### 委托绑定的函数参数列表 ##################</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Delegate for notification of blocking collision against a specific component.  </span></span><br><span class=\"line\"><span class=\"comment\"> * NormalImpulse will be filled in for physics-simulating bodies, but will be zero for swept-component blocking collisions. </span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"built_in\">DECLARE_DYNAMIC_MULTICAST_SPARSE_DELEGATE_FiveParams</span>( FComponentHitSignature, UPrimitiveComponent, OnComponentHit, UPrimitiveComponent*, HitComponent, AActor*, OtherActor, UPrimitiveComponent*, OtherComp, FVector, NormalImpulse, <span class=\"type\">const</span> FHitResult&amp;, Hit );</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"30-AIController\"><a href=\"#30-AIController\" class=\"headerlink\" title=\"30. AIController\"></a>30. AIController</h3><p>情景：</p>\n<ul>\n<li>与前面<code>AIPerception获得最近Actor</code>想关联</li>\n<li>利用<code>AIPerceptionComponent</code>获取<code>最近的Actor</code></li>\n<li>通过<code>TimerHandle</code>控制检测频率</li>\n<li>通过获得黑板组件，获得设置的<code>最近的Actor</code></li>\n<li>让<code>AIControlller</code>控制<code>AI</code>面向<code>最近的Actor</code></li>\n<li><code>AIController</code>获得自己绑定的<code>AI</code>，执行有效的<code>BehaviorTree</code></li>\n<li>通过<code>FName</code>手动指定获得黑板组件中指定的<code>Key</code></li>\n</ul>\n<p>示例：</p>\n<ul>\n<li><p>定义：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">pragma</span> once</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;CoreMinimal.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;AIController.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;STUAIController.generated.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">USTUAIPerceptionComponent</span>;</span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">FTimerHandle</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">UCLASS</span>()</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">B_01_TPS_API</span> ASTUAIController : <span class=\"keyword\">public</span> AAIController</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">GENERATED_BODY</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">ASTUAIController</span>();</span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"keyword\">protected</span>:</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">virtual</span> <span class=\"type\">void</span> <span class=\"title\">OnPossess</span><span class=\"params\">(APawn* InPawn)</span> <span class=\"keyword\">override</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">virtual</span> <span class=\"type\">void</span> <span class=\"title\">BeginPlay</span><span class=\"params\">()</span> <span class=\"keyword\">override</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* My Code */</span></span><br><span class=\"line\">\t<span class=\"comment\">// Property</span></span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>()</span><br><span class=\"line\">\t<span class=\"type\">bool</span> IsRunBehavior;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(EditAnywhere, BlueprintReadWrite, Category=<span class=\"string\">&quot;AI&quot;</span>, meta=(AllowPrivateAccess=<span class=\"literal\">true</span>))</span><br><span class=\"line\">\t<span class=\"type\">float</span> CheckRate;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(EditAnywhere, BlueprintReadWrite, Category=<span class=\"string\">&quot;AI&quot;</span>, meta=(AllowPrivateAccess=<span class=\"literal\">true</span>))</span><br><span class=\"line\">\tFName FocusOnKeyName;</span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\tFTimerHandle CheckClosetEnemyTimerHandle;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">// Component</span></span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(VisibleAnywhere, BlueprintReadWrite, Category=<span class=\"string\">&quot;AI&quot;</span>, meta=(AllowPrivateAccess=<span class=\"literal\">true</span>))</span><br><span class=\"line\">\tUSTUAIPerceptionComponent* AIPerceptionComponent;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// Function</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">UFUNCTION</span>()</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">OnCheckClosetEnemy</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">UFUNCTION</span>()</span><br><span class=\"line\">\t<span class=\"function\">AActor* <span class=\"title\">GetFocusOnActor</span><span class=\"params\">()</span> <span class=\"type\">const</span></span>;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n\n</li>\n<li><p>实现：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;STUAIController.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;STUAI.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;BehaviorTree/BlackboardComponent.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;B_01_TPS/Component/STUAIPerceptionComponent.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">ASTUAIController::<span class=\"built_in\">ASTUAIController</span>()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tIsRunBehavior = <span class=\"literal\">false</span>;</span><br><span class=\"line\">\tCheckRate = <span class=\"number\">0.1f</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 此处指定要访问 黑板组件 的 keyName</span></span><br><span class=\"line\">\tFocusOnKeyName = <span class=\"string\">&quot;EnemyActor&quot;</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\">    <span class=\"comment\">// 此处指定初始化 AIPerceptionComponent</span></span><br><span class=\"line\">\tAIPerceptionComponent = <span class=\"built_in\">CreateDefaultSubobject</span>&lt;USTUAIPerceptionComponent&gt;(<span class=\"built_in\">TEXT</span>(<span class=\"string\">&quot;AIPerceptionComp&quot;</span>));</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (AIPerceptionComponent)&#123;<span class=\"built_in\">SetPerceptionComponent</span>(*AIPerceptionComponent);&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">ASTUAIController::OnPossess</span><span class=\"params\">(APawn* InPawn)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tSuper::<span class=\"built_in\">OnPossess</span>(InPawn);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"type\">const</span> <span class=\"keyword\">auto</span> STUCharacter = <span class=\"built_in\">Cast</span>&lt;ASTUAI&gt;(InPawn);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 此处执行 AI绑定的 BehaviorTree</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!STUCharacter || !STUCharacter-&gt;<span class=\"built_in\">GetBehaviorTreeAsset</span>())&#123;<span class=\"keyword\">return</span>;&#125;</span><br><span class=\"line\">\tIsRunBehavior = <span class=\"built_in\">RunBehaviorTree</span>(STUCharacter-&gt;<span class=\"built_in\">GetBehaviorTreeAsset</span>());</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">ASTUAIController::BeginPlay</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tSuper::<span class=\"built_in\">BeginPlay</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 开始按频率 检测最近的Actor</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (<span class=\"built_in\">GetWorld</span>() &amp;&amp; IsRunBehavior)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">GetWorldTimerManager</span>().<span class=\"built_in\">SetTimer</span>(</span><br><span class=\"line\">\t\t\tCheckClosetEnemyTimerHandle,</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">this</span>,</span><br><span class=\"line\">\t\t\t&amp;ASTUAIController::OnCheckClosetEnemy,</span><br><span class=\"line\">\t\t\tCheckRate,</span><br><span class=\"line\">\t\t\t<span class=\"literal\">true</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设置 AI面向 最近的 Actor</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">ASTUAIController::OnCheckClosetEnemy</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">const</span> <span class=\"keyword\">auto</span> AimActor = <span class=\"built_in\">GetFocusOnActor</span>();</span><br><span class=\"line\">\t<span class=\"built_in\">SetFocus</span>(AimActor);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 在黑板组件的指定key中 拿到以设置的 最近的Actor</span></span><br><span class=\"line\"><span class=\"function\">AActor* <span class=\"title\">ASTUAIController::GetFocusOnActor</span><span class=\"params\">()</span> <span class=\"type\">const</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!<span class=\"built_in\">GetBlackboardComponent</span>())&#123;<span class=\"keyword\">return</span> <span class=\"literal\">nullptr</span>;&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"built_in\">Cast</span>&lt;AActor&gt;(<span class=\"built_in\">GetBlackboardComponent</span>()-&gt;<span class=\"built_in\">GetValueAsObject</span>(FocusOnKeyName));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"31-AI初始化和过渡旋转\"><a href=\"#31-AI初始化和过渡旋转\" class=\"headerlink\" title=\"31. AI初始化和过渡旋转\"></a>31. AI初始化和过渡旋转</h3><p>情景：</p>\n<ul>\n<li>初始化一个基本的<code>AI</code></li>\n<li>通过前面的<code>AIController</code>已经可以面向最近的<code>Actor</code>，但旋转没有过渡，需要实现过渡</li>\n<li>关联相应的<code>BehaviorTree</code></li>\n<li>有<code>Dead</code>相关函数，方便通过<code>AIcontroller</code>停止<code>AI</code>的行为</li>\n</ul>\n<p>示例：</p>\n<ul>\n<li><p>定义：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">pragma</span> once</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;CoreMinimal.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;B_01_TPS/Player/STUCharacterBase.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;STUAI.generated.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">UBehaviorTree</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">UCLASS</span>()</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">B_01_TPS_API</span> ASTUAI : <span class=\"keyword\">public</span> ASTUCharacterBase</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">GENERATED_BODY</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">protected</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">ASTUAI</span>(<span class=\"type\">const</span> FObjectInitializer&amp; ObjectInit);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* My Code */</span></span><br><span class=\"line\">\t<span class=\"comment\">// Property</span></span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(EditAnywhere, BlueprintReadWrite, Category=<span class=\"string\">&quot;AI&quot;</span>, meta=(AllowPrivateAccess=<span class=\"literal\">true</span>))</span><br><span class=\"line\">\tUBehaviorTree* BehaviorTreeAsset;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">UFUNCTION</span>()</span><br><span class=\"line\">\t<span class=\"function\">FORCEINLINE UBehaviorTree* <span class=\"title\">GetBehaviorTreeAsset</span><span class=\"params\">()</span> <span class=\"type\">const</span> </span>&#123;<span class=\"keyword\">return</span> BehaviorTreeAsset;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">virtual</span> <span class=\"type\">void</span> <span class=\"title\">OnDead</span><span class=\"params\">()</span> <span class=\"keyword\">override</span></span>;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n\n</li>\n<li><p>实现：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;STUAI.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;BrainComponent.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;STUAIController.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;B_01_TPS/Component/STUAIWeaponActorComponent.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;B_01_TPS/Component/STUCharacterMovementComponent.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">ASTUAI::<span class=\"built_in\">ASTUAI</span>(<span class=\"type\">const</span> FObjectInitializer&amp; ObjectInit) :</span><br><span class=\"line\"><span class=\"built_in\">Super</span>(ObjectInit.<span class=\"built_in\">SetDefaultSubobjectClass</span>&lt;USTUAIWeaponActorComponent&gt;(<span class=\"string\">&quot;WeaponActorComponent&quot;</span>))</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 初始化 AI 和 AIController</span></span><br><span class=\"line\">\tAutoPossessAI = EAutoPossessAI::PlacedInWorldOrSpawned;</span><br><span class=\"line\">\tAIControllerClass = ASTUAIController::<span class=\"built_in\">StaticClass</span>();</span><br><span class=\"line\">\t</span><br><span class=\"line\">    <span class=\"comment\">// 利用 CharacterMovementComponent 设置 AI 旋转面向 最近Actor 的过渡效果</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (<span class=\"built_in\">GetCharacterMovement</span>())</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tbUseControllerRotationYaw = <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t\t<span class=\"built_in\">GetCharacterMovement</span>()-&gt;bUseControllerDesiredRotation = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t<span class=\"built_in\">GetCharacterMovement</span>()-&gt;RotationRate = <span class=\"built_in\">FRotator</span>(<span class=\"number\">0.f</span>, <span class=\"number\">200.f</span>, <span class=\"number\">0.f</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">ASTUAI::OnDead</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tSuper::<span class=\"built_in\">OnDead</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 通知 AIController 停止 AI行为</span></span><br><span class=\"line\">\t<span class=\"type\">const</span> <span class=\"keyword\">auto</span> STUController = <span class=\"built_in\">Cast</span>&lt;AAIController&gt;(Controller);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (STUController &amp;&amp; STUController-&gt;BrainComponent)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tSTUController-&gt;BrainComponent-&gt;<span class=\"built_in\">Cleanup</span>();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"32-BeHaviorTree-Task\"><a href=\"#32-BeHaviorTree-Task\" class=\"headerlink\" title=\"32. BeHaviorTree Task\"></a>32. BeHaviorTree Task</h3><p>情景：</p>\n<ul>\n<li><code>AI Task</code>的关键信息是<code>AIController</code>和<code>BlackBoardComp</code></li>\n<li>通过<code>AIController</code>获得绑定的<code>AI Pawn</code></li>\n<li>通过<code>UNavigationSystemV1</code>获得场景的<code>NavMesh</code>导航</li>\n<li>利用<code>BlackBoardComp</code>获得和设置<code>Key</code>值</li>\n<li>以玩家随机进入下一个场景随机点为例</li>\n</ul>\n<p>示例：</p>\n<ul>\n<li><p>定义：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">pragma</span> once</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;CoreMinimal.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;BehaviorTree/BTTaskNode.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;STUNextLocationTask.generated.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">FBlackboardKeySelector</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">UCLASS</span>()</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">B_01_TPS_API</span> USTUNextLocationTask : <span class=\"keyword\">public</span> UBTTaskNode</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">GENERATED_BODY</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">USTUNextLocationTask</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">protected</span>:</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">virtual</span> EBTNodeResult::Type <span class=\"title\">ExecuteTask</span><span class=\"params\">(UBehaviorTreeComponent&amp; OwnerComp, uint8* NodeMemory)</span> <span class=\"keyword\">override</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* My Code */</span></span><br><span class=\"line\">\t<span class=\"comment\">// Property</span></span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(EditAnywhere, BlueprintReadWrite, Category=<span class=\"string\">&quot;AI|Task&quot;</span>, meta=(AllowPrivateAccess=<span class=\"literal\">true</span>))</span><br><span class=\"line\">\t<span class=\"type\">float</span> Radius;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(EditAnywhere, BlueprintReadWrite, Category=<span class=\"string\">&quot;AI|Task&quot;</span>, meta=(AllowPrivateAccess=<span class=\"literal\">true</span>))</span><br><span class=\"line\">\tFBlackboardKeySelector AimLocationKey;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(EditAnywhere, BlueprintReadWrite, Category=<span class=\"string\">&quot;AI|Task&quot;</span>, meta=(AllowPrivateAccess=<span class=\"literal\">true</span>))</span><br><span class=\"line\">\t<span class=\"type\">bool</span> IsSelfCenter;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(EditAnywhere, BlueprintReadWrite, Category=<span class=\"string\">&quot;AI|Task&quot;</span>,</span><br><span class=\"line\">\t\tmeta=(AllowPrivateAccess=<span class=\"literal\">true</span>, EditCondition=<span class=\"string\">&quot;!IsSelfCenter&quot;</span>))</span><br><span class=\"line\">\tFBlackboardKeySelector CenterActorKey;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n\n</li>\n<li><p>实现：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;STUNextLocationTask.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;AIController.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;NavigationSystem.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;BehaviorTree/BlackboardComponent.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">USTUNextLocationTask::<span class=\"built_in\">USTUNextLocationTask</span>()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tRadius = <span class=\"number\">1000.f</span>;</span><br><span class=\"line\">\tNodeName = <span class=\"string\">&quot;Next Location&quot;</span>;</span><br><span class=\"line\">\tIsSelfCenter = <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">EBTNodeResult::Type <span class=\"title\">USTUNextLocationTask::ExecuteTask</span><span class=\"params\">(UBehaviorTreeComponent&amp; OwnerComp, uint8* NodeMemory)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 获得 AIController 和 BlackBoardComp</span></span><br><span class=\"line\">\t<span class=\"type\">const</span> <span class=\"keyword\">auto</span> Controller = OwnerComp.<span class=\"built_in\">GetAIOwner</span>();</span><br><span class=\"line\">\t<span class=\"type\">const</span> <span class=\"keyword\">auto</span> BlackBoard = OwnerComp.<span class=\"built_in\">GetBlackboardComponent</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 通过 AIController 获得 AI Pawn</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!Controller || !BlackBoard)&#123;<span class=\"keyword\">return</span> EBTNodeResult::Failed;&#125;</span><br><span class=\"line\">\t<span class=\"type\">const</span> <span class=\"keyword\">auto</span> Pawn = Controller-&gt;<span class=\"built_in\">GetPawn</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 获得场景中的 NavMeshSystem</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!Pawn)&#123;<span class=\"keyword\">return</span> EBTNodeResult::Failed;&#125;</span><br><span class=\"line\">\t<span class=\"type\">const</span> <span class=\"keyword\">auto</span> NavSys = UNavigationSystemV1::<span class=\"built_in\">GetCurrent</span>(Pawn);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 先获得 AI 当前的位置</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!NavSys)&#123;<span class=\"keyword\">return</span> EBTNodeResult::Failed;&#125;</span><br><span class=\"line\">\tFNavLocation NavLocation;</span><br><span class=\"line\">\t<span class=\"keyword\">auto</span> Location = Pawn-&gt;<span class=\"built_in\">GetActorLocation</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 判断 AI 是否已经到达 随机的位置</span></span><br><span class=\"line\">    <span class=\"comment\">// 通过 黑板组件获得 指定位置的 AI 的 key值</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (IsSelfCenter)&#123;<span class=\"keyword\">return</span> EBTNodeResult::Failed;&#125;</span><br><span class=\"line\">\t<span class=\"type\">const</span> <span class=\"keyword\">auto</span> CenterActor = <span class=\"built_in\">Cast</span>&lt;AActor&gt;(BlackBoard-&gt;<span class=\"built_in\">GetValueAsObject</span>(CenterActorKey.SelectedKeyName));</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 但 AI到达随机位置，设置下个随机点的 位置</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!CenterActor)&#123;<span class=\"keyword\">return</span> EBTNodeResult::Failed;&#125;</span><br><span class=\"line\">\tLocation = CenterActor-&gt;<span class=\"built_in\">GetActorLocation</span>();</span><br><span class=\"line\">\t<span class=\"type\">const</span> <span class=\"type\">bool</span> IsFound = NavSys-&gt;<span class=\"built_in\">GetRandomReachablePointInRadius</span>(Location, Radius, NavLocation);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 设定好下个 随机位置，需要用 黑板组件 设置 新的位置 key值</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!IsFound)&#123;<span class=\"keyword\">return</span> EBTNodeResult::Failed;&#125;</span><br><span class=\"line\">\tBlackBoard-&gt;<span class=\"built_in\">SetValueAsVector</span>(AimLocationKey.SelectedKeyName, NavLocation.Location);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> EBTNodeResult::Succeeded;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"33-BehaviorTree-Service\"><a href=\"#33-BehaviorTree-Service\" class=\"headerlink\" title=\"33. BehaviorTree Service\"></a>33. BehaviorTree Service</h3><p>情景：</p>\n<ul>\n<li>利用前面<code>AIPerceptionComponent</code>，设置新的目标<code>Actor</code></li>\n<li>以通过<code>AIPerceptionComponent</code>获得新目标，设置<code>黑板组件</code>为例</li>\n</ul>\n<p>示例：</p>\n<ul>\n<li><p>定义：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">pragma</span> once</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;CoreMinimal.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;BehaviorTree/BTService.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;STUFindEnemyBTService.generated.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">FBlackboardKeySelector</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">UCLASS</span>()</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">B_01_TPS_API</span> USTUFindEnemyBTService : <span class=\"keyword\">public</span> UBTService</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">GENERATED_BODY</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">USTUFindEnemyBTService</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">protected</span>:</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">virtual</span> <span class=\"type\">void</span> <span class=\"title\">TickNode</span><span class=\"params\">(UBehaviorTreeComponent&amp; OwnerComp, uint8* NodeMemory, <span class=\"type\">float</span> DeltaSeconds)</span> <span class=\"keyword\">override</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* My Code */</span></span><br><span class=\"line\">\t<span class=\"comment\">// Property</span></span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(EditAnywhere, BlueprintReadWrite, Category=<span class=\"string\">&quot;AI&quot;</span>, meta=(AllowPrivateAccess=<span class=\"literal\">true</span>))</span><br><span class=\"line\">\tFBlackboardKeySelector EnemyActorKey;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n\n</li>\n<li><p>实现：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;STUFindEnemyBTService.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;AIController.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;BehaviorTree/BlackboardComponent.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;B_01_TPS/Component/STUAIPerceptionComponent.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;B_01_TPS/Dev/STUUtils.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">USTUFindEnemyBTService::<span class=\"built_in\">USTUFindEnemyBTService</span>()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tNodeName = <span class=\"string\">&quot;Find Enemy&quot;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">USTUFindEnemyBTService::TickNode</span><span class=\"params\">(UBehaviorTreeComponent&amp; OwnerComp, uint8* NodeMemory, <span class=\"type\">float</span> DeltaSeconds)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tSuper::<span class=\"built_in\">TickNode</span>(OwnerComp, NodeMemory, DeltaSeconds);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 获得 黑板 和 AIController</span></span><br><span class=\"line\">\t<span class=\"type\">const</span> <span class=\"keyword\">auto</span> BlackBoard = OwnerComp.<span class=\"built_in\">GetBlackboardComponent</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!BlackBoard)&#123;<span class=\"keyword\">return</span>;&#125;</span><br><span class=\"line\">\t<span class=\"type\">const</span> <span class=\"keyword\">auto</span> Controller = OwnerComp.<span class=\"built_in\">GetAIOwner</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 获得 PerceptionComponent</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!Controller)&#123;<span class=\"keyword\">return</span>;&#125;</span><br><span class=\"line\">\t<span class=\"type\">const</span> <span class=\"keyword\">auto</span> PerceptionComponent = STUUtils::<span class=\"built_in\">GetSTUPlayerComponent</span>&lt;USTUAIPerceptionComponent&gt;(Controller);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 从 PerceptionComponent 得到新的 Actort 设置到 黑板 的 key值</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!PerceptionComponent)&#123;<span class=\"keyword\">return</span>;&#125;</span><br><span class=\"line\">\tBlackBoard-&gt;<span class=\"built_in\">SetValueAsObject</span>(EnemyActorKey.SelectedKeyName, PerceptionComponent-&gt;<span class=\"built_in\">GetClosetEnemy</span>());</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"34-HUD生成Widget\"><a href=\"#34-HUD生成Widget\" class=\"headerlink\" title=\"34. HUD生成Widget\"></a>34. HUD生成Widget</h3><p>情景：</p>\n<ul>\n<li>设置自己的<code>HUD</code>生成指定<code>Widget</code></li>\n</ul>\n<p>示例：</p>\n<ul>\n<li><p>定义：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">pragma</span> once</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;CoreMinimal.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;GameFramework/HUD.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;STUGameHUD.generated.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">UCLASS</span>()</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">B_01_TPS_API</span> ASTUGameHUD : <span class=\"keyword\">public</span> AHUD</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">GENERATED_BODY</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">protected</span>:</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">virtual</span> <span class=\"type\">void</span> <span class=\"title\">BeginPlay</span><span class=\"params\">()</span> <span class=\"keyword\">override</span></span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"comment\">/* My Code */</span></span><br><span class=\"line\">\t<span class=\"comment\">// Function</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">UPROPERTY</span>(EditAnywhere, BlueprintReadWrite, Category=<span class=\"string\">&quot;UI&quot;</span>, meta=(AllowPrivateAccess=<span class=\"literal\">true</span>))</span><br><span class=\"line\">\tTSubclassOf&lt;UUserWidget&gt; PlayerHUDWidgetClass;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n\n</li>\n<li><p>实现：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;STUGameHUD.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;Blueprint/UserWidget.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;Engine/Canvas.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">ASTUGameHUD::BeginPlay</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tSuper::<span class=\"built_in\">BeginPlay</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"type\">const</span> <span class=\"keyword\">auto</span> PlayerHUDWidget = <span class=\"built_in\">CreateWidget</span>&lt;UUserWidget&gt;(<span class=\"built_in\">GetWorld</span>(), PlayerHUDWidgetClass);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!PlayerHUDWidget)&#123;<span class=\"keyword\">return</span>;&#125;</span><br><span class=\"line\">\tPlayerHUDWidget-&gt;<span class=\"built_in\">AddToViewport</span>();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"35-HUD绘制准星\"><a href=\"#35-HUD绘制准星\" class=\"headerlink\" title=\"35. HUD绘制准星\"></a>35. HUD绘制准星</h3><p>情景：</p>\n<ul>\n<li>直接通过<code>HUD</code>生成静态准星</li>\n</ul>\n<p>示例：</p>\n<ul>\n<li><p>定义：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">pragma</span> once</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;CoreMinimal.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;GameFramework/HUD.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;STUGameHUD.generated.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">UCLASS</span>()</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">B_01_TPS_API</span> ASTUGameHUD : <span class=\"keyword\">public</span> AHUD</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">GENERATED_BODY</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">protected</span>:</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">virtual</span> <span class=\"type\">void</span> <span class=\"title\">DrawHUD</span><span class=\"params\">()</span> <span class=\"keyword\">override</span></span>;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">UFUNCTION</span>()</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">DrawCrossHair</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n\n</li>\n<li><p>实现：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;STUGameHUD.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;Blueprint/UserWidget.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;Engine/Canvas.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">ASTUGameHUD::DrawHUD</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tSuper::<span class=\"built_in\">DrawHUD</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">DrawCrossHair</span>();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">ASTUGameHUD::DrawCrossHair</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">const</span> TInterval&lt;<span class=\"type\">float</span>&gt; <span class=\"title\">Center</span><span class=\"params\">(Canvas-&gt;SizeX * <span class=\"number\">0.5f</span>, Canvas-&gt;SizeY * <span class=\"number\">0.5f</span>)</span></span>;</span><br><span class=\"line\">\t<span class=\"keyword\">constexpr</span> <span class=\"type\">float</span> HalfLineSize = <span class=\"number\">10.f</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">constexpr</span> <span class=\"type\">float</span> LineThickness = <span class=\"number\">2.f</span>;</span><br><span class=\"line\">\t<span class=\"type\">const</span> FColor LineColor = FColor::Green;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">DrawLine</span>(</span><br><span class=\"line\">\t\tCenter.Min - HalfLineSize,</span><br><span class=\"line\">\t\tCenter.Max,</span><br><span class=\"line\">\t\tCenter.Min + HalfLineSize,</span><br><span class=\"line\">\t\tCenter.Max,</span><br><span class=\"line\">\t\tLineColor,</span><br><span class=\"line\">\t\tLineThickness);</span><br><span class=\"line\">\t<span class=\"built_in\">DrawLine</span>(</span><br><span class=\"line\">\t\tCenter.Min,</span><br><span class=\"line\">\t\tCenter.Max - HalfLineSize,</span><br><span class=\"line\">\t\tCenter.Min,</span><br><span class=\"line\">\t\tCenter.Max + HalfLineSize,</span><br><span class=\"line\">\t\tLineColor,</span><br><span class=\"line\">\t\tLineThickness);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"36-Widget创建蓝图可用函数\"><a href=\"#36-Widget创建蓝图可用函数\" class=\"headerlink\" title=\"36. Widget创建蓝图可用函数\"></a>36. Widget创建蓝图可用函数</h3><p>情景：</p>\n<ul>\n<li><code>C++</code>创建的<code>Widget</code></li>\n<li>创建<code>蓝图可调用</code>函数</li>\n</ul>\n<p>示例：</p>\n<ul>\n<li><p>定义：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">UCLASS</span>()</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">B_01_TPS_API</span> USTUPlayerHUDWidget : <span class=\"keyword\">public</span> UUserWidget</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">GENERATED_BODY</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* My Code */</span></span><br><span class=\"line\">\t<span class=\"comment\">// Function</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">UFUNCTION</span>(BlueprintCallable)</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">float</span> <span class=\"title\">GetHealthPercent</span><span class=\"params\">()</span> <span class=\"type\">const</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">UFUNCTION</span>(BlueprintCallable)</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">IsPlayerAlive</span><span class=\"params\">()</span> <span class=\"type\">const</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">UFUNCTION</span>(BlueprintCallable)</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">IsPlayerSpectating</span><span class=\"params\">()</span> <span class=\"type\">const</span></span>;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n\n</li>\n<li><p>实现：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;STUPlayerHUDWidget.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;B_01_TPS/Dev/STUUtils.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;B_01_TPS/Component/STUHealthActorComponent.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;B_01_TPS/Component/STUWeaponActorComponent.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">float</span> <span class=\"title\">USTUPlayerHUDWidget::GetHealthPercent</span><span class=\"params\">()</span> <span class=\"type\">const</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">const</span> <span class=\"keyword\">auto</span> HealthComp = STUUtils::<span class=\"built_in\">GetSTUPlayerComponent</span>&lt;USTUHealthActorComponent&gt;(<span class=\"built_in\">GetOwningPlayerPawn</span>());</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (!HealthComp)&#123;<span class=\"keyword\">return</span> <span class=\"number\">0.f</span>;&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> HealthComp-&gt;<span class=\"built_in\">GetHPPercent</span>();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">USTUPlayerHUDWidget::IsPlayerSpectating</span><span class=\"params\">()</span> <span class=\"type\">const</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">const</span> <span class=\"keyword\">auto</span> Controller = <span class=\"built_in\">GetOwningPlayer</span>();</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> Controller &amp;&amp; Controller-&gt;<span class=\"built_in\">GetStateName</span>() == NAME_Spectating;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">USTUPlayerHUDWidget::IsPlayerAlive</span><span class=\"params\">()</span> <span class=\"type\">const</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">const</span> <span class=\"keyword\">auto</span> HealthComp = STUUtils::<span class=\"built_in\">GetSTUPlayerComponent</span>&lt;USTUHealthActorComponent&gt;(<span class=\"built_in\">GetOwningPlayerPawn</span>());</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> HealthComp &amp;&amp; !HealthComp-&gt;<span class=\"built_in\">IsDead</span>();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"37-UPROPERTY\"><a href=\"#37-UPROPERTY\" class=\"headerlink\" title=\"37. UPROPERTY()\"></a>37. UPROPERTY()</h3><p>情景：</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><code>private</code>：需要在蓝图中<code>可读可写</code>，任意处编辑</p>\n<blockquote>\n<p>UPROPERTY(EditAnywhere, BlueprintReadWrite, meta&#x3D;(AllowPrivateAccess&#x3D;true))</p></blockquote>\n</blockquote>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>以 <code>bool IsTrue;</code>为判断标准，为<code>false</code>时，编辑器处为<code>不可编辑</code>状态</p>\n<blockquote>\n<p>UPROPERTY(EditAnywhere, meta&#x3D;(EditCondition&#x3D;”IsTrue”))</p></blockquote>\n</blockquote>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><code>float HP;</code>为例，在编辑器中设置的值要符合一个固定的范围</p>\n<blockquote>\n<p>UPROPERTY(EditAnywhere, meta&#x3D;(ClampMin&#x3D;0, ClampMax&#x3D;100))</p></blockquote>\n</blockquote>\n<h3 id=\"38-check-checkf-checkNoEntry\"><a href=\"#38-check-checkf-checkNoEntry\" class=\"headerlink\" title=\"38. check-checkf-checkNoEntry\"></a>38. check-checkf-checkNoEntry</h3><p>情景：</p>\n<ul>\n<li><p>需要在<code>BeginPlay()</code>检测组件是否有效</p>\n<p><code>check(GetMesh());</code>：如果<code>GetMesh()</code>无效，程序会中断</p>\n</li>\n<li><p>还需要通过条件判断是否有效，同时打印指定语句到日志</p>\n</li>\n<li><p>以<code>float HP;</code>为例，默认<code>BeginPlay()</code>时，<code>HP</code>应该<code>大于0</code></p>\n<p><code>checkf(HP &gt; 0.f, TEXT(&quot;HP Shound Great 0&quot;));</code></p>\n</li>\n<li><p>应用于不可到达的代码片段，当出现不应该出现的情况时，程序中断</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Function</span><span class=\"params\">(AActor* Actor)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (Actor)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        ....</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">checkNoEntry</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n","text":"UE4 功能整理[toc] 1. SpawnActor情景： 我有一个Cpp类 这个Cpp类要生成一个其他Cpp或蓝图类 可以使用TSubclassOf&lt;...","permalink":"/post/7_09_UE4功能整理","photos":[],"count_time":{"symbolsCount":"69k","symbolsTime":"1:03"},"categories":[{"name":"UnrealEngine","slug":"UnrealEngine","count":22,"path":"api/categories/UnrealEngine.json"}],"tags":[{"name":"UnrealEngine","slug":"UnrealEngine","count":22,"path":"api/tags/UnrealEngine.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#UE4-%E5%8A%9F%E8%83%BD%E6%95%B4%E7%90%86\"><span class=\"toc-text\">UE4 功能整理</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-SpawnActor\"><span class=\"toc-text\">1. SpawnActor</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-LineTrace\"><span class=\"toc-text\">2. LineTrace</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-1-UWorld\"><span class=\"toc-text\">2.1 UWorld</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-2-Kismet\"><span class=\"toc-text\">2.2 Kismet</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#2-2-1-LineTraceSingle\"><span class=\"toc-text\">2.2.1 LineTraceSingle</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#2-2-2-LineTraceSingleForObjects\"><span class=\"toc-text\">2.2.2 LineTraceSingleForObjects</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#2-2-3-LineTraceSingleByProfile\"><span class=\"toc-text\">2.2.3 LineTraceSingleByProfile</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-SweepTrace\"><span class=\"toc-text\">3. SweepTrace</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-SphereTrace\"><span class=\"toc-text\">4. SphereTrace</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-Character\"><span class=\"toc-text\">5. Character</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-Pawn\"><span class=\"toc-text\">6. Pawn</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#7-Impulse-Force\"><span class=\"toc-text\">7. Impulse Force</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#8-Add-Force\"><span class=\"toc-text\">8. Add Force</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#9-Radia-Impulse-Force\"><span class=\"toc-text\">9. Radia Impulse Force</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#10-TimerHandle\"><span class=\"toc-text\">10. TimerHandle</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#11-Disable-Actor\"><span class=\"toc-text\">11. Disable Actor</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#12-Hit-Event\"><span class=\"toc-text\">12. Hit Event</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#13-Set-Material\"><span class=\"toc-text\">13. Set Material</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#14-Dynamic-Material\"><span class=\"toc-text\">14. Dynamic Material</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#15-Interp-Target\"><span class=\"toc-text\">15. Interp Target</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#16-Lerp\"><span class=\"toc-text\">16. Lerp</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#18-%E9%BB%91%E6%B4%9E\"><span class=\"toc-text\">18. 黑洞</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#19-%E7%8E%A9%E5%AE%B6%E6%AD%BB%E4%BA%A1%E5%90%8E%E8%BF%9B%E5%85%A5%E8%A7%82%E5%AF%9F\"><span class=\"toc-text\">19. 玩家死亡后进入观察</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#20-%E9%AB%98%E5%A4%84%E5%9D%A0%E8%90%BD%E4%BC%A4%E5%AE%B3\"><span class=\"toc-text\">20. 高处坠落伤害</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#21-FindAnimNotifyByClass\"><span class=\"toc-text\">21. FindAnimNotifyByClass</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#22-%E7%B1%BB%E7%94%9F%E6%88%90%E9%99%84%E5%8A%A0%E5%88%B0%E6%8F%92%E6%A7%BD\"><span class=\"toc-text\">22. 类生成附加到插槽</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#23-CameraShake\"><span class=\"toc-text\">23. CameraShake</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#24-HealthComponent\"><span class=\"toc-text\">24. HealthComponent</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#25-GetActorComponent\"><span class=\"toc-text\">25. GetActorComponent</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#26-%E8%AE%BE%E8%AE%A1%E7%BB%93%E6%9E%84%E4%BD%93%E5%92%8C%E5%A7%94%E6%89%98\"><span class=\"toc-text\">26. 设计结构体和委托</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#27-AIPerception%E8%8E%B7%E5%BE%97%E6%9C%80%E8%BF%91Actor\"><span class=\"toc-text\">27. AIPerception获得最近Actor</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#28-GameMode\"><span class=\"toc-text\">28. GameMode</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#29-%E6%8B%BE%E5%8F%96%E7%89%A9-PickUp\"><span class=\"toc-text\">29. 拾取物-PickUp</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#30-AIController\"><span class=\"toc-text\">30. AIController</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#31-AI%E5%88%9D%E5%A7%8B%E5%8C%96%E5%92%8C%E8%BF%87%E6%B8%A1%E6%97%8B%E8%BD%AC\"><span class=\"toc-text\">31. AI初始化和过渡旋转</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#32-BeHaviorTree-Task\"><span class=\"toc-text\">32. BeHaviorTree Task</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#33-BehaviorTree-Service\"><span class=\"toc-text\">33. BehaviorTree Service</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#34-HUD%E7%94%9F%E6%88%90Widget\"><span class=\"toc-text\">34. HUD生成Widget</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#35-HUD%E7%BB%98%E5%88%B6%E5%87%86%E6%98%9F\"><span class=\"toc-text\">35. HUD绘制准星</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#36-Widget%E5%88%9B%E5%BB%BA%E8%93%9D%E5%9B%BE%E5%8F%AF%E7%94%A8%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">36. Widget创建蓝图可用函数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#37-UPROPERTY\"><span class=\"toc-text\">37. UPROPERTY()</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#38-check-checkf-checkNoEntry\"><span class=\"toc-text\">38. check-checkf-checkNoEntry</span></a></li></ol></li></ol></li></ol>","author":{"name":"FangH","slug":"blog-author","avatar":"/img/fh.png","link":"/","description":"我曾惊鸿一瞥未来","socials":{"github":"https://github.com/FHangH","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/zi-heng-18-99-47","csdn":"https://blog.csdn.net/weixin_44519692?spm=1000.2115.3001.5343","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"UE4 联网和多人游戏","uid":"d2dc88f9aa1b74a2f377fe04af877f8c","slug":"7_05_UE4联网和多人游戏","date":"2022-10-06T07:28:25.963Z","updated":"2023-01-10T01:10:19.442Z","comments":true,"path":"api/articles/7_05_UE4联网和多人游戏.json","keywords":null,"cover":"https://cdn.jsdelivr.net/gh/FHangH/FHangBlogCDN_03@master/Aurora_ (21).webp","text":"UE4 联网和多人游戏[toc] 复制Replication：在客户端服务器间同步数据和调用程序的过程 1. 网络概述1.1 尽早规划多人游戏 若项目可能需要多...","permalink":"/post/7_05_UE4联网和多人游戏","photos":[],"count_time":{"symbolsCount":"56k","symbolsTime":"50 mins."},"categories":[{"name":"UnrealEngine","slug":"UnrealEngine","count":22,"path":"api/categories/UnrealEngine.json"}],"tags":[{"name":"UnrealEngine","slug":"UnrealEngine","count":22,"path":"api/tags/UnrealEngine.json"}],"author":{"name":"FangH","slug":"blog-author","avatar":"/img/fh.png","link":"/","description":"我曾惊鸿一瞥未来","socials":{"github":"https://github.com/FHangH","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/zi-heng-18-99-47","csdn":"https://blog.csdn.net/weixin_44519692?spm=1000.2115.3001.5343","juejin":"","customs":{}}}},"next_post":{"title":"UE4 反射编程","uid":"cde83abaa86ff43674449a34230233bc","slug":"7_08_UE4反射编程","date":"2022-10-06T07:28:25.958Z","updated":"2023-01-10T01:10:19.443Z","comments":true,"path":"api/articles/7_08_UE4反射编程.json","keywords":null,"cover":"https://cdn.jsdelivr.net/gh/FHangH/FHangBlogCDN_03@master/Aurora_ (24).webp","text":"UE4 反射编程[toc] 1. 准备工作 新建空白ue4 cpp项目：Reflective 打开ReflectiveGameModeBase.h 123456...","permalink":"/post/7_08_UE4反射编程","photos":[],"count_time":{"symbolsCount":"31k","symbolsTime":"28 mins."},"categories":[{"name":"UnrealEngine","slug":"UnrealEngine","count":22,"path":"api/categories/UnrealEngine.json"}],"tags":[{"name":"UnrealEngine","slug":"UnrealEngine","count":22,"path":"api/tags/UnrealEngine.json"}],"author":{"name":"FangH","slug":"blog-author","avatar":"/img/fh.png","link":"/","description":"我曾惊鸿一瞥未来","socials":{"github":"https://github.com/FHangH","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/zi-heng-18-99-47","csdn":"https://blog.csdn.net/weixin_44519692?spm=1000.2115.3001.5343","juejin":"","customs":{}}}}}