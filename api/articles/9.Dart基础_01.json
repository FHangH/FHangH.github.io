{"title":"Dart基础","uid":"9db7fbf272adb83d4da91baa664ab4df","slug":"9.Dart基础_01","date":"2022-10-06T07:28:25.973Z","updated":"2023-01-10T01:10:19.438Z","comments":true,"path":"api/articles/9.Dart基础_01.json","keywords":null,"cover":"https://cdn.jsdelivr.net/gh/FHangH/FHangBlogCDN_03@master/Aurora_ (27).webp","content":"<h1 id=\"Dart\"><a href=\"#Dart\" class=\"headerlink\" title=\"Dart\"></a>Dart</h1><p>[toc]</p>\n<h3 id=\"1-Dart-安装\"><a href=\"#1-Dart-安装\" class=\"headerlink\" title=\"1. Dart 安装\"></a>1. Dart 安装</h3><ul>\n<li><p>配套Flutter使用，安装Flutter SDK 1.21之后的版本，默认包含了最新的Dart SDK，不需要再额外安装Dart SDK</p>\n</li>\n<li><p>运行命令</p>\n<pre class=\"line-numbers language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\">PS C:\\Windows\\System32&gt; dart --version\nDart SDK version: 2.12.3 (stable) (Wed Apr 14 11:02:39 2021 +0200) on &quot;windows_x64&quot;</code></pre></li>\n</ul>\n<h3 id=\"2-Dart-环境配置\"><a href=\"#2-Dart-环境配置\" class=\"headerlink\" title=\"2. Dart 环境配置\"></a>2. Dart 环境配置</h3><ol>\n<li>安装完Flutter之后，打开VSCode</li>\n<li>在VSCode的扩展项里，搜索 Dart 和 Code Runner 安装即可</li>\n</ol>\n<h3 id=\"3-Dart-项目文件\"><a href=\"#3-Dart-项目文件\" class=\"headerlink\" title=\"3. Dart 项目文件\"></a>3. Dart 项目文件</h3><ol>\n<li><p>打开VSCode，Ctrl + N，新建文件</p>\n</li>\n<li><p>Ctrl + S，另存为，修改文件后缀名 .dart，即可 (demo.dart)</p>\n<pre class=\"line-numbers language-dart\" data-language=\"dart\"><code class=\"language-dart\">void main() &#123;\n  print(&quot;Hello World !&quot;);\n&#125;</code></pre>\n</li>\n<li><p>Ctrl + Alt + N，运行即可看到打印结果</p>\n<p>或者进入项目内：</p>\n<pre class=\"line-numbers language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\">dart demo1.dart\n\n&#x2F;&#x2F; 实际效果\nPS C:\\Users\\Admin\\Desktop\\dart_demo&gt; dart .\\demo1.dart\nHello World !</code></pre></li>\n</ol>\n<h3 id=\"5-Dart-基本语法\"><a href=\"#5-Dart-基本语法\" class=\"headerlink\" title=\"5. Dart 基本语法\"></a>5. Dart 基本语法</h3><h4 id=\"5-1-Dart-变量类型\"><a href=\"#5-1-Dart-变量类型\" class=\"headerlink\" title=\"5.1 Dart 变量类型\"></a>5.1 Dart 变量类型</h4><pre class=\"line-numbers language-dart\" data-language=\"dart\"><code class=\"language-dart\">void main() &#123;\n  &#x2F;&#x2F; var 可以自动通过类型声明变量\n  var str1 &#x3D; &quot;Hello World 1&quot;;\n  var num1 &#x3D; 1111;\n  print(str1);\n  print(num1);\n\n  &#x2F;&#x2F; 常规的指定变量类型\n  String str2 &#x3D; &quot;Hello World 2&quot;;\n  int num2 &#x3D; 2222;\n  print(str2);\n  print(num2);\n&#125;</code></pre>\n\n\n\n\n\n<h4 id=\"5-2-Dart-常量\"><a href=\"#5-2-Dart-常量\" class=\"headerlink\" title=\"5.2 Dart 常量\"></a>5.2 Dart 常量</h4><ul>\n<li><p>const 修饰，需要赋初值</p>\n</li>\n<li><p>final 修饰，可不赋初值，只能赋值一次</p>\n</li>\n<li><p>永远不改变的值，需要用 const 或 final 修饰，不可用 var 或 其他类型</p>\n<pre class=\"line-numbers language-dart\" data-language=\"dart\"><code class=\"language-dart\">void main() &#123;\n  var str &#x3D; &quot;Hello World 01&quot;;\n  str &#x3D; &quot;Hello World 02&quot;;\n  var num &#x3D; 1111;  \n  num &#x3D; 2222;\n    \n  print(str);\n  print(num);\n\n  const str1 &#x3D; &quot;Fang&quot;;\n  const num1 &#x3D; 2222;\n  &#x2F;&#x2F; const 修饰后，再次赋值无效\n  str1 &#x3D; &quot;Hang&quot;;\n  num1 &#x3D; 1234;\n\n  print(str1);\n  print(num1);\n&#125;\n\n#打印效果：显示错误#\nPS C:\\Users\\Admin&gt; dart &quot;c:\\Users\\Admin\\Desktop\\dart_demo\\demo1.dart&quot;\nDesktop&#x2F;dart_demo&#x2F;demo1.dart:13:3: Error: Can&#39;t assign to the const variable &#39;str1&#39;.\n  str1 &#x3D; &quot;Hang&quot;;\n  ^^^^\nDesktop&#x2F;dart_demo&#x2F;demo1.dart:14:3: Error: Can&#39;t assign to the const variable &#39;num1&#39;.\n  num1 &#x3D; 1234;\n  ^^^^</code></pre>\n</li>\n<li><p>final 和 const 的区别：（final只有在在运行时才会赋值一次，而const必须提前赋值）</p>\n<pre class=\"line-numbers language-dart\" data-language=\"dart\"><code class=\"language-dart\">void main() &#123;\n  final f_timeNow &#x3D; new DateTime.now();\n  print(f_timeNow);\n\n  &#x2F;&#x2F; 错误的用法\n  const c_timeNow &#x3D; new DateTime.now();\n  print(c_timeNow);\n&#125;\n\n#打印效果：显示错误#\nPS C:\\Users\\Admin&gt; dart &quot;c:\\Users\\Admin\\Desktop\\dart_demo\\demo1.dart&quot;\nDesktop&#x2F;dart_demo&#x2F;demo1.dart:5:21: Error: New expression is not a constant expression.\n  const c_timeNow &#x3D; new DateTime.now();\n                    ^^^</code></pre></li>\n</ul>\n<h4 id=\"5-3-Dart-数据类型\"><a href=\"#5-3-Dart-数据类型\" class=\"headerlink\" title=\"5.3 Dart 数据类型\"></a>5.3 Dart 数据类型</h4><ul>\n<li>常用的数据类型：<ol>\n<li>Number（数值）<ul>\n<li>int</li>\n<li>double</li>\n</ul>\n</li>\n<li>String（字符串）<ul>\n<li>String</li>\n</ul>\n</li>\n<li>Boolen（布尔）<ul>\n<li>bool</li>\n</ul>\n</li>\n<li>List（数组）<ul>\n<li>在Dart中，数组是列表的对象，大部分情况下称之为列表</li>\n</ul>\n</li>\n<li>Map（字典）<ul>\n<li>Map是一个（键，值）对的对象，（键，值）可以是任何类型的对象</li>\n</ul>\n</li>\n</ol>\n</li>\n<li>不常用的数据类型：<ol>\n<li>Rune：Dart中UTF-32编码字符串，可以通过文字转换成符号表情或特定的字</li>\n<li>Symbol：Dart程序中声明的运算符和标识符</li>\n</ol>\n</li>\n</ul>\n<h4 id=\"5-4-Dart-字符串\"><a href=\"#5-4-Dart-字符串\" class=\"headerlink\" title=\"5.4 Dart 字符串\"></a>5.4 Dart 字符串</h4><h5 id=\"5-4-1-Dart-字符串定义\"><a href=\"#5-4-1-Dart-字符串定义\" class=\"headerlink\" title=\"5.4.1 Dart 字符串定义\"></a>5.4.1 Dart 字符串定义</h5><ul>\n<li><p>不换行（示例）：单引号 &#x2F;&#x2F; 双引号</p>\n<pre class=\"line-numbers language-dart\" data-language=\"dart\"><code class=\"language-dart\">void main() &#123;\n  var str1 &#x3D; &#39;test string 01&#39;;\n  String str2 &#x3D; &quot;test string 02&quot;;\n\n  print(str1);\n  print(str2);\n&#125;</code></pre>\n</li>\n<li><p>不换行（打印）：</p>\n<pre class=\"line-numbers language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\">PS C:\\Users\\Admin\\Desktop\\dart_demo&gt; dart .\\demo01.dart\ntest string 01\ntest string 02</code></pre>\n</li>\n<li><p>换行（示例）：三个单引号 &#x2F;&#x2F; 三对双引号</p>\n<pre class=\"line-numbers language-dart\" data-language=\"dart\"><code class=\"language-dart\">void main() &#123;\n  String str1 &#x3D; &#39;&#39;&#39;\n  Test String 01\n  Test String 02\n  &#39;&#39;&#39;;\n\n  String str2 &#x3D; &quot;&quot;&quot;\n  Test String 03\n  Test String 04\n  &quot;&quot;&quot;;\n\n  print(str1);\n  print(str2);\n&#125;</code></pre>\n</li>\n<li><p>换行（打印）：</p>\n<pre class=\"line-numbers language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\">PS C:\\Users\\Admin\\Desktop\\dart_demo&gt; dart .\\demo01.dart\n  Test String 01\n  Test String 02\n\n  Test String 03\n  Test String 04</code></pre></li>\n</ul>\n<h5 id=\"5-4-2-Dart-字符串拼接\"><a href=\"#5-4-2-Dart-字符串拼接\" class=\"headerlink\" title=\"5.4.2 Dart 字符串拼接\"></a>5.4.2 Dart 字符串拼接</h5><ul>\n<li><p>将两个字符串拼接</p>\n<pre class=\"line-numbers language-dart\" data-language=\"dart\"><code class=\"language-dart\">&#39;$str1 $str2&#39;\n&quot;$str1 $str2&quot;\n str1 + str2</code></pre>\n\n<pre class=\"line-numbers language-dart\" data-language=\"dart\"><code class=\"language-dart\">void main() &#123;\n  String str1 &#x3D; &#39;Hello&#39;;\n  String str2 &#x3D; &#39;Wrold&#39;;\n\n  print(str1 + &#39; &#39; + str2);\n  print(&#39;$str1 $str2&#39;);\n&#125;</code></pre>\n</li>\n<li><p>打印结果：</p>\n<pre class=\"line-numbers language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\">PS C:\\Users\\Admin\\Desktop\\dart_demo&gt; dart .\\demo01.dart\nHello Wrold\nHello Wrold</code></pre></li>\n</ul>\n<h4 id=\"5-5-Dart-数值计算\"><a href=\"#5-5-Dart-数值计算\" class=\"headerlink\" title=\"5.5 Dart 数值计算\"></a>5.5 Dart 数值计算</h4><pre class=\"line-numbers language-dart\" data-language=\"dart\"><code class=\"language-dart\">void main() &#123;\n  int a &#x3D; 12;\n  double b &#x3D; 24.0;\n  double c &#x3D; 48;\n\n  print(a);\n  print(b);\n  print(c);\n\n  print(&#39;-------&#39;);\n\n  var d &#x3D; a + c;\n  var e &#x3D; c - a;\n  var f &#x3D; a * b;\n  var g &#x3D; c &#x2F; a;\n  var h &#x3D; b % a;\n\n  print(d);\n  print(e);\n  print(f);\n  print(g);\n  print(h);\n&#125;</code></pre>\n\n<pre class=\"line-numbers language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\">PS C:\\Users\\Admin\\Desktop\\dart_demo&gt; dart .\\demo01.dart\n12\n24.0   \n48.0   \n-------\n60.0   \n36.0\n288.0\n4.0\n0.0</code></pre>\n\n\n\n\n\n<h4 id=\"5-6-Dart-布尔类型\"><a href=\"#5-6-Dart-布尔类型\" class=\"headerlink\" title=\"5.6 Dart 布尔类型\"></a>5.6 Dart 布尔类型</h4><pre class=\"line-numbers language-dart\" data-language=\"dart\"><code class=\"language-dart\">void main() &#123;\n  int a &#x3D; 12;\n  int b &#x3D; 12;\n  if (a &#x3D;&#x3D; b) &#123;\n    print(&#39;a &#x3D; b&#39;);\n  &#125; else &#123;\n    print(&#39;a !&#x3D; b&#39;);\n  &#125;\n\n  bool c &#x3D; true;\n  bool d &#x3D; false;\n  if (c &#x3D;&#x3D; d) &#123;\n    print(&#39;c &#x3D; d&#39;);\n  &#125; else &#123;\n    print(&#39;c !&#x3D; d&#39;);\n  &#125;\n&#125;</code></pre>\n\n<pre class=\"line-numbers language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\">PS C:\\Users\\Admin\\Desktop\\dart_demo&gt; dart .\\demo01.dart\na &#x3D; b\nc !&#x3D; d</code></pre>\n\n\n\n\n\n<h4 id=\"5-7-List-集合类型\"><a href=\"#5-7-List-集合类型\" class=\"headerlink\" title=\"5.7 List 集合类型\"></a>5.7 List 集合类型</h4><ul>\n<li><p>不指定类型</p>\n<pre class=\"line-numbers language-dart\" data-language=\"dart\"><code class=\"language-dart\">void main() &#123;\n  var list1 &#x3D; [&quot;FHang&quot;, 24, true];\n  print(&quot;list1:&quot;);\n  print(list1);\n  print(&quot;--------&quot;);\n\n  print(&quot;list frist:&quot;);\n  print(list1.first);\n  print(list1[0]);\n  print(&quot;--------&quot;);\n\n  print(&quot;list second:&quot;);\n  print(list1[1]);\n  print(&quot;--------&quot;);\n\n  print(&quot;list last:&quot;);\n  print(list1.last);\n  print(list1[2]);\n  print(&quot;--------&quot;);\n\n  print(&quot;list length:&quot;);\n  print(list1.length);\n&#125;</code></pre>\n\n<pre class=\"line-numbers language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\">PS C:\\Users\\Admin\\Desktop\\dart_demo&gt; dart .\\demo01.dart\nlist1:\n[FHang, 24, true]\n--------\nlist frist:      \nFHang\nFHang\n--------\nlist second:\n24\n--------\nlist last:\ntrue\ntrue\n--------\nlist length:\n3</code></pre>\n</li>\n<li><p>指定类型</p>\n<pre class=\"line-numbers language-dart\" data-language=\"dart\"><code class=\"language-dart\">void main() &#123;\n  var list1 &#x3D; &lt;String&gt;[&quot;Fang&quot;, &quot;Hang&quot;];\n  print(list1.first);\n  print(list1.last);\n&#125;</code></pre>\n\n<pre class=\"line-numbers language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\">PS C:\\Users\\Admin\\Desktop\\dart_demo&gt; dart .\\demo01.dart\nFang\nHang</code></pre>\n</li>\n<li><p>添加&#x2F;删除数据到集合</p>\n<pre class=\"line-numbers language-dart\" data-language=\"dart\"><code class=\"language-dart\">void main() &#123;\n  var list1 &#x3D; [];\n  print(list1.length);\n  print(&quot;--------&quot;);\n\n  &#x2F;&#x2F;添加\n  list1.add(&quot;Fang&quot;);\n  list1.add(&quot;Hang&quot;);\n  list1.add(24);\n  print(list1);\n  print(list1.length);\n  print(&quot;--------&quot;);\n\n  &#x2F;&#x2F;删除\n  list1.removeAt(1);\n  print(list1);\n  print(list1.length);\n&#125;</code></pre>\n\n<pre class=\"line-numbers language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\">PS C:\\Users\\Admin\\Desktop\\dart_demo&gt; dart .\\demo01.dart\n0\n--------        \n[Fang, Hang, 24]\n3\n--------        \n[Fang, 24]\n2</code></pre>\n</li>\n<li><p>通过List.filled 来创建固定大小的集合</p>\n<pre class=\"line-numbers language-dart\" data-language=\"dart\"><code class=\"language-dart\">void main() &#123;\n  &#x2F;&#x2F; 不指定类型\n  var list1 &#x3D; List.filled(2, &quot;&quot;);\n  &#x2F;&#x2F; 指定类型\n  &#x2F;&#x2F; var list2 &#x3D; List&lt;String&gt;.filled(2, &quot;&quot;);\n  print(list1.length);\n  print(list1);\n\n  list1[0] &#x3D; &quot;Fang&quot;;\n  list1[1] &#x3D; &quot;hang&quot;;\n  print(list1);\n&#125;</code></pre>\n\n<pre class=\"line-numbers language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\">PS C:\\Users\\Admin\\Desktop\\dart_demo&gt; dart .\\demo01.dart\n2\n[, ]        \n[Fang, hang]</code></pre></li>\n</ul>\n","text":"Dart[toc] 1. Dart 安装 配套Flutter使用，安装Flutter SDK 1.21之后的版本，默认包含了最新的Dart SDK，不需要再额外安装Dart SDK 运行命令 PS C:\\Windows\\System32&gt; dart --version Da...","link":"","photos":[],"count_time":{"symbolsCount":"6.4k","symbolsTime":"6 mins."},"categories":[{"name":"编程","slug":"编程","count":16,"path":"api/categories/编程.json"}],"tags":[{"name":"Dart","slug":"Dart","count":1,"path":"api/tags/Dart.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Dart\"><span class=\"toc-text\">Dart</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-Dart-%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">1. Dart 安装</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-Dart-%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">2. Dart 环境配置</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-Dart-%E9%A1%B9%E7%9B%AE%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">3. Dart 项目文件</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-Dart-%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95\"><span class=\"toc-text\">5. Dart 基本语法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#5-1-Dart-%E5%8F%98%E9%87%8F%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">5.1 Dart 变量类型</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#5-2-Dart-%E5%B8%B8%E9%87%8F\"><span class=\"toc-text\">5.2 Dart 常量</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#5-3-Dart-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">5.3 Dart 数据类型</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#5-4-Dart-%E5%AD%97%E7%AC%A6%E4%B8%B2\"><span class=\"toc-text\">5.4 Dart 字符串</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#5-4-1-Dart-%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%AE%9A%E4%B9%89\"><span class=\"toc-text\">5.4.1 Dart 字符串定义</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#5-4-2-Dart-%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%8B%BC%E6%8E%A5\"><span class=\"toc-text\">5.4.2 Dart 字符串拼接</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#5-5-Dart-%E6%95%B0%E5%80%BC%E8%AE%A1%E7%AE%97\"><span class=\"toc-text\">5.5 Dart 数值计算</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#5-6-Dart-%E5%B8%83%E5%B0%94%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">5.6 Dart 布尔类型</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#5-7-List-%E9%9B%86%E5%90%88%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">5.7 List 集合类型</span></a></li></ol></li></ol></li></ol></li></ol>","author":{"name":"FangH","slug":"blog-author","avatar":"/img/fh.png","link":"/","description":"我曾惊鸿一瞥未来","socials":{"github":"https://github.com/FHangH","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/zi-heng-18-99-47","csdn":"https://blog.csdn.net/weixin_44519692?spm=1000.2115.3001.5343","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Java基础","uid":"3316961ecf1671c6065b043220187c47","slug":"10.Java基础","date":"2022-10-06T07:28:25.975Z","updated":"2023-01-10T01:10:19.450Z","comments":true,"path":"api/articles/10.Java基础.json","keywords":null,"cover":"https://cdn.jsdelivr.net/gh/FHangH/FHangBlogCDN_03@master/Aurora_ (28).webp","text":"Java基础[toc] 1. Java环境配置1.1 手动配置Java环境1.1.1 Oracle官网获得JDK Java-JDK 获得JDK，默认安装C盘即可 1.1.2 配置环境变量 在系统变量，设置三项属性： JAVA_HOME PATH CLASSPATH（JDK1.5版...","link":"","photos":[],"count_time":{"symbolsCount":"50k","symbolsTime":"45 mins."},"categories":[{"name":"编程","slug":"编程","count":16,"path":"api/categories/编程.json"}],"tags":[{"name":"Java","slug":"Java","count":1,"path":"api/tags/Java.json"}],"author":{"name":"FangH","slug":"blog-author","avatar":"/img/fh.png","link":"/","description":"我曾惊鸿一瞥未来","socials":{"github":"https://github.com/FHangH","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/zi-heng-18-99-47","csdn":"https://blog.csdn.net/weixin_44519692?spm=1000.2115.3001.5343","juejin":"","customs":{}}}},"next_post":{"title":"Flutter基础","uid":"d3adb67f358afb69b06b3570d65b1657","slug":"8.Flutter基础_01","date":"2022-10-06T07:28:25.970Z","updated":"2023-01-10T01:10:19.438Z","comments":true,"path":"api/articles/8.Flutter基础_01.json","keywords":null,"cover":"https://cdn.jsdelivr.net/gh/FHangH/FHangBlogCDN_03@master/Aurora_ (26).webp","text":"Flutter[toc] 1. Flutter 安装 开始使用 — Windows — 获取 Flutter SDK — 下载 将压缩包解压 — 找到 bin 目录 — 复制 bin 目录路径 进入Win10 环境变量设置 — 系统变量 — Path — 将复制的目录添加 回到中...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"编程","slug":"编程","count":16,"path":"api/categories/编程.json"}],"tags":[{"name":"Flutter","slug":"Flutter","count":1,"path":"api/tags/Flutter.json"}],"author":{"name":"FangH","slug":"blog-author","avatar":"/img/fh.png","link":"/","description":"我曾惊鸿一瞥未来","socials":{"github":"https://github.com/FHangH","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/zi-heng-18-99-47","csdn":"https://blog.csdn.net/weixin_44519692?spm=1000.2115.3001.5343","juejin":"","customs":{}}}}}